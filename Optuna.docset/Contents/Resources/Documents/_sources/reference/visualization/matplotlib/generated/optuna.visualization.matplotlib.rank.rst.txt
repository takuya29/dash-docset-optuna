
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "reference/visualization/matplotlib/generated/optuna.visualization.matplotlib.rank.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_reference_visualization_matplotlib_generated_optuna.visualization.matplotlib.rank.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_reference_visualization_matplotlib_generated_optuna.visualization.matplotlib.rank.py:


plot_rank
=========

.. autofunction:: optuna.visualization.matplotlib.plot_rank

The following code snippet shows how to plot the parameter relationship as a rank plot.

.. GENERATED FROM PYTHON SOURCE LINES 11-34



.. image-sg:: /reference/visualization/matplotlib/generated/images/sphx_glr_optuna.visualization.matplotlib.rank_001.png
   :alt: Rank (Objective Value)
   :srcset: /reference/visualization/matplotlib/generated/images/sphx_glr_optuna.visualization.matplotlib.rank_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/optuna/_experimental.py:31: ExperimentalWarning:

    Argument ``constraints_func`` is an experimental feature. The interface can change in the future.

    /home/runner/work/dash-docset-optuna/dash-docset-optuna/optuna/docs/visualization_matplotlib_examples/optuna.visualization.matplotlib.rank.py:33: ExperimentalWarning:

    plot_rank is experimental (supported from v3.2.0). The interface can change in the future.


    <Axes: title={'center': 'Rank (Objective Value)'}, xlabel='x', ylabel='y'>





|

.. code-block:: Python


    import optuna


    def objective(trial):
        x = trial.suggest_float("x", -100, 100)
        y = trial.suggest_categorical("y", [-1, 0, 1])

        c0 = 400 - (x + y) ** 2
        trial.set_user_attr("constraint", [c0])

        return x**2 + y


    def constraints(trial):
        return trial.user_attrs["constraint"]


    sampler = optuna.samplers.TPESampler(seed=10, constraints_func=constraints)
    study = optuna.create_study(sampler=sampler)
    study.optimize(objective, n_trials=30)

    optuna.visualization.matplotlib.plot_rank(study, params=["x", "y"])


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.503 seconds)


.. _sphx_glr_download_reference_visualization_matplotlib_generated_optuna.visualization.matplotlib.rank.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: optuna.visualization.matplotlib.rank.ipynb <optuna.visualization.matplotlib.rank.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: optuna.visualization.matplotlib.rank.py <optuna.visualization.matplotlib.rank.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: optuna.visualization.matplotlib.rank.zip <optuna.visualization.matplotlib.rank.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
