
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "reference/visualization/matplotlib/generated/optuna.visualization.matplotlib.terminator_improvement.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_reference_visualization_matplotlib_generated_optuna.visualization.matplotlib.terminator_improvement.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_reference_visualization_matplotlib_generated_optuna.visualization.matplotlib.terminator_improvement.py:


plot_terminator_improvement
===========================

.. autofunction:: optuna.visualization.matplotlib.plot_terminator_improvement

The following code snippet shows how to plot improvement potentials,
together with cross-validation errors.

.. GENERATED FROM PYTHON SOURCE LINES 12-42



.. image-sg:: /reference/visualization/matplotlib/generated/images/sphx_glr_optuna.visualization.matplotlib.terminator_improvement_001.png
   :alt: Terminator Improvement Plot
   :srcset: /reference/visualization/matplotlib/generated/images/sphx_glr_optuna.visualization.matplotlib.terminator_improvement_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /home/runner/work/dash-docset-optuna/dash-docset-optuna/optuna/docs/visualization_matplotlib_examples/optuna.visualization.matplotlib.terminator_improvement.py:41: ExperimentalWarning:

    plot_terminator_improvement is experimental (supported from v3.2.0). The interface can change in the future.

    /opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/optuna/visualization/_terminator_improvement.py:93: ExperimentalWarning:

    RegretBoundEvaluator is experimental (supported from v3.2.0). The interface can change in the future.

    /opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/optuna/visualization/_terminator_improvement.py:98: ExperimentalWarning:

    CrossValidationErrorEvaluator is experimental (supported from v3.2.0). The interface can change in the future.

      0%|          | 0/30 [00:00<?, ?it/s]     20%|██        | 6/30 [00:00<00:00, 53.33it/s]     40%|████      | 12/30 [00:00<00:00, 26.64it/s]     53%|█████▎    | 16/30 [00:00<00:00, 29.07it/s]     67%|██████▋   | 20/30 [00:00<00:00, 26.85it/s]     77%|███████▋  | 23/30 [00:01<00:00, 17.90it/s]     87%|████████▋ | 26/30 [00:01<00:00, 15.91it/s]     93%|█████████▎| 28/30 [00:01<00:00, 14.34it/s]    100%|██████████| 30/30 [00:01<00:00, 13.73it/s]    100%|██████████| 30/30 [00:01<00:00, 18.44it/s]

    <Axes: title={'center': 'Terminator Improvement Plot'}, xlabel='Trial', ylabel='Terminator Improvement'>





|

.. code-block:: Python


    from lightgbm import LGBMClassifier
    from sklearn.datasets import load_wine
    from sklearn.model_selection import cross_val_score
    from sklearn.model_selection import KFold
    import optuna
    from optuna.terminator import report_cross_validation_scores
    from optuna.visualization.matplotlib import plot_terminator_improvement


    def objective(trial):
        X, y = load_wine(return_X_y=True)
        clf = LGBMClassifier(
            reg_alpha=trial.suggest_float("reg_alpha", 1e-8, 10.0, log=True),
            reg_lambda=trial.suggest_float("reg_lambda", 1e-8, 10.0, log=True),
            num_leaves=trial.suggest_int("num_leaves", 2, 256),
            colsample_bytree=trial.suggest_float("colsample_bytree", 0.4, 1.0),
            subsample=trial.suggest_float("subsample", 0.4, 1.0),
            subsample_freq=trial.suggest_int("subsample_freq", 1, 7),
            min_child_samples=trial.suggest_int("min_child_samples", 5, 100),
        )
        scores = cross_val_score(clf, X, y, cv=KFold(n_splits=5, shuffle=True))
        report_cross_validation_scores(trial, scores)
        return scores.mean()


    study = optuna.create_study()
    study.optimize(objective, n_trials=30)

    plot_terminator_improvement(study, plot_error=True)


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 3.672 seconds)


.. _sphx_glr_download_reference_visualization_matplotlib_generated_optuna.visualization.matplotlib.terminator_improvement.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: optuna.visualization.matplotlib.terminator_improvement.ipynb <optuna.visualization.matplotlib.terminator_improvement.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: optuna.visualization.matplotlib.terminator_improvement.py <optuna.visualization.matplotlib.terminator_improvement.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: optuna.visualization.matplotlib.terminator_improvement.zip <optuna.visualization.matplotlib.terminator_improvement.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
