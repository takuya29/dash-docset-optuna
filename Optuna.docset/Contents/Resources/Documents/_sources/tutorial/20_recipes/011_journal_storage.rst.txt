
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "tutorial/20_recipes/011_journal_storage.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_tutorial_20_recipes_011_journal_storage.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_tutorial_20_recipes_011_journal_storage.py:


.. _journal_storage:

(File-based) Journal Storage
============================

Optuna provides :class:`~optuna.storages.JournalStorage`. With this feature, you can easily run a
distributed optimization over network using NFS as the shared storage, without need for setting up
RDB or Redis.

.. GENERATED FROM PYTHON SOURCE LINES 12-36

.. code-block:: Python


    import logging
    import sys

    import optuna


    # Add stream handler of stdout to show the messages
    optuna.logging.get_logger("optuna").addHandler(logging.StreamHandler(sys.stdout))
    study_name = "example-study"  # Unique identifier of the study.
    storage = optuna.storages.JournalStorage(
        optuna.storages.JournalFileStorage("./journal.log"),  # NFS path for distributed optimization
    )

    study = optuna.create_study(study_name=study_name, storage=storage)


    def objective(trial):
        x = trial.suggest_float("x", -10, 10)
        return (x - 2) ** 2


    study.optimize(objective, n_trials=3)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /home/runner/work/dash-docset-optuna/dash-docset-optuna/optuna/tutorial/20_recipes/011_journal_storage.py:22: ExperimentalWarning:

    JournalStorage is experimental (supported from v3.1.0). The interface can change in the future.

    A new study created in Journal with name: example-study
    Trial 0 finished with value: 11.206772453700179 and parameters: {'x': -1.3476517820257499}. Best is trial 0 with value: 11.206772453700179.
    Trial 1 finished with value: 3.9679075544708735 and parameters: {'x': 0.008039268843164749}. Best is trial 1 with value: 3.9679075544708735.
    Trial 2 finished with value: 69.8796965047202 and parameters: {'x': -6.359407664704491}. Best is trial 1 with value: 3.9679075544708735.




.. GENERATED FROM PYTHON SOURCE LINES 37-40

Although the optimization in this example is too short to run in parallel, you can extend this
example to write a optimization script which can be run in parallel.


.. GENERATED FROM PYTHON SOURCE LINES 42-47

.. note::
    In a Windows environment, an error message "A required privilege is not held by the client"
    may appear. In this case, you can solve the problem with creating storage by specifying
    :class:`~optuna.storages.JournalFileOpenLock`. See the reference of
    :class:`~optuna.storages.JournalStorage` for any details.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.010 seconds)


.. _sphx_glr_download_tutorial_20_recipes_011_journal_storage.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: 011_journal_storage.ipynb <011_journal_storage.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: 011_journal_storage.py <011_journal_storage.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
