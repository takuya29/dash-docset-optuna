
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "tutorial/20_recipes/013_wilcoxon_pruner.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_tutorial_20_recipes_013_wilcoxon_pruner.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_tutorial_20_recipes_013_wilcoxon_pruner.py:


.. _wilcoxon_pruner:

Early-stopping independent evaluations by Wilcoxon pruner
============================================================

This tutorial showcases Optuna's `WilcoxonPruner <https://optuna.readthedocs.io/en/latest/reference/generated/optuna.pruners.WilcoxonPruner.html>`_.
This pruner is effective for objective functions that averages multiple evaluations.

We solve `Traveling Salesman Problem (TSP) <https://en.wikipedia.org/w/index.php?title=Travelling_salesman_problem&oldid=1211575788>`_
by `Simulated Annealing (SA) <https://en.wikipedia.org/w/index.php?title=Simulated_annealing&oldid=1187355062>`_.

Overview: Solving Traveling Salesman Problem with Simulated Annealing
----------------------------------------------------------------------------

Traveling Salesman Problem (TSP) is a classic problem in combinatorial optimization
that involves finding the shortest possible route for a salesman
who needs to visit a set of cities, each exactly once, and return to the starting city.
TSP has been extensively studied in fields such as mathematics, computer science,
and operations research, and has numerous practical applications in logistics,
manufacturing, and DNA sequencing, among others.
The problem is classified as NP-hard, so approximation algorithms or
heuristic methods are commonly employed for larger instances.

One simple heuristic method applicable to TSP is simulated annealing (SA).
SA starts with an initial solution (it can be constructed by a simpler heuristic
like greedy method), and it randomly checks the neighborhood (defined later)
of the solution. If a neighbor is better, the solution is updated to the neighbor.
If the neighbor is worse, SA still updates the solution to the neighbor with
probability :math:`e^{-\Delta c / T}`, where
:math:`\Delta c (> 0)` is the difference of
the cost (sum of the distance) between the new solution and the old one and
:math:`T` is a parameter called "temperature". The temperature controls
how much worsening of the solution is tolerated to escape from the local minimum
(high means more tolerant). If the temperature is too low, SA will quickly
fall into a local minimum; if the temperature is too high, SA will be like
a random walk and the optimization will be inefficient. Typically, we set a
"temperature schedule" that starts from a high temperature and gradually
decreases to zero.

There are several ways to define neighborhood for TSP, but we use a
simple neighborhood called `2-opt <https://en.wikipedia.org/w/index.php?title=2-opt&oldid=1194969927>`_. 2-opt neighbor chooses a path in
the current solution and reverses the visiting order in the path.
For example, if the initial solution is `a→b→c→d→e→a`, `a→d→c→b→e→a` is
a 2-opt neighbor (the path from `b` to `d` is reversed).
This neighborhood is good because computing the difference of the cost
can be done in constant time (we only need to care about the start
and the end of the chosen path).

Main Tutorial: Tuning SA Parameters for TSP
====================================================

First, let's import some packages and define the parameters setting of SA
and the cost function of TSP.

.. GENERATED FROM PYTHON SOURCE LINES 56-78

.. code-block:: Python


    from dataclasses import dataclass
    import math

    import numpy as np
    import optuna
    import plotly.graph_objects as go
    from numpy.linalg import norm


    @dataclass
    class SAOptions:
        max_iter: int = 10000
        T0: float = 1.0
        alpha: float = 2.0
        patience: int = 50


    def tsp_cost(vertices: np.ndarray, idxs: np.ndarray) -> float:
        return norm(vertices[idxs] - vertices[np.roll(idxs, 1)], axis=-1).sum()









.. GENERATED FROM PYTHON SOURCE LINES 79-80

Greedy solution for initial guess.

.. GENERATED FROM PYTHON SOURCE LINES 80-91

.. code-block:: Python



    def tsp_greedy(vertices: np.ndarray) -> np.ndarray:
        idxs = [0]
        for _ in range(len(vertices) - 1):
            dists_from_last = norm(vertices[idxs[-1], None] - vertices, axis=-1)
            dists_from_last[idxs] = np.inf
            idxs.append(np.argmin(dists_from_last))
        return np.array(idxs)









.. GENERATED FROM PYTHON SOURCE LINES 92-96

.. note::
    For simplicity of implementation, we use SA with the 2-opt neighborhood to solve TSP,
    but note that this is far from the "best" way to solve TSP. There are significantly more
    advanced methods than this method.

.. GENERATED FROM PYTHON SOURCE LINES 99-100

The implementation of SA with 2-opt neighborhood is following.

.. GENERATED FROM PYTHON SOURCE LINES 100-152

.. code-block:: Python



    def tsp_simulated_annealing(vertices: np.ndarray, options: SAOptions) -> np.ndarray:

        def temperature(t: float):
            assert 0.0 <= t and t <= 1.0
            return options.T0 * (1 - t) ** options.alpha

        N = len(vertices)

        idxs = tsp_greedy(vertices)
        cost = tsp_cost(vertices, idxs)
        best_idxs = idxs.copy()
        best_cost = cost
        remaining_patience = options.patience

        for iter in range(options.max_iter):

            i = np.random.randint(0, N)
            j = (i + 2 + np.random.randint(0, N - 3)) % N
            i, j = min(i, j), max(i, j)
            # Reverse the order of vertices between range [i+1, j].

            # cost difference by 2-opt reversal
            delta_cost = (
                -norm(vertices[idxs[(i + 1) % N]] - vertices[idxs[i]])
                - norm(vertices[idxs[j]] - vertices[idxs[(j + 1) % N]])
                + norm(vertices[idxs[i]] - vertices[idxs[j]])
                + norm(vertices[idxs[(i + 1) % N]] - vertices[idxs[(j + 1) % N]])
            )
            temp = temperature(iter / options.max_iter)
            if delta_cost <= 0.0 or np.random.random() < math.exp(-delta_cost / temp):
                # accept the 2-opt reversal
                cost += delta_cost
                idxs[i + 1 : j + 1] = idxs[i + 1 : j + 1][::-1]
                if cost < best_cost:
                    best_idxs[:] = idxs
                    best_cost = cost
                    remaining_patience = options.patience

            if cost > best_cost:
                # If the best solution is not updated for "patience" iteratoins,
                # restart from the best solution.
                remaining_patience -= 1
                if remaining_patience == 0:
                    idxs[:] = best_idxs
                    cost = best_cost
                    remaining_patience = options.patience

        return best_idxs









.. GENERATED FROM PYTHON SOURCE LINES 153-154

We make a random dataset of TSP.

.. GENERATED FROM PYTHON SOURCE LINES 154-169

.. code-block:: Python



    def make_dataset(num_vertex: int, num_problem: int, seed: int = 0) -> np.ndarray:
        rng = np.random.default_rng(seed=seed)
        return rng.random((num_problem, num_vertex, 2))


    dataset = make_dataset(
        num_vertex=100,
        num_problem=50,
    )

    N_TRIALS = 50









.. GENERATED FROM PYTHON SOURCE LINES 170-172

We set a very small number of SA iterations for demonstration purpose.
In practice, you should set a larger number of iterations (e.g., 1000000).

.. GENERATED FROM PYTHON SOURCE LINES 172-177

.. code-block:: Python



    N_SA_ITER = 10000









.. GENERATED FROM PYTHON SOURCE LINES 178-179

We counts the number of evaluation to know how many problems is pruned.

.. GENERATED FROM PYTHON SOURCE LINES 179-184

.. code-block:: Python



    num_evaluation = 0









.. GENERATED FROM PYTHON SOURCE LINES 185-214

In this tutorial, we optimize three parameters: ``T0``, ``alpha``, and ``patience``.

``T0`` and ``alpha`` defining the temperature schedule
---------------------------------------------------------------------------------------

In simulated annealing, it is important to determine a good temperature scheduling, but
there is no "silver schedule" that is good for all problems, so we must tune the schedule
for this problem.
This code parametrizes the temperature as a monomial function ``T0 * (1 - t) ** alpha``, where
`t` progresses from 0 to 1. We try to optimize the two parameters ``T0`` and ``alpha``.

``patience``
-----------------------------

This parameter specifies a threshold of how many iterations we allow the annealing process
continue without updating the best value. Practically, simulated annealing often drives
the solution far away from the current best solution, and rolling back to the best solution
periodically often improves optimization efficiency a lot. However, if the rollback happens
too often, the optimization may get stuck in a local optimum, so we must tune the threshold
to a sensible amount.

.. note::
    Some samplers, including the default ``TPESampler``, currently cannot utilize the
    information of pruned trials effectively (especially when the last intermediate value
    is not the best approximation to the final objective function).
    As a workaround for this issue, you can return an estimation of the final value
    (e.g., the average of all evaluated values) when ``trial.should_prune()`` returns ``True``,
    instead of `raise optuna.TrialPruned()`.
    This will improve the sampler performance.

.. GENERATED FROM PYTHON SOURCE LINES 217-219

We define the objective function to be optimized as follows.
We early stop the evaluation by using the pruner.

.. GENERATED FROM PYTHON SOURCE LINES 219-249

.. code-block:: Python



    def objective(trial: optuna.Trial) -> float:
        global num_evaluation
        options = SAOptions(
            max_iter=N_SA_ITER,
            T0=trial.suggest_float("T0", 0.01, 10.0, log=True),
            alpha=trial.suggest_float("alpha", 1.0, 10.0, log=True),
            patience=trial.suggest_int("patience", 10, 1000, log=True),
        )
        results = []

        # For best results, shuffle the evaluation order in each trial.
        instance_ids = np.random.permutation(len(dataset))
        for instance_id in instance_ids:
            num_evaluation += 1
            result_idxs = tsp_simulated_annealing(vertices=dataset[instance_id], options=options)
            result_cost = tsp_cost(dataset[instance_id], result_idxs)
            results.append(result_cost)

            trial.report(result_cost, instance_id)
            if trial.should_prune():
                # Return the current predicted value instead of raising `TrialPruned`.
                # This is a workaround to tell the Optuna about the evaluation
                # results in pruned trials.
                return sum(results) / len(results)

        return sum(results) / len(results)









.. GENERATED FROM PYTHON SOURCE LINES 250-251

We use ``TPESampler`` with ``WilcoxonPruner``.

.. GENERATED FROM PYTHON SOURCE LINES 251-261

.. code-block:: Python



    np.random.seed(0)
    sampler = optuna.samplers.TPESampler(seed=1)
    pruner = optuna.pruners.WilcoxonPruner(p_threshold=0.1)
    study = optuna.create_study(direction="minimize", sampler=sampler, pruner=pruner)
    study.enqueue_trial({"T0": 1.0, "alpha": 2.0, "patience": 50})  # default params
    study.optimize(objective, n_trials=N_TRIALS)






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /home/runner/work/dash-docset-optuna/dash-docset-optuna/optuna/tutorial/20_recipes/013_wilcoxon_pruner.py:255: ExperimentalWarning:

    WilcoxonPruner is experimental (supported from v3.6.0). The interface can change in the future.





.. GENERATED FROM PYTHON SOURCE LINES 262-263

We can show the optimization results as:

.. GENERATED FROM PYTHON SOURCE LINES 263-270

.. code-block:: Python



    print(f"The number of trials: {len(study.trials)}")
    print(f"Best value: {study.best_value} (params: {study.best_params})")
    print(f"Number of evaluation: {num_evaluation} / {len(dataset) * N_TRIALS}")






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    The number of trials: 50
    Best value: 8.380020578710344 (params: {'T0': 0.016833751600380246, 'alpha': 3.7115397779424373, 'patience': 29})
    Number of evaluation: 1241 / 2500




.. GENERATED FROM PYTHON SOURCE LINES 271-273

Visualize the optimization history.
Note that this plot shows both completed and pruned trials in same ways.

.. GENERATED FROM PYTHON SOURCE LINES 273-278

.. code-block:: Python



    optuna.visualization.plot_optimization_history(study)







.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>            <script src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG"></script><script type="text/javascript">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: "STIX-Web"}});}</script>                <script type="text/javascript">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>
            <script charset="utf-8" src="https://cdn.plot.ly/plotly-2.30.0.min.js"></script>                <div id="412f4209-f443-4e31-9115-70751d6cc742" class="plotly-graph-div" style="height:525px; width:100%;"></div>            <script type="text/javascript">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById("412f4209-f443-4e31-9115-70751d6cc742")) {                    Plotly.newPlot(                        "412f4209-f443-4e31-9115-70751d6cc742",                        [{"mode":"markers","name":"Objective Value","x":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49],"y":[8.782344443856964,8.422906203505741,8.593845470015895,8.60259504431499,8.702872737049939,8.427074324895004,8.794627829762568,8.411864623074651,8.63984827640415,8.619875418151151,8.450845635136483,8.43934483284874,8.409873845597984,8.405101873744997,8.380020578710344,8.390260192413516,8.40777848302015,8.396561656364646,8.743702284331771,8.386530032731239,8.546271779321383,8.433220985890426,8.403279327729358,8.571010163493956,8.399761764706339,8.434324300939878,8.62181132048256,8.448325105359855,8.521437774638096,8.43116918870815,8.489584747602736,8.47694240337373,8.38281991914042,8.381348170305898,8.501491714091097,8.56871728264399,8.433195208101424,9.102656420305856,8.381322532278137,8.472706243985181,8.416814029846059,8.48011928636877,8.459298706866477,8.548498634269006,8.412402174967719,8.519779758537142,8.691913207962246,8.57021325078664,8.440450112532314,8.393726451049131],"type":"scatter"},{"mode":"lines","name":"Best Value","x":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49],"y":[8.782344443856964,8.422906203505741,8.422906203505741,8.422906203505741,8.422906203505741,8.422906203505741,8.422906203505741,8.411864623074651,8.411864623074651,8.411864623074651,8.411864623074651,8.411864623074651,8.409873845597984,8.405101873744997,8.380020578710344,8.380020578710344,8.380020578710344,8.380020578710344,8.380020578710344,8.380020578710344,8.380020578710344,8.380020578710344,8.380020578710344,8.380020578710344,8.380020578710344,8.380020578710344,8.380020578710344,8.380020578710344,8.380020578710344,8.380020578710344,8.380020578710344,8.380020578710344,8.380020578710344,8.380020578710344,8.380020578710344,8.380020578710344,8.380020578710344,8.380020578710344,8.380020578710344,8.380020578710344,8.380020578710344,8.380020578710344,8.380020578710344,8.380020578710344,8.380020578710344,8.380020578710344,8.380020578710344,8.380020578710344,8.380020578710344,8.380020578710344],"type":"scatter"},{"marker":{"color":"#cccccc"},"mode":"markers","name":"Infeasible Trial","showlegend":false,"x":[],"y":[],"type":"scatter"}],                        {"title":{"text":"Optimization History Plot"},"xaxis":{"title":{"text":"Trial"}},"yaxis":{"title":{"text":"Objective Value"}},"template":{"data":{"histogram2dcontour":[{"type":"histogram2dcontour","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"choropleth":[{"type":"choropleth","colorbar":{"outlinewidth":0,"ticks":""}}],"histogram2d":[{"type":"histogram2d","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"heatmap":[{"type":"heatmap","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"heatmapgl":[{"type":"heatmapgl","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"contourcarpet":[{"type":"contourcarpet","colorbar":{"outlinewidth":0,"ticks":""}}],"contour":[{"type":"contour","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"surface":[{"type":"surface","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"mesh3d":[{"type":"mesh3d","colorbar":{"outlinewidth":0,"ticks":""}}],"scatter":[{"fillpattern":{"fillmode":"overlay","size":10,"solidity":0.2},"type":"scatter"}],"parcoords":[{"type":"parcoords","line":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterpolargl":[{"type":"scatterpolargl","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"bar":[{"error_x":{"color":"#2a3f5f"},"error_y":{"color":"#2a3f5f"},"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"bar"}],"scattergeo":[{"type":"scattergeo","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterpolar":[{"type":"scatterpolar","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"histogram":[{"marker":{"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"histogram"}],"scattergl":[{"type":"scattergl","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatter3d":[{"type":"scatter3d","line":{"colorbar":{"outlinewidth":0,"ticks":""}},"marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scattermapbox":[{"type":"scattermapbox","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterternary":[{"type":"scatterternary","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scattercarpet":[{"type":"scattercarpet","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"carpet":[{"aaxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"baxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"type":"carpet"}],"table":[{"cells":{"fill":{"color":"#EBF0F8"},"line":{"color":"white"}},"header":{"fill":{"color":"#C8D4E3"},"line":{"color":"white"}},"type":"table"}],"barpolar":[{"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"barpolar"}],"pie":[{"automargin":true,"type":"pie"}]},"layout":{"autotypenumbers":"strict","colorway":["#636efa","#EF553B","#00cc96","#ab63fa","#FFA15A","#19d3f3","#FF6692","#B6E880","#FF97FF","#FECB52"],"font":{"color":"#2a3f5f"},"hovermode":"closest","hoverlabel":{"align":"left"},"paper_bgcolor":"white","plot_bgcolor":"#E5ECF6","polar":{"bgcolor":"#E5ECF6","angularaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"radialaxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"ternary":{"bgcolor":"#E5ECF6","aaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"baxis":{"gridcolor":"white","linecolor":"white","ticks":""},"caxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"coloraxis":{"colorbar":{"outlinewidth":0,"ticks":""}},"colorscale":{"sequential":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"sequentialminus":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"diverging":[[0,"#8e0152"],[0.1,"#c51b7d"],[0.2,"#de77ae"],[0.3,"#f1b6da"],[0.4,"#fde0ef"],[0.5,"#f7f7f7"],[0.6,"#e6f5d0"],[0.7,"#b8e186"],[0.8,"#7fbc41"],[0.9,"#4d9221"],[1,"#276419"]]},"xaxis":{"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","automargin":true,"zerolinewidth":2},"yaxis":{"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","automargin":true,"zerolinewidth":2},"scene":{"xaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2},"yaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2},"zaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2}},"shapedefaults":{"line":{"color":"#2a3f5f"}},"annotationdefaults":{"arrowcolor":"#2a3f5f","arrowhead":0,"arrowwidth":1},"geo":{"bgcolor":"white","landcolor":"#E5ECF6","subunitcolor":"white","showland":true,"showlakes":true,"lakecolor":"white"},"title":{"x":0.05},"mapbox":{"style":"light"}}}},                        {"responsive": true}                    )                };                            </script>        </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 279-280

Visualize the number of evaluations in each trial.

.. GENERATED FROM PYTHON SOURCE LINES 280-299

.. code-block:: Python



    x_values = [x for x in range(len(study.trials)) if x != study.best_trial.number]
    y_values = [
        len(t.intermediate_values) for t in study.trials if t.number != study.best_trial.number
    ]
    best_trial_y = [len(study.best_trial.intermediate_values)]
    best_trial_x = [study.best_trial.number]
    fig = go.Figure()
    fig.add_trace(go.Bar(x=x_values, y=y_values, name="Evaluations"))
    fig.add_trace(go.Bar(x=best_trial_x, y=best_trial_y, name="Best Trial", marker_color="red"))
    fig.update_layout(
        title="Number of evaluations in each trial",
        xaxis_title="Trial number",
        yaxis_title="Number of evaluations before pruned",
    )
    fig







.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>            <script src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG"></script><script type="text/javascript">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: "STIX-Web"}});}</script>                <script type="text/javascript">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>
            <script charset="utf-8" src="https://cdn.plot.ly/plotly-2.30.0.min.js"></script>                <div id="9cdf6dd3-71a3-482d-8b88-2daa056dc38f" class="plotly-graph-div" style="height:525px; width:100%;"></div>            <script type="text/javascript">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById("9cdf6dd3-71a3-482d-8b88-2daa056dc38f")) {                    Plotly.newPlot(                        "9cdf6dd3-71a3-482d-8b88-2daa056dc38f",                        [{"name":"Evaluations","x":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49],"y":[50,50,4,8,5,50,4,50,4,7,37,11,50,50,50,26,25,5,10,7,28,50,4,50,48,7,32,20,39,21,13,13,17,13,11,50,4,15,38,50,13,6,10,8,12,5,14,47,50],"type":"bar"},{"marker":{"color":"red"},"name":"Best Trial","x":[14],"y":[50],"type":"bar"}],                        {"template":{"data":{"histogram2dcontour":[{"type":"histogram2dcontour","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"choropleth":[{"type":"choropleth","colorbar":{"outlinewidth":0,"ticks":""}}],"histogram2d":[{"type":"histogram2d","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"heatmap":[{"type":"heatmap","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"heatmapgl":[{"type":"heatmapgl","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"contourcarpet":[{"type":"contourcarpet","colorbar":{"outlinewidth":0,"ticks":""}}],"contour":[{"type":"contour","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"surface":[{"type":"surface","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"mesh3d":[{"type":"mesh3d","colorbar":{"outlinewidth":0,"ticks":""}}],"scatter":[{"fillpattern":{"fillmode":"overlay","size":10,"solidity":0.2},"type":"scatter"}],"parcoords":[{"type":"parcoords","line":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterpolargl":[{"type":"scatterpolargl","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"bar":[{"error_x":{"color":"#2a3f5f"},"error_y":{"color":"#2a3f5f"},"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"bar"}],"scattergeo":[{"type":"scattergeo","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterpolar":[{"type":"scatterpolar","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"histogram":[{"marker":{"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"histogram"}],"scattergl":[{"type":"scattergl","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatter3d":[{"type":"scatter3d","line":{"colorbar":{"outlinewidth":0,"ticks":""}},"marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scattermapbox":[{"type":"scattermapbox","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterternary":[{"type":"scatterternary","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scattercarpet":[{"type":"scattercarpet","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"carpet":[{"aaxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"baxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"type":"carpet"}],"table":[{"cells":{"fill":{"color":"#EBF0F8"},"line":{"color":"white"}},"header":{"fill":{"color":"#C8D4E3"},"line":{"color":"white"}},"type":"table"}],"barpolar":[{"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"barpolar"}],"pie":[{"automargin":true,"type":"pie"}]},"layout":{"autotypenumbers":"strict","colorway":["#636efa","#EF553B","#00cc96","#ab63fa","#FFA15A","#19d3f3","#FF6692","#B6E880","#FF97FF","#FECB52"],"font":{"color":"#2a3f5f"},"hovermode":"closest","hoverlabel":{"align":"left"},"paper_bgcolor":"white","plot_bgcolor":"#E5ECF6","polar":{"bgcolor":"#E5ECF6","angularaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"radialaxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"ternary":{"bgcolor":"#E5ECF6","aaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"baxis":{"gridcolor":"white","linecolor":"white","ticks":""},"caxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"coloraxis":{"colorbar":{"outlinewidth":0,"ticks":""}},"colorscale":{"sequential":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"sequentialminus":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"diverging":[[0,"#8e0152"],[0.1,"#c51b7d"],[0.2,"#de77ae"],[0.3,"#f1b6da"],[0.4,"#fde0ef"],[0.5,"#f7f7f7"],[0.6,"#e6f5d0"],[0.7,"#b8e186"],[0.8,"#7fbc41"],[0.9,"#4d9221"],[1,"#276419"]]},"xaxis":{"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","automargin":true,"zerolinewidth":2},"yaxis":{"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","automargin":true,"zerolinewidth":2},"scene":{"xaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2},"yaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2},"zaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2}},"shapedefaults":{"line":{"color":"#2a3f5f"}},"annotationdefaults":{"arrowcolor":"#2a3f5f","arrowhead":0,"arrowwidth":1},"geo":{"bgcolor":"white","landcolor":"#E5ECF6","subunitcolor":"white","showland":true,"showlakes":true,"lakecolor":"white"},"title":{"x":0.05},"mapbox":{"style":"light"}}},"title":{"text":"Number of evaluations in each trial"},"xaxis":{"title":{"text":"Trial number"}},"yaxis":{"title":{"text":"Number of evaluations before pruned"}}},                        {"responsive": true}                    )                };                            </script>        </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 300-301

Visualize the greedy solution (used by initial guess) of a TSP problem.

.. GENERATED FROM PYTHON SOURCE LINES 301-315

.. code-block:: Python



    d = dataset[0]
    result_idxs = tsp_greedy(d)
    result_idxs = np.append(result_idxs, result_idxs[0])
    fig = go.Figure()
    fig.add_trace(go.Scatter(x=d[result_idxs, 0], y=d[result_idxs, 1], mode="lines+markers"))
    fig.update_layout(
        title=f"greedy solution (initial guess),  cost: {tsp_cost(d, result_idxs):.3f}",
        xaxis=dict(scaleanchor="y", scaleratio=1),
    )
    fig







.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>            <script src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG"></script><script type="text/javascript">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: "STIX-Web"}});}</script>                <script type="text/javascript">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>
            <script charset="utf-8" src="https://cdn.plot.ly/plotly-2.30.0.min.js"></script>                <div id="5e89a332-9f2c-4e5a-871b-5981ed37f57d" class="plotly-graph-div" style="height:525px; width:100%;"></div>            <script type="text/javascript">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById("5e89a332-9f2c-4e5a-871b-5981ed37f57d")) {                    Plotly.newPlot(                        "5e89a332-9f2c-4e5a-871b-5981ed37f57d",                        [{"mode":"lines+markers","x":[0.6369616873214543,0.5943000301996968,0.5715298307297609,0.5253543224757259,0.4799879238078322,0.4045518398215282,0.3361170605456604,0.3159435453677002,0.25886459317093224,0.1245547058352835,0.009954560807291957,0.0907530456191219,0.07863003716563988,0.1412465569010316,0.13509650502241122,0.1149326332809052,0.040510711188434634,0.006408882664310167,0.043066888568204176,0.08401534358238483,0.014706304965369288,0.1487640122324979,0.1995154439682133,0.26983678550080015,0.39161900052816123,0.395557273104876,0.40651033674812664,0.4427528289745315,0.440377154715784,0.48884954683346427,0.5436249914654229,0.4858353588317891,0.41538403737122465,0.450339366649287,0.4146558493556708,0.5293121601967704,0.6066357757671799,0.6706244146936303,0.6855419844806947,0.8181209709709104,0.8097107759127777,0.8631789223498866,0.8813071727376899,0.9489436749377653,0.9590776426974422,0.9340435159562497,0.8607014095476777,0.8881183206591798,0.84829120827506,0.8413172796123832,0.8647782954007741,0.8764842308107038,0.8574042765875693,0.8158535541215322,0.7192197728267403,0.6143732469489966,0.5234347273949199,0.36511016824482856,0.23064220899374743,0.04097352393619469,0.028319671145462966,0.2884212144312105,0.2997118905373848,0.34430997880412517,0.38077050831088943,0.499895813687647,0.6153851114812539,0.6884467305709401,0.7756911881018284,0.7870983074886834,0.7296554464299441,0.7146185366547527,0.9438014269420908,0.9291042207970062,0.7577288453082914,0.7579510023564281,0.5861230648127328,0.561400767550223,0.5526115105212872,0.2986961328189226,0.2738490985995572,0.22715759353337972,0.2661302722922926,0.19412977289079358,0.34429573096232524,0.6202134520153778,0.6678894055713512,0.6291081515397092,0.7111428779897498,0.8018805787183079,0.8132702392002724,0.8899355557205206,0.8800981213040697,0.9257145772144187,0.9782657138401457,0.9819426931267062,0.9660620807840702,0.9811950400663443,0.997209935789211,0.9274239286245599,0.6369616873214543],"y":[0.2697867137638703,0.33791122550713326,0.32186939107594215,0.31024187555895566,0.23237291963930384,0.19851304450925533,0.15027946689483906,0.18271237892656245,0.24167571409434496,0.2883307570075776,0.36504615775827065,0.5803323859868507,0.6526145763366384,0.670061849314936,0.7214883401940817,0.7290151170763094,0.7320061956565608,0.7726492012253886,0.8227062801815019,0.8326441476533978,0.8636400902455758,0.972628813822955,0.9421131105064978,0.8631202041893178,0.8902743520047923,0.9102557662160548,0.909958961662297,0.931017315981155,0.9545904936907372,0.9764623219360445,0.9350724237877682,0.8894878343490003,0.8298039852781027,0.7963242702872942,0.7344835717887294,0.7857857007138075,0.7294965609839984,0.6471895115742501,0.6504592762678163,0.6265064624197535,0.5604759520061858,0.5414612202490917,0.5107065055436453,0.4600451393090961,0.3694044110916809,0.35779519670907023,0.24714674032210748,0.22586942841732438,0.14547353818653175,0.0666900087671014,0.059464151600338466,0.05856803480519435,0.033585575305464355,0.002738500170148095,0.015991729523571974,0.028365365113521057,0.08893564024627199,0.10549527957022953,0.05202130106440961,0.016527635528529094,0.12428327649956394,0.4128963426808927,0.42268722119765845,0.4302987319478333,0.42977406117857664,0.42522862484907553,0.38367755426188344,0.3889214239791038,0.308857362719261,0.23936944299295215,0.17565562060255901,0.16705292878227218,0.12681710226124776,0.06608249672407474,0.49742269548761897,0.512758723262078,0.5540905021732678,0.5783359149262727,0.5939242016131683,0.6719948779563594,0.7026520706597863,0.6231871446860424,0.5389344076221869,0.5260222486178752,0.9949173481609178,0.9950965052353241,0.9584136317779519,0.9271545530678674,0.9320596866133782,0.9235301597834695,0.9127555772777217,0.8223738275430704,0.812335398111254,0.7482485033017541,0.5898700283209505,0.5713956004557744,0.562231842228457,0.9572101796109636,0.9808353387762301,0.9679261899246464,0.2697867137638703],"type":"scatter"}],                        {"template":{"data":{"histogram2dcontour":[{"type":"histogram2dcontour","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"choropleth":[{"type":"choropleth","colorbar":{"outlinewidth":0,"ticks":""}}],"histogram2d":[{"type":"histogram2d","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"heatmap":[{"type":"heatmap","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"heatmapgl":[{"type":"heatmapgl","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"contourcarpet":[{"type":"contourcarpet","colorbar":{"outlinewidth":0,"ticks":""}}],"contour":[{"type":"contour","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"surface":[{"type":"surface","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"mesh3d":[{"type":"mesh3d","colorbar":{"outlinewidth":0,"ticks":""}}],"scatter":[{"fillpattern":{"fillmode":"overlay","size":10,"solidity":0.2},"type":"scatter"}],"parcoords":[{"type":"parcoords","line":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterpolargl":[{"type":"scatterpolargl","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"bar":[{"error_x":{"color":"#2a3f5f"},"error_y":{"color":"#2a3f5f"},"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"bar"}],"scattergeo":[{"type":"scattergeo","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterpolar":[{"type":"scatterpolar","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"histogram":[{"marker":{"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"histogram"}],"scattergl":[{"type":"scattergl","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatter3d":[{"type":"scatter3d","line":{"colorbar":{"outlinewidth":0,"ticks":""}},"marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scattermapbox":[{"type":"scattermapbox","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterternary":[{"type":"scatterternary","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scattercarpet":[{"type":"scattercarpet","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"carpet":[{"aaxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"baxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"type":"carpet"}],"table":[{"cells":{"fill":{"color":"#EBF0F8"},"line":{"color":"white"}},"header":{"fill":{"color":"#C8D4E3"},"line":{"color":"white"}},"type":"table"}],"barpolar":[{"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"barpolar"}],"pie":[{"automargin":true,"type":"pie"}]},"layout":{"autotypenumbers":"strict","colorway":["#636efa","#EF553B","#00cc96","#ab63fa","#FFA15A","#19d3f3","#FF6692","#B6E880","#FF97FF","#FECB52"],"font":{"color":"#2a3f5f"},"hovermode":"closest","hoverlabel":{"align":"left"},"paper_bgcolor":"white","plot_bgcolor":"#E5ECF6","polar":{"bgcolor":"#E5ECF6","angularaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"radialaxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"ternary":{"bgcolor":"#E5ECF6","aaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"baxis":{"gridcolor":"white","linecolor":"white","ticks":""},"caxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"coloraxis":{"colorbar":{"outlinewidth":0,"ticks":""}},"colorscale":{"sequential":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"sequentialminus":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"diverging":[[0,"#8e0152"],[0.1,"#c51b7d"],[0.2,"#de77ae"],[0.3,"#f1b6da"],[0.4,"#fde0ef"],[0.5,"#f7f7f7"],[0.6,"#e6f5d0"],[0.7,"#b8e186"],[0.8,"#7fbc41"],[0.9,"#4d9221"],[1,"#276419"]]},"xaxis":{"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","automargin":true,"zerolinewidth":2},"yaxis":{"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","automargin":true,"zerolinewidth":2},"scene":{"xaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2},"yaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2},"zaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2}},"shapedefaults":{"line":{"color":"#2a3f5f"}},"annotationdefaults":{"arrowcolor":"#2a3f5f","arrowhead":0,"arrowwidth":1},"geo":{"bgcolor":"white","landcolor":"#E5ECF6","subunitcolor":"white","showland":true,"showlakes":true,"lakecolor":"white"},"title":{"x":0.05},"mapbox":{"style":"light"}}},"xaxis":{"scaleanchor":"y","scaleratio":1},"title":{"text":"greedy solution (initial guess),  cost: 10.133"}},                        {"responsive": true}                    )                };                            </script>        </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 316-317

Visualize the solution found by ``tsp_simulated_annealing`` of the same TSP problem.

.. GENERATED FROM PYTHON SOURCE LINES 317-335

.. code-block:: Python



    params = study.best_params
    options = SAOptions(
        max_iter=N_SA_ITER,
        patience=params["patience"],
        T0=params["T0"],
        alpha=params["alpha"],
    )
    result_idxs = tsp_simulated_annealing(d, options)
    result_idxs = np.append(result_idxs, result_idxs[0])
    fig = go.Figure()
    fig.add_trace(go.Scatter(x=d[result_idxs, 0], y=d[result_idxs, 1], mode="lines+markers"))
    fig.update_layout(
        title=f"n_iter: {options.max_iter}, cost: {tsp_cost(d, result_idxs):.3f}",
        xaxis=dict(scaleanchor="y", scaleratio=1),
    )
    fig





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>            <script src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG"></script><script type="text/javascript">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: "STIX-Web"}});}</script>                <script type="text/javascript">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>
            <script charset="utf-8" src="https://cdn.plot.ly/plotly-2.30.0.min.js"></script>                <div id="7ae26711-6248-412e-93e7-9d1366689b28" class="plotly-graph-div" style="height:525px; width:100%;"></div>            <script type="text/javascript">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById("7ae26711-6248-412e-93e7-9d1366689b28")) {                    Plotly.newPlot(                        "7ae26711-6248-412e-93e7-9d1366689b28",                        [{"mode":"lines+markers","x":[0.6369616873214543,0.5943000301996968,0.5715298307297609,0.5253543224757259,0.4799879238078322,0.4045518398215282,0.5234347273949199,0.6143732469489966,0.7192197728267403,0.8158535541215322,0.8574042765875693,0.8764842308107038,0.8647782954007741,0.8413172796123832,0.84829120827506,0.9291042207970062,0.9438014269420908,0.8881183206591798,0.8607014095476777,0.9340435159562497,0.9590776426974422,0.9489436749377653,0.8813071727376899,0.8631789223498866,0.9660620807840702,0.9819426931267062,0.9782657138401457,0.9257145772144187,0.8800981213040697,0.8899355557205206,0.9811950400663443,0.997209935789211,0.9274239286245599,0.8132702392002724,0.8018805787183079,0.7111428779897498,0.6291081515397092,0.6678894055713512,0.6202134520153778,0.5436249914654229,0.48884954683346427,0.4427528289745315,0.440377154715784,0.34429573096232524,0.395557273104876,0.39161900052816123,0.40651033674812664,0.4858353588317891,0.41538403737122465,0.450339366649287,0.4146558493556708,0.5293121601967704,0.6066357757671799,0.5526115105212872,0.561400767550223,0.5861230648127328,0.2661302722922926,0.19412977289079358,0.22715759353337972,0.2986961328189226,0.2738490985995572,0.26983678550080015,0.1995154439682133,0.1487640122324979,0.08401534358238483,0.043066888568204176,0.014706304965369288,0.006408882664310167,0.040510711188434634,0.1149326332809052,0.13509650502241122,0.1412465569010316,0.07863003716563988,0.0907530456191219,0.009954560807291957,0.1245547058352835,0.028319671145462966,0.04097352393619469,0.23064220899374743,0.36511016824482856,0.3361170605456604,0.3159435453677002,0.25886459317093224,0.2884212144312105,0.2997118905373848,0.34430997880412517,0.38077050831088943,0.499895813687647,0.6153851114812539,0.6706244146936303,0.6855419844806947,0.8181209709709104,0.8097107759127777,0.7579510023564281,0.7577288453082914,0.6884467305709401,0.7756911881018284,0.7870983074886834,0.7296554464299441,0.7146185366547527,0.6369616873214543],"y":[0.2697867137638703,0.33791122550713326,0.32186939107594215,0.31024187555895566,0.23237291963930384,0.19851304450925533,0.08893564024627199,0.028365365113521057,0.015991729523571974,0.002738500170148095,0.033585575305464355,0.05856803480519435,0.059464151600338466,0.0666900087671014,0.14547353818653175,0.06608249672407474,0.12681710226124776,0.22586942841732438,0.24714674032210748,0.35779519670907023,0.3694044110916809,0.4600451393090961,0.5107065055436453,0.5414612202490917,0.562231842228457,0.5713956004557744,0.5898700283209505,0.7482485033017541,0.812335398111254,0.8223738275430704,0.9572101796109636,0.9808353387762301,0.9679261899246464,0.9127555772777217,0.9235301597834695,0.9320596866133782,0.9271545530678674,0.9584136317779519,0.9950965052353241,0.9350724237877682,0.9764623219360445,0.931017315981155,0.9545904936907372,0.9949173481609178,0.9102557662160548,0.8902743520047923,0.909958961662297,0.8894878343490003,0.8298039852781027,0.7963242702872942,0.7344835717887294,0.7857857007138075,0.7294965609839984,0.5939242016131683,0.5783359149262727,0.5540905021732678,0.5389344076221869,0.5260222486178752,0.6231871446860424,0.6719948779563594,0.7026520706597863,0.8631202041893178,0.9421131105064978,0.972628813822955,0.8326441476533978,0.8227062801815019,0.8636400902455758,0.7726492012253886,0.7320061956565608,0.7290151170763094,0.7214883401940817,0.670061849314936,0.6526145763366384,0.5803323859868507,0.36504615775827065,0.2883307570075776,0.12428327649956394,0.016527635528529094,0.05202130106440961,0.10549527957022953,0.15027946689483906,0.18271237892656245,0.24167571409434496,0.4128963426808927,0.42268722119765845,0.4302987319478333,0.42977406117857664,0.42522862484907553,0.38367755426188344,0.6471895115742501,0.6504592762678163,0.6265064624197535,0.5604759520061858,0.512758723262078,0.49742269548761897,0.3889214239791038,0.308857362719261,0.23936944299295215,0.17565562060255901,0.16705292878227218,0.2697867137638703],"type":"scatter"}],                        {"template":{"data":{"histogram2dcontour":[{"type":"histogram2dcontour","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"choropleth":[{"type":"choropleth","colorbar":{"outlinewidth":0,"ticks":""}}],"histogram2d":[{"type":"histogram2d","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"heatmap":[{"type":"heatmap","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"heatmapgl":[{"type":"heatmapgl","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"contourcarpet":[{"type":"contourcarpet","colorbar":{"outlinewidth":0,"ticks":""}}],"contour":[{"type":"contour","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"surface":[{"type":"surface","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"mesh3d":[{"type":"mesh3d","colorbar":{"outlinewidth":0,"ticks":""}}],"scatter":[{"fillpattern":{"fillmode":"overlay","size":10,"solidity":0.2},"type":"scatter"}],"parcoords":[{"type":"parcoords","line":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterpolargl":[{"type":"scatterpolargl","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"bar":[{"error_x":{"color":"#2a3f5f"},"error_y":{"color":"#2a3f5f"},"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"bar"}],"scattergeo":[{"type":"scattergeo","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterpolar":[{"type":"scatterpolar","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"histogram":[{"marker":{"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"histogram"}],"scattergl":[{"type":"scattergl","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatter3d":[{"type":"scatter3d","line":{"colorbar":{"outlinewidth":0,"ticks":""}},"marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scattermapbox":[{"type":"scattermapbox","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterternary":[{"type":"scatterternary","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scattercarpet":[{"type":"scattercarpet","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"carpet":[{"aaxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"baxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"type":"carpet"}],"table":[{"cells":{"fill":{"color":"#EBF0F8"},"line":{"color":"white"}},"header":{"fill":{"color":"#C8D4E3"},"line":{"color":"white"}},"type":"table"}],"barpolar":[{"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"barpolar"}],"pie":[{"automargin":true,"type":"pie"}]},"layout":{"autotypenumbers":"strict","colorway":["#636efa","#EF553B","#00cc96","#ab63fa","#FFA15A","#19d3f3","#FF6692","#B6E880","#FF97FF","#FECB52"],"font":{"color":"#2a3f5f"},"hovermode":"closest","hoverlabel":{"align":"left"},"paper_bgcolor":"white","plot_bgcolor":"#E5ECF6","polar":{"bgcolor":"#E5ECF6","angularaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"radialaxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"ternary":{"bgcolor":"#E5ECF6","aaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"baxis":{"gridcolor":"white","linecolor":"white","ticks":""},"caxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"coloraxis":{"colorbar":{"outlinewidth":0,"ticks":""}},"colorscale":{"sequential":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"sequentialminus":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"diverging":[[0,"#8e0152"],[0.1,"#c51b7d"],[0.2,"#de77ae"],[0.3,"#f1b6da"],[0.4,"#fde0ef"],[0.5,"#f7f7f7"],[0.6,"#e6f5d0"],[0.7,"#b8e186"],[0.8,"#7fbc41"],[0.9,"#4d9221"],[1,"#276419"]]},"xaxis":{"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","automargin":true,"zerolinewidth":2},"yaxis":{"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","automargin":true,"zerolinewidth":2},"scene":{"xaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2},"yaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2},"zaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2}},"shapedefaults":{"line":{"color":"#2a3f5f"}},"annotationdefaults":{"arrowcolor":"#2a3f5f","arrowhead":0,"arrowwidth":1},"geo":{"bgcolor":"white","landcolor":"#E5ECF6","subunitcolor":"white","showland":true,"showlakes":true,"lakecolor":"white"},"title":{"x":0.05},"mapbox":{"style":"light"}}},"xaxis":{"scaleanchor":"y","scaleratio":1},"title":{"text":"n_iter: 10000, cost: 8.439"}},                        {"responsive": true}                    )                };                            </script>        </div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (4 minutes 27.083 seconds)


.. _sphx_glr_download_tutorial_20_recipes_013_wilcoxon_pruner.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: 013_wilcoxon_pruner.ipynb <013_wilcoxon_pruner.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: 013_wilcoxon_pruner.py <013_wilcoxon_pruner.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
