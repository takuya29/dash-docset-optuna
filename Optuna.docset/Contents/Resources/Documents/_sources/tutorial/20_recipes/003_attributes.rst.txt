
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "tutorial/20_recipes/003_attributes.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_tutorial_20_recipes_003_attributes.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_tutorial_20_recipes_003_attributes.py:


.. _attributes:

User Attributes
===============

This feature is to annotate experiments with user-defined attributes.

.. GENERATED FROM PYTHON SOURCE LINES 11-17

Adding User Attributes to Studies
---------------------------------

A :class:`~optuna.study.Study` object provides :func:`~optuna.study.Study.set_user_attr` method
to register a pair of key and value as an user-defined attribute.
A key is supposed to be a ``str``, and a value be any object serializable with ``json.dumps``.

.. GENERATED FROM PYTHON SOURCE LINES 17-30

.. code-block:: Python


    import sklearn.datasets
    import sklearn.model_selection
    import sklearn.svm

    import optuna


    study = optuna.create_study(storage="sqlite:///example.db")
    study.set_user_attr("contributors", ["Akiba", "Sano"])
    study.set_user_attr("dataset", "MNIST")









.. GENERATED FROM PYTHON SOURCE LINES 31-32

We can access annotated attributes with :attr:`~optuna.study.Study.user_attrs` property.

.. GENERATED FROM PYTHON SOURCE LINES 32-36

.. code-block:: Python



    study.user_attrs  # {'contributors': ['Akiba', 'Sano'], 'dataset': 'MNIST'}





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    {'contributors': ['Akiba', 'Sano'], 'dataset': 'MNIST'}



.. GENERATED FROM PYTHON SOURCE LINES 37-39

:class:`~optuna.study.StudySummary` object, which can be retrieved by
:func:`~optuna.study.get_all_study_summaries`, also contains user-defined attributes.

.. GENERATED FROM PYTHON SOURCE LINES 39-45

.. code-block:: Python



    study_summaries = optuna.get_all_study_summaries("sqlite:///example.db")
    study_summaries[0].user_attrs  # {"contributors": ["Akiba", "Sano"], "dataset": "MNIST"}






.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    {'contributors': ['Akiba', 'Sano'], 'dataset': 'MNIST'}



.. GENERATED FROM PYTHON SOURCE LINES 46-48

.. seealso::
    ``optuna study set-user-attr`` command, which sets an attribute via command line interface.

.. GENERATED FROM PYTHON SOURCE LINES 51-57

Adding User Attributes to Trials
--------------------------------

As with :class:`~optuna.study.Study`, a :class:`~optuna.trial.Trial` object provides
:func:`~optuna.trial.Trial.set_user_attr` method.
Attributes are set inside an objective function.

.. GENERATED FROM PYTHON SOURCE LINES 57-74

.. code-block:: Python



    def objective(trial):
        iris = sklearn.datasets.load_iris()
        x, y = iris.data, iris.target

        svc_c = trial.suggest_float("svc_c", 1e-10, 1e10, log=True)
        clf = sklearn.svm.SVC(C=svc_c)
        accuracy = sklearn.model_selection.cross_val_score(clf, x, y).mean()

        trial.set_user_attr("accuracy", accuracy)

        return 1.0 - accuracy  # return error for minimization


    study.optimize(objective, n_trials=1)








.. GENERATED FROM PYTHON SOURCE LINES 75-76

We can access annotated attributes as:

.. GENERATED FROM PYTHON SOURCE LINES 76-79

.. code-block:: Python


    study.trials[0].user_attrs





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    {'accuracy': 0.9533333333333334}



.. GENERATED FROM PYTHON SOURCE LINES 80-82

Note that, in this example, the attribute is not annotated to a :class:`~optuna.study.Study`
but a single :class:`~optuna.trial.Trial`.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.209 seconds)


.. _sphx_glr_download_tutorial_20_recipes_003_attributes.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: 003_attributes.ipynb <003_attributes.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: 003_attributes.py <003_attributes.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
