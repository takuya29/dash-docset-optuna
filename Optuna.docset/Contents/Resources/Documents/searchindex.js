Search.setIndex({"docnames": ["faq", "index", "installation", "license_thirdparty", "privacy", "reference/cli", "reference/distributions", "reference/exceptions", "reference/generated/optuna.TrialPruned", "reference/generated/optuna.copy_study", "reference/generated/optuna.create_study", "reference/generated/optuna.delete_study", "reference/generated/optuna.distributions.CategoricalDistribution", "reference/generated/optuna.distributions.DiscreteUniformDistribution", "reference/generated/optuna.distributions.FloatDistribution", "reference/generated/optuna.distributions.IntDistribution", "reference/generated/optuna.distributions.IntLogUniformDistribution", "reference/generated/optuna.distributions.IntUniformDistribution", "reference/generated/optuna.distributions.LogUniformDistribution", "reference/generated/optuna.distributions.UniformDistribution", "reference/generated/optuna.distributions.check_distribution_compatibility", "reference/generated/optuna.distributions.distribution_to_json", "reference/generated/optuna.distributions.json_to_distribution", "reference/generated/optuna.exceptions.CLIUsageError", "reference/generated/optuna.exceptions.DuplicatedStudyError", "reference/generated/optuna.exceptions.OptunaError", "reference/generated/optuna.exceptions.StorageInternalError", "reference/generated/optuna.exceptions.TrialPruned", "reference/generated/optuna.get_all_study_summaries", "reference/generated/optuna.importance.FanovaImportanceEvaluator", "reference/generated/optuna.importance.MeanDecreaseImpurityImportanceEvaluator", "reference/generated/optuna.importance.get_param_importances", "reference/generated/optuna.integration.BoTorchSampler", "reference/generated/optuna.integration.CatBoostPruningCallback", "reference/generated/optuna.integration.CmaEsSampler", "reference/generated/optuna.integration.DaskStorage", "reference/generated/optuna.integration.FastAIPruningCallback", "reference/generated/optuna.integration.FastAIV1PruningCallback", "reference/generated/optuna.integration.FastAIV2PruningCallback", "reference/generated/optuna.integration.LightGBMPruningCallback", "reference/generated/optuna.integration.MLflowCallback", "reference/generated/optuna.integration.MXNetPruningCallback", "reference/generated/optuna.integration.OptunaSearchCV", "reference/generated/optuna.integration.PyCmaSampler", "reference/generated/optuna.integration.PyTorchIgnitePruningHandler", "reference/generated/optuna.integration.PyTorchLightningPruningCallback", "reference/generated/optuna.integration.ShapleyImportanceEvaluator", "reference/generated/optuna.integration.SkoptSampler", "reference/generated/optuna.integration.TensorBoardCallback", "reference/generated/optuna.integration.TorchDistributedTrial", "reference/generated/optuna.integration.WeightsAndBiasesCallback", "reference/generated/optuna.integration.XGBoostPruningCallback", "reference/generated/optuna.integration.botorch.qehvi_candidates_func", "reference/generated/optuna.integration.botorch.qei_candidates_func", "reference/generated/optuna.integration.botorch.qnehvi_candidates_func", "reference/generated/optuna.integration.botorch.qparego_candidates_func", "reference/generated/optuna.integration.lightgbm.LightGBMTuner", "reference/generated/optuna.integration.lightgbm.LightGBMTunerCV", "reference/generated/optuna.integration.lightgbm.train", "reference/generated/optuna.load_study", "reference/generated/optuna.logging.disable_default_handler", "reference/generated/optuna.logging.disable_propagation", "reference/generated/optuna.logging.enable_default_handler", "reference/generated/optuna.logging.enable_propagation", "reference/generated/optuna.logging.get_verbosity", "reference/generated/optuna.logging.set_verbosity", "reference/generated/optuna.pruners.BasePruner", "reference/generated/optuna.pruners.HyperbandPruner", "reference/generated/optuna.pruners.MedianPruner", "reference/generated/optuna.pruners.NopPruner", "reference/generated/optuna.pruners.PatientPruner", "reference/generated/optuna.pruners.PercentilePruner", "reference/generated/optuna.pruners.SuccessiveHalvingPruner", "reference/generated/optuna.pruners.ThresholdPruner", "reference/generated/optuna.search_space.IntersectionSearchSpace", "reference/generated/optuna.search_space.intersection_search_space", "reference/generated/optuna.storages.JournalFileOpenLock", "reference/generated/optuna.storages.JournalFileStorage", "reference/generated/optuna.storages.JournalFileSymlinkLock", "reference/generated/optuna.storages.JournalRedisStorage", "reference/generated/optuna.storages.JournalStorage", "reference/generated/optuna.storages.RDBStorage", "reference/generated/optuna.storages.RetryFailedTrialCallback", "reference/generated/optuna.storages.fail_stale_trials", "reference/generated/optuna.study.MaxTrialsCallback", "reference/generated/optuna.study.Study", "reference/generated/optuna.study.StudyDirection", "reference/generated/optuna.study.StudySummary", "reference/generated/optuna.study.copy_study", "reference/generated/optuna.study.create_study", "reference/generated/optuna.study.delete_study", "reference/generated/optuna.study.get_all_study_summaries", "reference/generated/optuna.study.load_study", "reference/generated/optuna.terminator.BaseErrorEvaluator", "reference/generated/optuna.terminator.BaseImprovementEvaluator", "reference/generated/optuna.terminator.BaseTerminator", "reference/generated/optuna.terminator.CrossValidationErrorEvaluator", "reference/generated/optuna.terminator.RegretBoundEvaluator", "reference/generated/optuna.terminator.StaticErrorEvaluator", "reference/generated/optuna.terminator.Terminator", "reference/generated/optuna.terminator.TerminatorCallback", "reference/generated/optuna.terminator.report_cross_validation_scores", "reference/generated/optuna.trial.FixedTrial", "reference/generated/optuna.trial.FrozenTrial", "reference/generated/optuna.trial.Trial", "reference/generated/optuna.trial.TrialState", "reference/generated/optuna.trial.create_trial", "reference/importance", "reference/index", "reference/integration", "reference/logging", "reference/optuna", "reference/pruners", "reference/samplers/generated/optuna.samplers.BaseSampler", "reference/samplers/generated/optuna.samplers.BruteForceSampler", "reference/samplers/generated/optuna.samplers.CmaEsSampler", "reference/samplers/generated/optuna.samplers.GridSampler", "reference/samplers/generated/optuna.samplers.IntersectionSearchSpace", "reference/samplers/generated/optuna.samplers.MOTPESampler", "reference/samplers/generated/optuna.samplers.NSGAIIISampler", "reference/samplers/generated/optuna.samplers.NSGAIISampler", "reference/samplers/generated/optuna.samplers.PartialFixedSampler", "reference/samplers/generated/optuna.samplers.QMCSampler", "reference/samplers/generated/optuna.samplers.RandomSampler", "reference/samplers/generated/optuna.samplers.TPESampler", "reference/samplers/generated/optuna.samplers.intersection_search_space", "reference/samplers/generated/optuna.samplers.nsgaii.BLXAlphaCrossover", "reference/samplers/generated/optuna.samplers.nsgaii.BaseCrossover", "reference/samplers/generated/optuna.samplers.nsgaii.SBXCrossover", "reference/samplers/generated/optuna.samplers.nsgaii.SPXCrossover", "reference/samplers/generated/optuna.samplers.nsgaii.UNDXCrossover", "reference/samplers/generated/optuna.samplers.nsgaii.UniformCrossover", "reference/samplers/generated/optuna.samplers.nsgaii.VSBXCrossover", "reference/samplers/index", "reference/samplers/nsgaii", "reference/search_space", "reference/storages", "reference/study", "reference/terminator", "reference/trial", "reference/visualization/generated/optuna.visualization.is_available", "reference/visualization/generated/optuna.visualization.matplotlib.is_available", "reference/visualization/generated/optuna.visualization.matplotlib.plot_contour", "reference/visualization/generated/optuna.visualization.matplotlib.plot_edf", "reference/visualization/generated/optuna.visualization.matplotlib.plot_intermediate_values", "reference/visualization/generated/optuna.visualization.matplotlib.plot_optimization_history", "reference/visualization/generated/optuna.visualization.matplotlib.plot_parallel_coordinate", "reference/visualization/generated/optuna.visualization.matplotlib.plot_param_importances", "reference/visualization/generated/optuna.visualization.matplotlib.plot_pareto_front", "reference/visualization/generated/optuna.visualization.matplotlib.plot_rank", "reference/visualization/generated/optuna.visualization.matplotlib.plot_slice", "reference/visualization/generated/optuna.visualization.matplotlib.plot_terminator_improvement", "reference/visualization/generated/optuna.visualization.matplotlib.plot_timeline", "reference/visualization/generated/optuna.visualization.plot_contour", "reference/visualization/generated/optuna.visualization.plot_edf", "reference/visualization/generated/optuna.visualization.plot_intermediate_values", "reference/visualization/generated/optuna.visualization.plot_optimization_history", "reference/visualization/generated/optuna.visualization.plot_parallel_coordinate", "reference/visualization/generated/optuna.visualization.plot_param_importances", "reference/visualization/generated/optuna.visualization.plot_pareto_front", "reference/visualization/generated/optuna.visualization.plot_rank", "reference/visualization/generated/optuna.visualization.plot_slice", "reference/visualization/generated/optuna.visualization.plot_terminator_improvement", "reference/visualization/generated/optuna.visualization.plot_timeline", "reference/visualization/index", "reference/visualization/matplotlib", "tutorial/10_key_features/001_first", "tutorial/10_key_features/002_configurations", "tutorial/10_key_features/003_efficient_optimization_algorithms", "tutorial/10_key_features/004_distributed", "tutorial/10_key_features/005_visualization", "tutorial/10_key_features/index", "tutorial/10_key_features/sg_execution_times", "tutorial/20_recipes/001_rdb", "tutorial/20_recipes/002_multi_objective", "tutorial/20_recipes/003_attributes", "tutorial/20_recipes/004_cli", "tutorial/20_recipes/005_user_defined_sampler", "tutorial/20_recipes/006_user_defined_pruner", "tutorial/20_recipes/007_optuna_callback", "tutorial/20_recipes/008_specify_params", "tutorial/20_recipes/009_ask_and_tell", "tutorial/20_recipes/010_reuse_best_trial", "tutorial/20_recipes/index", "tutorial/20_recipes/sg_execution_times", "tutorial/index"], "filenames": ["faq.rst", "index.rst", "installation.rst", "license_thirdparty.rst", "privacy.rst", "reference/cli.rst", "reference/distributions.rst", "reference/exceptions.rst", "reference/generated/optuna.TrialPruned.rst", "reference/generated/optuna.copy_study.rst", "reference/generated/optuna.create_study.rst", "reference/generated/optuna.delete_study.rst", "reference/generated/optuna.distributions.CategoricalDistribution.rst", "reference/generated/optuna.distributions.DiscreteUniformDistribution.rst", "reference/generated/optuna.distributions.FloatDistribution.rst", "reference/generated/optuna.distributions.IntDistribution.rst", "reference/generated/optuna.distributions.IntLogUniformDistribution.rst", "reference/generated/optuna.distributions.IntUniformDistribution.rst", "reference/generated/optuna.distributions.LogUniformDistribution.rst", "reference/generated/optuna.distributions.UniformDistribution.rst", "reference/generated/optuna.distributions.check_distribution_compatibility.rst", "reference/generated/optuna.distributions.distribution_to_json.rst", "reference/generated/optuna.distributions.json_to_distribution.rst", "reference/generated/optuna.exceptions.CLIUsageError.rst", "reference/generated/optuna.exceptions.DuplicatedStudyError.rst", "reference/generated/optuna.exceptions.OptunaError.rst", "reference/generated/optuna.exceptions.StorageInternalError.rst", "reference/generated/optuna.exceptions.TrialPruned.rst", "reference/generated/optuna.get_all_study_summaries.rst", "reference/generated/optuna.importance.FanovaImportanceEvaluator.rst", "reference/generated/optuna.importance.MeanDecreaseImpurityImportanceEvaluator.rst", "reference/generated/optuna.importance.get_param_importances.rst", "reference/generated/optuna.integration.BoTorchSampler.rst", "reference/generated/optuna.integration.CatBoostPruningCallback.rst", "reference/generated/optuna.integration.CmaEsSampler.rst", "reference/generated/optuna.integration.DaskStorage.rst", "reference/generated/optuna.integration.FastAIPruningCallback.rst", "reference/generated/optuna.integration.FastAIV1PruningCallback.rst", "reference/generated/optuna.integration.FastAIV2PruningCallback.rst", "reference/generated/optuna.integration.LightGBMPruningCallback.rst", "reference/generated/optuna.integration.MLflowCallback.rst", "reference/generated/optuna.integration.MXNetPruningCallback.rst", "reference/generated/optuna.integration.OptunaSearchCV.rst", "reference/generated/optuna.integration.PyCmaSampler.rst", "reference/generated/optuna.integration.PyTorchIgnitePruningHandler.rst", "reference/generated/optuna.integration.PyTorchLightningPruningCallback.rst", "reference/generated/optuna.integration.ShapleyImportanceEvaluator.rst", "reference/generated/optuna.integration.SkoptSampler.rst", "reference/generated/optuna.integration.TensorBoardCallback.rst", "reference/generated/optuna.integration.TorchDistributedTrial.rst", "reference/generated/optuna.integration.WeightsAndBiasesCallback.rst", "reference/generated/optuna.integration.XGBoostPruningCallback.rst", "reference/generated/optuna.integration.botorch.qehvi_candidates_func.rst", "reference/generated/optuna.integration.botorch.qei_candidates_func.rst", "reference/generated/optuna.integration.botorch.qnehvi_candidates_func.rst", "reference/generated/optuna.integration.botorch.qparego_candidates_func.rst", "reference/generated/optuna.integration.lightgbm.LightGBMTuner.rst", "reference/generated/optuna.integration.lightgbm.LightGBMTunerCV.rst", "reference/generated/optuna.integration.lightgbm.train.rst", "reference/generated/optuna.load_study.rst", "reference/generated/optuna.logging.disable_default_handler.rst", "reference/generated/optuna.logging.disable_propagation.rst", "reference/generated/optuna.logging.enable_default_handler.rst", "reference/generated/optuna.logging.enable_propagation.rst", "reference/generated/optuna.logging.get_verbosity.rst", "reference/generated/optuna.logging.set_verbosity.rst", "reference/generated/optuna.pruners.BasePruner.rst", "reference/generated/optuna.pruners.HyperbandPruner.rst", "reference/generated/optuna.pruners.MedianPruner.rst", "reference/generated/optuna.pruners.NopPruner.rst", "reference/generated/optuna.pruners.PatientPruner.rst", "reference/generated/optuna.pruners.PercentilePruner.rst", "reference/generated/optuna.pruners.SuccessiveHalvingPruner.rst", "reference/generated/optuna.pruners.ThresholdPruner.rst", "reference/generated/optuna.search_space.IntersectionSearchSpace.rst", "reference/generated/optuna.search_space.intersection_search_space.rst", "reference/generated/optuna.storages.JournalFileOpenLock.rst", "reference/generated/optuna.storages.JournalFileStorage.rst", "reference/generated/optuna.storages.JournalFileSymlinkLock.rst", "reference/generated/optuna.storages.JournalRedisStorage.rst", "reference/generated/optuna.storages.JournalStorage.rst", "reference/generated/optuna.storages.RDBStorage.rst", "reference/generated/optuna.storages.RetryFailedTrialCallback.rst", "reference/generated/optuna.storages.fail_stale_trials.rst", "reference/generated/optuna.study.MaxTrialsCallback.rst", "reference/generated/optuna.study.Study.rst", "reference/generated/optuna.study.StudyDirection.rst", "reference/generated/optuna.study.StudySummary.rst", "reference/generated/optuna.study.copy_study.rst", "reference/generated/optuna.study.create_study.rst", "reference/generated/optuna.study.delete_study.rst", "reference/generated/optuna.study.get_all_study_summaries.rst", "reference/generated/optuna.study.load_study.rst", "reference/generated/optuna.terminator.BaseErrorEvaluator.rst", "reference/generated/optuna.terminator.BaseImprovementEvaluator.rst", "reference/generated/optuna.terminator.BaseTerminator.rst", "reference/generated/optuna.terminator.CrossValidationErrorEvaluator.rst", "reference/generated/optuna.terminator.RegretBoundEvaluator.rst", "reference/generated/optuna.terminator.StaticErrorEvaluator.rst", "reference/generated/optuna.terminator.Terminator.rst", "reference/generated/optuna.terminator.TerminatorCallback.rst", "reference/generated/optuna.terminator.report_cross_validation_scores.rst", "reference/generated/optuna.trial.FixedTrial.rst", "reference/generated/optuna.trial.FrozenTrial.rst", "reference/generated/optuna.trial.Trial.rst", "reference/generated/optuna.trial.TrialState.rst", "reference/generated/optuna.trial.create_trial.rst", "reference/importance.rst", "reference/index.rst", "reference/integration.rst", "reference/logging.rst", "reference/optuna.rst", "reference/pruners.rst", "reference/samplers/generated/optuna.samplers.BaseSampler.rst", "reference/samplers/generated/optuna.samplers.BruteForceSampler.rst", "reference/samplers/generated/optuna.samplers.CmaEsSampler.rst", "reference/samplers/generated/optuna.samplers.GridSampler.rst", "reference/samplers/generated/optuna.samplers.IntersectionSearchSpace.rst", "reference/samplers/generated/optuna.samplers.MOTPESampler.rst", "reference/samplers/generated/optuna.samplers.NSGAIIISampler.rst", "reference/samplers/generated/optuna.samplers.NSGAIISampler.rst", "reference/samplers/generated/optuna.samplers.PartialFixedSampler.rst", "reference/samplers/generated/optuna.samplers.QMCSampler.rst", "reference/samplers/generated/optuna.samplers.RandomSampler.rst", "reference/samplers/generated/optuna.samplers.TPESampler.rst", "reference/samplers/generated/optuna.samplers.intersection_search_space.rst", "reference/samplers/generated/optuna.samplers.nsgaii.BLXAlphaCrossover.rst", "reference/samplers/generated/optuna.samplers.nsgaii.BaseCrossover.rst", "reference/samplers/generated/optuna.samplers.nsgaii.SBXCrossover.rst", "reference/samplers/generated/optuna.samplers.nsgaii.SPXCrossover.rst", "reference/samplers/generated/optuna.samplers.nsgaii.UNDXCrossover.rst", "reference/samplers/generated/optuna.samplers.nsgaii.UniformCrossover.rst", "reference/samplers/generated/optuna.samplers.nsgaii.VSBXCrossover.rst", "reference/samplers/index.rst", "reference/samplers/nsgaii.rst", "reference/search_space.rst", "reference/storages.rst", "reference/study.rst", "reference/terminator.rst", "reference/trial.rst", "reference/visualization/generated/optuna.visualization.is_available.rst", "reference/visualization/generated/optuna.visualization.matplotlib.is_available.rst", "reference/visualization/generated/optuna.visualization.matplotlib.plot_contour.rst", "reference/visualization/generated/optuna.visualization.matplotlib.plot_edf.rst", "reference/visualization/generated/optuna.visualization.matplotlib.plot_intermediate_values.rst", "reference/visualization/generated/optuna.visualization.matplotlib.plot_optimization_history.rst", "reference/visualization/generated/optuna.visualization.matplotlib.plot_parallel_coordinate.rst", "reference/visualization/generated/optuna.visualization.matplotlib.plot_param_importances.rst", "reference/visualization/generated/optuna.visualization.matplotlib.plot_pareto_front.rst", "reference/visualization/generated/optuna.visualization.matplotlib.plot_rank.rst", "reference/visualization/generated/optuna.visualization.matplotlib.plot_slice.rst", "reference/visualization/generated/optuna.visualization.matplotlib.plot_terminator_improvement.rst", "reference/visualization/generated/optuna.visualization.matplotlib.plot_timeline.rst", "reference/visualization/generated/optuna.visualization.plot_contour.rst", "reference/visualization/generated/optuna.visualization.plot_edf.rst", "reference/visualization/generated/optuna.visualization.plot_intermediate_values.rst", "reference/visualization/generated/optuna.visualization.plot_optimization_history.rst", "reference/visualization/generated/optuna.visualization.plot_parallel_coordinate.rst", "reference/visualization/generated/optuna.visualization.plot_param_importances.rst", "reference/visualization/generated/optuna.visualization.plot_pareto_front.rst", "reference/visualization/generated/optuna.visualization.plot_rank.rst", "reference/visualization/generated/optuna.visualization.plot_slice.rst", "reference/visualization/generated/optuna.visualization.plot_terminator_improvement.rst", "reference/visualization/generated/optuna.visualization.plot_timeline.rst", "reference/visualization/index.rst", "reference/visualization/matplotlib.rst", "tutorial/10_key_features/001_first.rst", "tutorial/10_key_features/002_configurations.rst", "tutorial/10_key_features/003_efficient_optimization_algorithms.rst", "tutorial/10_key_features/004_distributed.rst", "tutorial/10_key_features/005_visualization.rst", "tutorial/10_key_features/index.rst", "tutorial/10_key_features/sg_execution_times.rst", "tutorial/20_recipes/001_rdb.rst", "tutorial/20_recipes/002_multi_objective.rst", "tutorial/20_recipes/003_attributes.rst", "tutorial/20_recipes/004_cli.rst", "tutorial/20_recipes/005_user_defined_sampler.rst", "tutorial/20_recipes/006_user_defined_pruner.rst", "tutorial/20_recipes/007_optuna_callback.rst", "tutorial/20_recipes/008_specify_params.rst", "tutorial/20_recipes/009_ask_and_tell.rst", "tutorial/20_recipes/010_reuse_best_trial.rst", "tutorial/20_recipes/index.rst", "tutorial/20_recipes/sg_execution_times.rst", "tutorial/index.rst"], "titles": ["FAQ", "Optuna: A hyperparameter optimization framework", "Installation", "Third-party License", "Privacy Policy", "optuna.cli", "optuna.distributions", "optuna.exceptions", "optuna.TrialPruned", "optuna.copy_study", "optuna.create_study", "optuna.delete_study", "optuna.distributions.CategoricalDistribution", "optuna.distributions.DiscreteUniformDistribution", "optuna.distributions.FloatDistribution", "optuna.distributions.IntDistribution", "optuna.distributions.IntLogUniformDistribution", "optuna.distributions.IntUniformDistribution", "optuna.distributions.LogUniformDistribution", "optuna.distributions.UniformDistribution", "optuna.distributions.check_distribution_compatibility", "optuna.distributions.distribution_to_json", "optuna.distributions.json_to_distribution", "optuna.exceptions.CLIUsageError", "optuna.exceptions.DuplicatedStudyError", "optuna.exceptions.OptunaError", "optuna.exceptions.StorageInternalError", "optuna.exceptions.TrialPruned", "optuna.get_all_study_summaries", "optuna.importance.FanovaImportanceEvaluator", "optuna.importance.MeanDecreaseImpurityImportanceEvaluator", "optuna.importance.get_param_importances", "optuna.integration.BoTorchSampler", "optuna.integration.CatBoostPruningCallback", "optuna.integration.CmaEsSampler", "optuna.integration.DaskStorage", "optuna.integration.FastAIPruningCallback", "optuna.integration.FastAIV1PruningCallback", "optuna.integration.FastAIV2PruningCallback", "optuna.integration.LightGBMPruningCallback", "optuna.integration.MLflowCallback", "optuna.integration.MXNetPruningCallback", "optuna.integration.OptunaSearchCV", "optuna.integration.PyCmaSampler", "optuna.integration.PyTorchIgnitePruningHandler", "optuna.integration.PyTorchLightningPruningCallback", "optuna.integration.ShapleyImportanceEvaluator", "optuna.integration.SkoptSampler", "optuna.integration.TensorBoardCallback", "optuna.integration.TorchDistributedTrial", "optuna.integration.WeightsAndBiasesCallback", "optuna.integration.XGBoostPruningCallback", "optuna.integration.botorch.qehvi_candidates_func", "optuna.integration.botorch.qei_candidates_func", "optuna.integration.botorch.qnehvi_candidates_func", "optuna.integration.botorch.qparego_candidates_func", "optuna.integration.lightgbm.LightGBMTuner", "optuna.integration.lightgbm.LightGBMTunerCV", "optuna.integration.lightgbm.train", "optuna.load_study", "optuna.logging.disable_default_handler", "optuna.logging.disable_propagation", "optuna.logging.enable_default_handler", "optuna.logging.enable_propagation", "optuna.logging.get_verbosity", "optuna.logging.set_verbosity", "optuna.pruners.BasePruner", "optuna.pruners.HyperbandPruner", "optuna.pruners.MedianPruner", "optuna.pruners.NopPruner", "optuna.pruners.PatientPruner", "optuna.pruners.PercentilePruner", "optuna.pruners.SuccessiveHalvingPruner", "optuna.pruners.ThresholdPruner", "optuna.search_space.IntersectionSearchSpace", "optuna.search_space.intersection_search_space", "optuna.storages.JournalFileOpenLock", "optuna.storages.JournalFileStorage", "optuna.storages.JournalFileSymlinkLock", "optuna.storages.JournalRedisStorage", "optuna.storages.JournalStorage", "optuna.storages.RDBStorage", "optuna.storages.RetryFailedTrialCallback", "optuna.storages.fail_stale_trials", "optuna.study.MaxTrialsCallback", "optuna.study.Study", "optuna.study.StudyDirection", "optuna.study.StudySummary", "optuna.study.copy_study", "optuna.study.create_study", "optuna.study.delete_study", "optuna.study.get_all_study_summaries", "optuna.study.load_study", "optuna.terminator.BaseErrorEvaluator", "optuna.terminator.BaseImprovementEvaluator", "optuna.terminator.BaseTerminator", "optuna.terminator.CrossValidationErrorEvaluator", "optuna.terminator.RegretBoundEvaluator", "optuna.terminator.StaticErrorEvaluator", "optuna.terminator.Terminator", "optuna.terminator.TerminatorCallback", "optuna.terminator.report_cross_validation_scores", "optuna.trial.FixedTrial", "optuna.trial.FrozenTrial", "optuna.trial.Trial", "optuna.trial.TrialState", "optuna.trial.create_trial", "optuna.importance", "API Reference", "optuna.integration", "optuna.logging", "optuna", "optuna.pruners", "optuna.samplers.BaseSampler", "optuna.samplers.BruteForceSampler", "optuna.samplers.CmaEsSampler", "optuna.samplers.GridSampler", "optuna.samplers.IntersectionSearchSpace", "optuna.samplers.MOTPESampler", "optuna.samplers.NSGAIIISampler", "optuna.samplers.NSGAIISampler", "optuna.samplers.PartialFixedSampler", "optuna.samplers.QMCSampler", "optuna.samplers.RandomSampler", "optuna.samplers.TPESampler", "optuna.samplers.intersection_search_space", "optuna.samplers.nsgaii.BLXAlphaCrossover", "optuna.samplers.nsgaii.BaseCrossover", "optuna.samplers.nsgaii.SBXCrossover", "optuna.samplers.nsgaii.SPXCrossover", "optuna.samplers.nsgaii.UNDXCrossover", "optuna.samplers.nsgaii.UniformCrossover", "optuna.samplers.nsgaii.VSBXCrossover", "optuna.samplers", "optuna.samplers.nsgaii", "optuna.search_space", "optuna.storages", "optuna.study", "optuna.terminator", "optuna.trial", "optuna.visualization.is_available", "optuna.visualization.matplotlib.is_available", "optuna.visualization.matplotlib.plot_contour", "optuna.visualization.matplotlib.plot_edf", "optuna.visualization.matplotlib.plot_intermediate_values", "optuna.visualization.matplotlib.plot_optimization_history", "optuna.visualization.matplotlib.plot_parallel_coordinate", "optuna.visualization.matplotlib.plot_param_importances", "optuna.visualization.matplotlib.plot_pareto_front", "optuna.visualization.matplotlib.plot_rank", "optuna.visualization.matplotlib.plot_slice", "optuna.visualization.matplotlib.plot_terminator_improvement", "optuna.visualization.matplotlib.plot_timeline", "optuna.visualization.plot_contour", "optuna.visualization.plot_edf", "optuna.visualization.plot_intermediate_values", "optuna.visualization.plot_optimization_history", "optuna.visualization.plot_parallel_coordinate", "optuna.visualization.plot_param_importances", "optuna.visualization.plot_pareto_front", "optuna.visualization.plot_rank", "optuna.visualization.plot_slice", "optuna.visualization.plot_terminator_improvement", "optuna.visualization.plot_timeline", "optuna.visualization", "optuna.visualization.matplotlib", "Lightweight, versatile, and platform agnostic architecture", "Pythonic Search Space", "Efficient Optimization Algorithms", "Easy Parallelization", "Quick Visualization for Hyperparameter Optimization Analysis", "Key Features", "Computation times", "Saving/Resuming Study with RDB Backend", "Multi-objective Optimization with Optuna", "User Attributes", "Command-Line Interface", "User-Defined Sampler", "User-Defined Pruner", "Callback for Study.optimize", "Specify Hyperparameters Manually", "Ask-and-Tell Interface", "Re-use the best trial", "Recipes", "Computation times", "Tutorial"], "terms": {"compat": [0, 12, 20, 34, 35, 47, 81], "most": [0, 35, 67, 106, 109, 122, 168, 174, 182], "": [0, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 32, 33, 34, 35, 40, 41, 42, 43, 47, 53, 56, 57, 59, 60, 62, 63, 64, 65, 67, 68, 72, 74, 75, 81, 85, 88, 89, 90, 92, 96, 104, 107, 109, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 130, 139, 142, 143, 145, 146, 147, 148, 149, 150, 153, 154, 156, 157, 158, 159, 160, 161, 166, 168, 169, 171, 173, 174, 176, 178, 180, 181, 182, 185], "easi": [0, 1, 133, 166, 171, 172, 173, 185], "those": [0, 40, 50, 83, 142, 143, 145, 149, 154, 156, 177, 180], "pleas": [0, 1, 5, 9, 10, 11, 28, 29, 30, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 56, 57, 59, 62, 63, 67, 72, 75, 81, 85, 88, 89, 90, 91, 92, 99, 100, 102, 103, 104, 106, 109, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 131, 133, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 159, 164, 169, 170, 173, 176, 177, 178], "refer": [0, 10, 29, 30, 32, 33, 34, 37, 38, 39, 40, 41, 43, 44, 46, 47, 49, 50, 51, 58, 62, 67, 72, 81, 85, 89, 99, 100, 102, 103, 104, 107, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 129, 131, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 159, 170, 173, 176, 177, 178], "exampl": [0, 5, 8, 9, 10, 11, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 80, 81, 84, 85, 88, 89, 90, 91, 92, 99, 100, 102, 103, 104, 106, 112, 114, 115, 116, 118, 121, 122, 123, 124, 133, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 173, 174, 175, 176, 179, 180, 181, 182, 183], "There": [0, 60, 64, 65], "wai": [0, 3, 75, 76, 78, 125, 176, 177, 182], "realiz": [0, 124], "first": [0, 29, 30, 31, 39, 43, 46, 47, 53, 61, 67, 72, 82, 85, 104, 113, 115, 122, 147, 158, 166, 177, 179, 182], "callabl": [0, 29, 30, 31, 32, 40, 42, 46, 50, 56, 57, 81, 85, 118, 119, 120, 124, 142, 143, 145, 146, 147, 148, 149, 150, 153, 154, 156, 157, 158, 159, 160, 161], "class": [0, 6, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 25, 27, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 56, 57, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 168, 173, 177, 178, 179, 181], "purpos": [0, 3, 178], "follow": [0, 1, 3, 8, 27, 35, 42, 56, 57, 64, 65, 80, 81, 85, 99, 106, 113, 115, 116, 118, 119, 120, 122, 124, 126, 129, 131, 133, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 176, 177, 181, 182], "import": [0, 1, 7, 8, 9, 10, 11, 27, 28, 40, 42, 43, 46, 50, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 80, 81, 82, 84, 85, 88, 89, 90, 91, 92, 99, 100, 102, 103, 104, 106, 108, 114, 115, 116, 118, 121, 122, 123, 124, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "def": [0, 1, 8, 9, 10, 11, 27, 28, 40, 43, 50, 59, 67, 68, 69, 70, 71, 72, 73, 80, 81, 84, 85, 88, 89, 90, 91, 92, 100, 102, 103, 104, 114, 115, 116, 118, 121, 122, 123, 124, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "__init__": [0, 56, 57, 177, 178, 179], "self": [0, 42, 56, 57, 76, 78, 85, 177, 178, 179], "min_x": 0, "max_x": 0, "hold": [0, 83], "thi": [0, 3, 4, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 49, 50, 53, 54, 56, 57, 58, 61, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 78, 79, 80, 81, 82, 84, 85, 87, 89, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 137, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 166, 168, 169, 170, 173, 174, 175, 177, 178, 179, 180, 181, 182], "implement": [0, 5, 10, 29, 30, 32, 34, 42, 43, 46, 47, 59, 66, 67, 68, 69, 70, 71, 72, 73, 85, 89, 92, 99, 100, 107, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 127, 133, 137, 138, 168, 174, 179], "specif": [0, 3, 6, 7, 25, 85, 97, 104, 109, 113, 120, 133, 148, 159, 174, 177, 180], "field": [0, 85, 103], "__call__": [0, 179], "calcul": [0, 46, 74, 97, 99, 117, 118, 124, 176, 177, 181, 182], "an": [0, 1, 6, 8, 10, 11, 13, 14, 15, 17, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 89, 90, 91, 92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 158, 159, 160, 162, 163, 166, 168, 169, 173, 175, 176, 182], "extra": 0, "suggest_float": [0, 1, 8, 9, 10, 11, 13, 14, 18, 19, 27, 28, 40, 43, 49, 50, 59, 67, 68, 69, 70, 71, 72, 81, 84, 85, 88, 89, 90, 91, 92, 99, 100, 102, 103, 104, 114, 115, 116, 118, 121, 122, 123, 124, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "execut": [0, 1, 32, 34, 42, 43, 47, 72, 75, 80, 81, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 140, 141, 163, 166, 169, 170, 172, 177, 184], "instanc": [0, 32, 34, 35, 42, 43, 47, 56, 57, 74, 81, 103, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 139, 154, 173], "create_studi": [0, 1, 8, 9, 11, 27, 28, 40, 43, 50, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 80, 81, 82, 84, 85, 88, 90, 91, 92, 99, 100, 103, 104, 114, 115, 116, 118, 121, 122, 123, 124, 137, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "100": [0, 1, 8, 27, 67, 68, 69, 70, 71, 72, 73, 81, 102, 104, 116, 133, 142, 145, 146, 147, 149, 150, 151, 153, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 174, 176, 177, 178, 180, 181], "n_trial": [0, 1, 8, 9, 10, 11, 27, 28, 40, 42, 43, 50, 53, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 81, 84, 85, 87, 88, 89, 90, 91, 92, 100, 103, 104, 115, 116, 118, 121, 122, 123, 124, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "second": [0, 29, 42, 53, 56, 57, 61, 81, 85, 104, 122, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 181, 182], "you": [0, 1, 2, 4, 10, 29, 32, 33, 35, 37, 38, 39, 41, 44, 45, 48, 49, 50, 51, 56, 57, 61, 67, 75, 79, 80, 81, 84, 85, 89, 112, 115, 119, 121, 125, 133, 143, 145, 151, 154, 156, 162, 166, 167, 168, 169, 170, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185], "lambda": [0, 29, 30, 31, 46, 143, 147, 154, 158, 159, 170, 174], "functool": 0, "partial": [0, 121, 168, 182], "creat": [0, 1, 9, 10, 32, 35, 40, 42, 49, 50, 56, 57, 61, 63, 64, 76, 78, 80, 81, 85, 88, 89, 106, 118, 120, 122, 124, 126, 127, 137, 164, 166, 168, 173, 176, 177, 179, 180, 181], "closur": 0, "below": [0, 1, 56, 57, 98, 136, 151, 162, 168, 169, 178, 185], "take": [0, 28, 29, 32, 34, 43, 47, 66, 67, 68, 69, 70, 71, 72, 73, 91, 107, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 128, 132, 148, 151, 159, 162, 164, 167, 178, 179, 180, 181], "three": [0, 32, 52, 55, 113, 130, 148, 159, 177, 181], "abov": [0, 3, 113, 122, 166, 169, 176, 177, 179, 181, 182], "wrap": [0, 35, 70, 100, 177], "also": [0, 2, 9, 10, 11, 28, 29, 30, 42, 46, 59, 85, 87, 88, 89, 90, 91, 92, 115, 119, 123, 124, 151, 162, 167, 168, 169, 170, 173, 175, 180], "sklearn_addtitional_arg": 0, "py": [0, 72, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184], "reus": 0, "dataset": [0, 1, 8, 27, 33, 42, 56, 57, 67, 68, 69, 70, 71, 72, 96, 99, 100, 104, 151, 162, 168, 170, 174, 175, 178, 180, 181, 182], "instead": [0, 6, 10, 13, 16, 17, 18, 19, 32, 39, 43, 49, 56, 57, 58, 66, 67, 68, 69, 70, 71, 72, 73, 78, 81, 85, 89, 102, 103, 104, 115, 116, 117, 118, 124, 125, 137, 148, 159, 170, 173, 176, 181], "load": [0, 59, 79, 85, 92, 137, 173], "each": [0, 30, 32, 33, 34, 40, 42, 43, 46, 47, 50, 53, 56, 57, 59, 67, 72, 81, 85, 92, 102, 103, 109, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 166, 168, 169, 174, 177, 181, 182], "ye": [0, 168], "possibl": [0, 3, 42, 67, 72, 75, 103, 119, 122, 124, 125, 180], "In": [0, 1, 10, 14, 15, 29, 32, 34, 40, 43, 45, 47, 50, 67, 76, 78, 80, 89, 102, 106, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 131, 140, 141, 164, 166, 167, 173, 176, 177, 178, 180, 181, 182], "simplest": 0, "form": [0, 3, 42, 85, 118, 124, 168], "work": [0, 4, 9, 29, 42, 79, 81, 85, 88, 133, 169, 179, 180, 182], "storag": [0, 1, 9, 10, 11, 12, 20, 24, 26, 28, 35, 45, 59, 85, 88, 89, 90, 91, 92, 103, 108, 124, 169, 173, 175, 176], "If": [0, 9, 10, 13, 14, 15, 17, 20, 29, 30, 31, 32, 33, 35, 39, 40, 41, 42, 43, 45, 46, 47, 50, 53, 56, 57, 59, 67, 68, 70, 71, 72, 73, 74, 75, 77, 79, 80, 81, 82, 84, 85, 88, 89, 92, 97, 99, 104, 115, 117, 120, 122, 124, 125, 128, 129, 130, 132, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 168, 169, 174, 177, 181, 185], "want": [0, 10, 33, 37, 38, 39, 41, 44, 45, 49, 50, 51, 56, 57, 75, 81, 84, 89, 112, 125, 133, 143, 145, 154, 156, 168, 169, 174, 181, 182, 185], "handi": 0, "sqlite": [0, 9, 11, 28, 35, 59, 81, 82, 88, 90, 91, 92, 169, 170, 173, 175, 176], "local": [0, 35, 115, 173], "study_nam": [0, 9, 10, 11, 28, 35, 40, 59, 80, 81, 85, 87, 88, 89, 90, 91, 92, 143, 154, 169, 173, 176], "foo_studi": 0, "db": [0, 9, 11, 26, 28, 35, 59, 79, 81, 88, 90, 91, 92, 170, 173, 175, 176], "The": [0, 1, 3, 5, 6, 7, 9, 10, 13, 16, 17, 18, 19, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 61, 64, 67, 70, 72, 74, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 173, 176, 177, 178, 179, 181], "state": [0, 1, 32, 34, 35, 42, 43, 47, 80, 81, 83, 84, 85, 103, 104, 105, 106, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 139, 166, 168, 173, 176, 177, 178, 179, 181], "persist": [0, 10, 77, 89, 103, 170, 173], "file": [0, 61, 63, 76, 77, 78, 85, 172, 173, 176, 184], "see": [0, 1, 5, 9, 10, 11, 13, 16, 17, 18, 19, 28, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 67, 70, 79, 80, 81, 82, 83, 85, 87, 88, 89, 90, 91, 92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 132, 133, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 159, 160, 162, 163, 166, 167, 168, 169, 170, 173, 177, 179, 180], "backend": [0, 10, 26, 43, 45, 47, 49, 77, 79, 80, 81, 89, 115, 136, 164, 165, 170, 176, 183, 184, 185], "more": [0, 4, 29, 31, 35, 40, 42, 50, 67, 80, 81, 85, 104, 113, 118, 120, 123, 124, 133, 167, 168, 170, 178, 181, 182], "detail": [0, 5, 9, 10, 11, 28, 32, 33, 37, 38, 39, 40, 41, 43, 44, 49, 50, 51, 56, 59, 67, 72, 81, 85, 88, 89, 90, 91, 92, 100, 102, 103, 104, 115, 118, 122, 123, 124, 133, 168, 170, 176, 177], "depend": [0, 28, 29, 45, 85, 91, 102, 133, 140, 141, 166, 167, 176], "default": [0, 10, 31, 35, 39, 40, 41, 42, 43, 47, 50, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 67, 72, 80, 81, 82, 84, 85, 89, 92, 97, 99, 100, 102, 107, 115, 118, 119, 120, 122, 124, 128, 129, 130, 132, 136, 142, 146, 147, 148, 149, 150, 151, 153, 157, 158, 159, 160, 161, 162, 164, 168, 180], "databas": [0, 9, 10, 11, 28, 35, 59, 80, 88, 89, 90, 91, 92, 136, 169], "like": [0, 29, 30, 41, 45, 46, 50, 104, 133, 169, 173, 176, 182], "usual": [0, 53, 166], "python": [0, 1, 2, 29, 30, 35, 42, 46, 85, 104, 110, 133, 164, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185], "pickl": [0, 173], "joblib": 0, "For": [0, 5, 29, 30, 31, 32, 33, 41, 42, 45, 46, 50, 67, 81, 99, 103, 104, 109, 115, 118, 119, 120, 122, 124, 126, 129, 131, 133, 147, 154, 158, 167, 168, 169, 170, 173, 174, 177, 178, 181, 182], "dump": [0, 173, 175], "pkl": [0, 56, 57, 173], "And": [0, 47], "print": [0, 64, 166, 168, 173, 174, 176, 177, 178, 182], "until": [0, 42, 43, 47, 67, 68, 70, 71, 72, 73, 84, 85, 115, 116, 118, 124], "now": [0, 103, 176], "best_trial": [0, 85, 87, 103, 104, 166, 173, 174, 177], "param": [0, 29, 30, 31, 42, 46, 56, 57, 85, 102, 103, 104, 106, 120, 142, 146, 147, 149, 150, 153, 157, 158, 160, 161, 164, 166, 168, 170, 173, 174, 176, 177, 180, 181], "kei": [0, 29, 30, 31, 35, 40, 42, 46, 49, 74, 75, 79, 80, 81, 85, 102, 103, 104, 116, 117, 125, 174, 175], "item": [0, 82, 174, 177], "f": [0, 61, 63, 85, 99, 118, 144, 155, 168, 174, 178], "note": [0, 20, 39, 40, 43, 47, 56, 57, 61, 66, 67, 68, 69, 70, 71, 72, 73, 74, 80, 81, 85, 103, 104, 106, 114, 115, 116, 117, 119, 122, 133, 142, 143, 146, 149, 151, 153, 154, 157, 160, 161, 162, 168, 173, 175, 178, 181], "doe": [0, 31, 42, 45, 56, 57, 72, 85, 102, 103, 104, 115, 116, 148, 159, 168, 179, 182], "support": [0, 2, 33, 42, 49, 67, 76, 104, 109, 115, 118, 133, 140, 141, 177, 180, 181], "reload": 0, "across": [0, 35, 85, 109, 169], "differ": [0, 32, 34, 42, 43, 47, 67, 74, 75, 97, 103, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 133, 142, 148, 149, 159, 166, 168, 181], "version": [0, 2, 31, 32, 33, 34, 35, 40, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 70, 72, 79, 80, 81, 82, 83, 85, 94, 96, 97, 98, 99, 100, 101, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 128, 129, 130, 132, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 159, 160, 162, 163], "To": [0, 4, 31, 32, 34, 43, 47, 50, 56, 57, 58, 82, 85, 97, 104, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 166, 168, 169, 173, 177, 181], "upgrad": [0, 81, 176], "schema": [0, 81, 176], "necessari": [0, 29, 45, 50, 167], "By": [0, 29, 31, 39, 42, 43, 56, 57, 81, 115, 166, 168, 170], "show": [0, 56, 57, 63, 67, 85, 133, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 168, 173, 174, 176, 177, 179, 180, 181, 182], "info": [0, 33, 61, 63, 64, 65, 99, 110], "level": [0, 42, 56, 57, 64, 65, 106, 109, 110], "chang": [0, 1, 13, 16, 17, 18, 19, 31, 32, 33, 34, 35, 37, 40, 42, 43, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 67, 70, 72, 79, 80, 82, 83, 85, 87, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 132, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 159, 160, 162, 163, 168], "set_verbos": [0, 56, 57, 110], "stop": [0, 10, 33, 59, 60, 61, 63, 67, 68, 70, 72, 84, 85, 89, 92, 99, 116, 138, 168, 178], "warn": [0, 43, 47, 56, 64, 65, 104, 110, 115, 122, 124], "2020": [0, 60, 168, 169], "07": [0, 166, 169, 172, 184], "21": [0, 169, 180], "13": [0, 122, 168, 169, 178, 180], "41": [0, 180], "45": [0, 169, 178, 180], "627": 0, "0": [0, 1, 8, 10, 13, 14, 16, 17, 18, 19, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 64, 65, 67, 68, 69, 70, 71, 72, 73, 77, 79, 80, 82, 83, 85, 87, 89, 91, 92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184], "finish": [0, 9, 32, 34, 35, 43, 47, 50, 60, 64, 65, 68, 71, 80, 81, 85, 88, 99, 103, 105, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 133, 168, 169, 173, 174, 176, 179, 180, 181], "disabl": [0, 56, 57, 60, 61, 63, 68, 70, 71, 73, 85], "further": [0, 9, 10, 11, 20, 28, 33, 37, 38, 39, 41, 43, 44, 49, 51, 59, 88, 89, 90, 91, 92, 99, 115, 118, 119, 120, 122, 124, 126, 129, 131, 177], "hyperparamet": [0, 6, 29, 30, 31, 42, 46, 50, 56, 57, 58, 67, 85, 99, 104, 107, 115, 122, 124, 147, 158, 164, 166, 167, 168, 171, 172, 174, 178, 181, 182, 183, 184, 185], "its": [0, 3, 13, 31, 32, 34, 43, 47, 67, 74, 107, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 178], "correspond": [0, 10, 33, 35, 37, 38, 39, 41, 42, 44, 45, 51, 53, 67, 80, 81, 85, 89, 109, 116, 166, 177], "discard": 0, "intermedi": [0, 35, 39, 67, 68, 70, 71, 72, 73, 80, 81, 103, 104, 106, 109, 112, 144, 155, 168, 178], "neural": [0, 35, 49, 67, 80, 81, 103, 104], "network": [0, 35, 49, 67, 79, 80, 81, 103, 104, 154], "weight": [0, 50, 118, 124], "featur": [0, 13, 16, 17, 18, 19, 30, 31, 32, 33, 34, 35, 37, 40, 42, 43, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 68, 70, 71, 79, 80, 82, 83, 85, 87, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 132, 133, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 159, 160, 162, 163, 167, 168, 170, 173, 174, 175, 177, 178], "we": [0, 1, 2, 4, 29, 47, 67, 68, 72, 81, 104, 122, 133, 151, 162, 166, 167, 168, 169, 173, 174, 175, 176, 178, 179, 180, 182, 185], "recommend": [0, 2, 12, 29, 42, 47, 67, 81, 85, 104, 114, 115, 116, 118, 122, 124, 133, 137, 167, 168, 169, 185], "number": [0, 28, 29, 30, 31, 32, 34, 35, 40, 42, 43, 46, 47, 48, 50, 51, 52, 53, 55, 56, 57, 67, 68, 71, 72, 73, 77, 79, 80, 81, 82, 84, 85, 87, 91, 97, 99, 102, 103, 104, 109, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 127, 133, 151, 162, 166, 168, 169, 173, 174, 176, 178, 179, 180, 181], "order": [0, 29, 31, 40, 42, 50, 56, 57, 63, 81, 82, 85, 114, 116, 148, 159], "identifi": [0, 35, 47, 59, 72, 82, 92, 173], "svm": [0, 1, 42, 104, 167, 175], "svc_c": [0, 167, 175], "1e": [0, 1, 42, 85, 104, 144, 151, 155, 162, 167, 168, 174, 175, 180, 181, 182], "10": [0, 1, 9, 10, 11, 28, 32, 40, 42, 50, 59, 60, 61, 63, 64, 65, 67, 68, 71, 73, 81, 84, 85, 88, 89, 90, 91, 92, 106, 118, 121, 123, 124, 133, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "1e10": [0, 1, 42, 167, 175], "true": [0, 1, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 27, 28, 31, 32, 34, 35, 40, 42, 43, 47, 49, 50, 56, 57, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 85, 91, 99, 100, 102, 103, 104, 115, 117, 118, 120, 122, 124, 125, 140, 141, 144, 148, 151, 155, 159, 162, 167, 168, 170, 173, 174, 175, 178, 180, 181, 182], "clf": [0, 8, 27, 42, 67, 68, 69, 70, 71, 72, 99, 100, 104, 151, 162, 168, 175, 178, 181, 182], "sklearn": [0, 1, 8, 27, 29, 30, 42, 46, 67, 68, 69, 70, 71, 72, 99, 100, 104, 151, 162, 167, 168, 170, 175, 178, 180, 181, 182], "svc": [0, 42, 104, 167, 175], "c": [0, 1, 2, 3, 42, 85, 114, 167, 175, 181, 182], "fit": [0, 1, 3, 29, 30, 37, 38, 42, 45, 46, 104, 124, 181, 182], "x_train": [0, 1, 8, 27, 67, 68, 69, 70, 71, 72, 104, 178, 181, 182], "y_train": [0, 1, 8, 27, 67, 68, 69, 70, 71, 72, 104, 178, 181, 182], "open": [0, 61, 63, 76, 173], "format": [0, 21, 22, 45, 107, 166, 167, 168, 173, 174, 176], "wb": [0, 173], "fout": [0, 173], "accuracy_scor": [0, 170, 180, 182], "y_valid": [0, 8, 27, 67, 68, 69, 70, 71, 72, 104, 178, 181], "predict": [0, 1, 29, 30, 42, 46, 170, 180, 182], "x_valid": [0, 8, 27, 67, 68, 69, 70, 71, 72, 104, 178, 181], "rb": [0, 173], "fin": 0, "best_clf": 0, "paramet": [0, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 173, 174, 176, 177, 179, 180], "specifi": [0, 10, 24, 28, 29, 30, 31, 32, 34, 35, 39, 42, 43, 46, 47, 56, 57, 59, 67, 71, 72, 80, 81, 82, 85, 89, 91, 92, 97, 98, 103, 104, 106, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 128, 129, 130, 132, 142, 143, 145, 146, 147, 148, 149, 150, 153, 154, 156, 157, 158, 159, 160, 161, 168, 173, 174, 176, 179, 183, 184, 185], "fix": [0, 67, 85, 98, 102, 104, 114, 115, 116, 121, 168], "random": [0, 29, 30, 32, 34, 35, 42, 43, 46, 47, 56, 57, 96, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 168, 170, 177], "seed": [0, 29, 30, 32, 34, 42, 43, 46, 47, 56, 57, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 142, 143, 144, 145, 146, 147, 149, 150, 153, 154, 155, 156, 157, 158, 160, 161, 170, 173], "via": [0, 2, 31, 33, 40, 43, 47, 104, 115, 122, 173, 175, 176], "sampler": [0, 1, 10, 12, 13, 14, 15, 16, 17, 18, 19, 29, 32, 34, 43, 47, 59, 67, 85, 89, 92, 108, 142, 143, 144, 145, 146, 147, 149, 150, 153, 154, 155, 156, 157, 158, 160, 161, 170, 173, 176, 181, 183, 184, 185], "tpesampl": [0, 10, 43, 47, 56, 57, 59, 67, 85, 89, 92, 115, 118, 122, 133, 142, 144, 145, 146, 149, 150, 153, 155, 156, 157, 160, 161, 168, 170, 176], "behav": [0, 182], "determinist": [0, 29, 56, 57], "prune": [0, 1, 7, 8, 27, 33, 37, 38, 39, 41, 42, 44, 45, 47, 51, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 85, 103, 104, 105, 109, 111, 112, 115, 117, 120, 124, 125, 133, 170, 180, 181, 182], "hyperbandprun": [0, 115, 168, 181], "hash": 0, "howev": [0, 3, 32, 42, 115, 118, 166, 168, 176], "caveat": 0, "mode": [0, 50, 61, 63], "inher": [0, 151, 162], "non": [0, 10, 31, 70, 77, 79, 89, 116, 119, 148, 159, 168], "determin": [0, 32, 43, 47, 67, 72, 73, 74, 75, 85, 100, 102, 104, 112, 113, 115, 117, 119, 122, 125, 148, 151, 159, 162, 177, 178], "thu": [0, 32, 34, 43, 45, 47, 67, 85, 104, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 181], "veri": 0, "difficult": 0, "same": [0, 10, 20, 32, 34, 35, 40, 43, 47, 49, 50, 57, 68, 71, 72, 74, 75, 80, 81, 85, 89, 102, 103, 104, 106, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 148, 159, 169, 177, 178, 180, 182], "condit": [0, 1, 3, 31, 32, 76, 78, 82, 120, 133, 167, 168], "sequenti": [0, 35, 80, 81, 167, 174], "would": [0, 45, 81, 142, 149, 166, 168], "e": [0, 1, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 47, 50, 51, 56, 57, 58, 64, 65, 67, 71, 72, 74, 75, 80, 81, 85, 99, 103, 104, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 129, 143, 154, 159, 163, 168, 169, 170, 173, 177, 178], "even": [0, 3, 9, 82, 85, 88, 176, 178], "were": [0, 168], "cannot": [0, 33, 56, 57, 104, 114, 115, 116, 122, 148, 159, 164, 176, 177], "deal": 0, "problem": [0, 42, 80, 103, 106, 115, 118, 119, 124, 174, 182], "set": [0, 1, 10, 32, 33, 35, 40, 42, 43, 47, 49, 50, 53, 56, 57, 65, 67, 80, 81, 82, 84, 85, 86, 87, 89, 103, 104, 110, 114, 115, 116, 119, 122, 124, 139, 151, 162, 166, 168, 173, 174, 175, 176, 178, 179, 180], "option": [0, 10, 31, 32, 34, 39, 43, 47, 76, 79, 82, 85, 89, 107, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 133, 148, 159, 164, 167, 176, 178], "g": [0, 1, 33, 35, 37, 38, 39, 40, 41, 44, 45, 50, 51, 56, 57, 58, 64, 65, 67, 71, 72, 80, 81, 99, 103, 104, 113, 116, 124, 159, 163, 173, 177], "behavior": [0, 10, 29, 67, 85, 89, 120, 124, 177], "target": [0, 29, 30, 31, 32, 33, 34, 39, 42, 43, 46, 47, 66, 67, 68, 69, 70, 71, 72, 73, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 142, 143, 145, 146, 147, 148, 149, 150, 153, 154, 156, 157, 158, 159, 160, 161, 168, 170, 174, 175, 178, 180], "provid": [0, 3, 5, 6, 10, 35, 40, 41, 42, 43, 47, 49, 50, 66, 67, 68, 69, 70, 71, 72, 73, 75, 79, 80, 81, 85, 89, 104, 107, 115, 122, 125, 135, 136, 139, 164, 166, 167, 168, 170, 173, 175, 176, 177, 180, 181, 182], "rais": [0, 7, 8, 9, 10, 23, 24, 26, 27, 31, 33, 35, 40, 42, 45, 56, 57, 67, 68, 69, 70, 71, 72, 73, 74, 80, 81, 85, 88, 89, 99, 104, 109, 111, 117, 144, 152, 155, 163, 168, 177, 178, 179], "catch": [0, 85, 152, 163], "treat": 0, "failur": [0, 81, 82, 83, 104], "statu": [0, 103], "all": [0, 3, 12, 14, 15, 28, 29, 30, 31, 32, 35, 40, 42, 46, 49, 50, 53, 63, 67, 68, 71, 72, 77, 79, 80, 81, 84, 85, 91, 102, 104, 116, 120, 122, 124, 133, 142, 144, 145, 146, 147, 148, 149, 150, 153, 155, 156, 157, 158, 159, 160, 161, 166, 168, 169, 171, 173, 178, 179, 181, 183], "trialprun": [0, 7, 33, 45, 67, 68, 69, 70, 71, 72, 73, 85, 104, 105, 109, 111, 144, 152, 155, 163, 168, 178, 179], "propag": [0, 45, 61, 63], "caller": [0, 177], "other": [0, 3, 16, 29, 30, 33, 46, 47, 49, 81, 82, 85, 111, 115, 119, 120, 133, 136, 173, 177, 178, 181, 182], "word": 0, "abort": 0, "It": [0, 1, 8, 9, 12, 20, 27, 28, 29, 32, 35, 42, 56, 57, 58, 80, 81, 85, 88, 91, 103, 115, 119, 120, 124, 148, 151, 159, 162, 169, 176, 178, 180], "might": [0, 85, 183, 185], "desir": [0, 10, 89, 180], "continu": [0, 16, 32, 33, 42, 84, 85, 104, 126, 127, 128, 129, 130, 131, 132, 151, 162, 166, 168], "remain": [0, 112, 124, 133], "so": [0, 42, 43, 45, 47, 48, 59, 67, 74, 75, 80, 92, 100, 113, 115, 117, 122, 125, 139, 159, 166, 167, 174, 176, 179, 180, 181, 182], "type": [0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 28, 29, 30, 31, 32, 33, 34, 35, 40, 42, 43, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 88, 89, 90, 91, 92, 96, 99, 101, 102, 103, 104, 105, 106, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 177], "caught": 0, "insid": [0, 50, 72, 85, 106, 166, 175, 177], "find": [0, 1, 4, 35, 56, 104, 132, 166, 180], "w": [0, 50, 61, 63], "2018": 0, "12": [0, 166, 168, 173, 178, 180], "16": [0, 65, 144, 155, 168, 178, 180], "38": [0, 174, 178, 180], "36": [0, 180], "889": 0, "trialstat": [0, 32, 34, 35, 43, 47, 80, 81, 82, 84, 85, 103, 106, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 166, 173, 176, 178, 179, 181], "becaus": [0, 33, 43, 47, 67, 80, 169, 177, 182], "valueerror": [0, 35, 56, 57, 74, 80, 81, 99, 117, 152, 163], "A": [0, 3, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 43, 44, 45, 46, 47, 49, 51, 53, 56, 57, 59, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 79, 80, 81, 82, 85, 87, 89, 92, 96, 97, 98, 99, 100, 101, 102, 103, 104, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 137, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 168, 169, 173, 175, 177, 179, 180], "sampl": [0, 1, 32, 34, 35, 42, 43, 47, 56, 57, 80, 81, 85, 97, 103, 104, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 129, 133, 167, 177, 180, 181], "check": [0, 20, 35, 39, 59, 61, 68, 70, 71, 73, 80, 81, 83, 92, 103, 104, 109, 133, 166, 169, 170, 174, 178], "trials_datafram": [0, 42, 85, 173], "system_attr": [0, 49, 85, 87, 103, 104, 106, 166, 173], "complet": [0, 29, 30, 31, 32, 35, 46, 53, 67, 68, 71, 72, 74, 75, 80, 81, 84, 85, 97, 103, 105, 106, 107, 117, 124, 125, 133, 143, 147, 148, 154, 158, 159, 166, 168, 173, 176, 177, 178, 180], "1269": 0, "float": [0, 12, 13, 14, 15, 16, 17, 18, 19, 29, 30, 31, 32, 34, 35, 42, 43, 46, 47, 49, 56, 57, 70, 71, 73, 80, 81, 85, 96, 97, 98, 101, 102, 103, 104, 106, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 128, 129, 130, 131, 132, 133, 142, 143, 145, 146, 147, 148, 149, 150, 153, 154, 156, 157, 158, 159, 160, 161, 167, 178], "shown": [0, 8, 27, 62, 148, 151, 159, 162, 176], "59": [0, 65, 180], "000": [0, 169, 172], "sinc": [0, 40, 48, 53, 56, 57, 103, 114, 116, 119], "call": [0, 20, 29, 30, 32, 33, 34, 35, 39, 42, 43, 45, 46, 47, 49, 50, 61, 66, 67, 68, 69, 70, 71, 72, 73, 76, 78, 81, 82, 85, 101, 104, 109, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 166, 168, 173, 177, 178, 179, 181], "api": [0, 1, 40, 50, 51, 58, 80, 106, 109, 122, 166, 177, 180, 181], "suggest_int": [0, 1, 6, 15, 16, 17, 43, 99, 100, 104, 114, 115, 116, 121, 122, 124, 147, 151, 158, 162, 167, 170, 174, 180], "rang": [0, 8, 12, 13, 14, 15, 16, 17, 18, 19, 27, 29, 43, 67, 68, 69, 70, 71, 72, 74, 75, 85, 104, 114, 115, 117, 118, 125, 144, 155, 166, 167, 168, 174, 178, 181], "individu": [0, 70, 119, 120, 126, 127, 128, 129, 130, 131, 132, 170], "discuss": [0, 1], "about": [0, 4, 67, 72, 99, 104, 115, 118, 119, 120, 122, 124, 126, 129, 131, 176, 178], "tpe": [0, 32, 34, 43, 47, 85, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 168], "http": [0, 2, 4, 13, 16, 17, 18, 19, 29, 31, 32, 33, 34, 35, 37, 40, 42, 43, 46, 47, 48, 49, 50, 52, 53, 54, 55, 70, 79, 80, 82, 83, 85, 87, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 132, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 159, 160, 162, 163, 169, 174], "github": [0, 1, 2, 13, 16, 17, 18, 19, 29, 31, 32, 33, 34, 35, 37, 40, 42, 43, 46, 47, 48, 49, 50, 52, 53, 54, 55, 70, 79, 80, 82, 83, 85, 87, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 132, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 159, 160, 162, 163, 170], "com": [0, 2, 4, 13, 16, 17, 18, 19, 31, 32, 33, 34, 35, 37, 40, 42, 43, 46, 47, 48, 49, 50, 52, 53, 54, 55, 70, 79, 80, 82, 83, 85, 87, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 132, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 159, 160, 162, 163, 174], "issu": [0, 1, 32, 33, 34, 43, 47, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 169], "822": 0, "cuda": [0, 32, 174], "acceler": [0, 1, 29], "script": [0, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "main": [0, 181], "easiest": 0, "cuda_visible_devic": 0, "environ": [0, 45, 56, 57, 76, 78, 80, 81, 82, 140, 141, 163, 173], "On": [0, 47, 76, 78, 115, 124], "termin": [0, 1, 42, 85, 108, 124, 151, 162, 168, 169, 178], "export": [0, 85], "anoth": [0, 9, 70, 85, 88, 124, 133, 169, 182], "program": 0, "guid": [0, 1, 107, 164], "mai": [0, 3, 16, 28, 31, 32, 33, 34, 35, 40, 42, 43, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 67, 70, 72, 79, 80, 82, 83, 84, 85, 91, 94, 96, 97, 98, 99, 100, 101, 104, 110, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 128, 129, 130, 132, 133, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 159, 160, 162, 163, 169, 178, 182], "prefer": [0, 119], "ones": 0, "case": [0, 5, 10, 14, 15, 32, 34, 40, 42, 43, 47, 50, 67, 80, 81, 85, 89, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 140, 141, 154, 164, 180, 181, 182], "fixedtri": 0, "base": [0, 1, 7, 25, 29, 30, 31, 32, 40, 42, 46, 50, 52, 53, 54, 55, 66, 67, 68, 69, 70, 71, 72, 73, 85, 93, 94, 95, 96, 97, 99, 103, 104, 107, 112, 113, 119, 123, 124, 127, 133, 142, 147, 149, 158, 168, 169, 177], "given": [0, 21, 29, 30, 31, 32, 34, 35, 42, 43, 46, 47, 50, 56, 57, 67, 68, 71, 73, 75, 80, 81, 85, 102, 104, 107, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 148, 159, 169], "dictionari": [0, 31, 32, 34, 35, 42, 43, 45, 47, 56, 57, 74, 75, 80, 81, 85, 87, 102, 103, 104, 106, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 166, 178], "input": [0, 32, 42, 107, 174], "arbitrari": [0, 119], "y": [0, 1, 8, 27, 42, 43, 67, 68, 69, 70, 71, 72, 73, 85, 99, 100, 102, 104, 106, 115, 116, 120, 121, 122, 124, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 175, 177, 181, 182], "5": [0, 33, 42, 57, 64, 68, 71, 73, 85, 97, 99, 100, 104, 106, 114, 116, 119, 120, 123, 126, 130, 131, 143, 144, 147, 148, 151, 154, 155, 158, 159, 160, 162, 166, 167, 168, 170, 173, 174, 177, 178, 179, 180], "4": [0, 32, 34, 37, 40, 43, 47, 52, 53, 55, 67, 72, 85, 104, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 140, 143, 144, 147, 148, 151, 152, 154, 155, 158, 159, 162, 163, 166, 167, 168, 169, 170, 173, 174, 178, 179, 180], "write": [0, 79, 80, 136, 169, 176], "unit": 0, "pytest": 0, "test_object": 0, "assert": [0, 28, 59, 61, 63, 69, 85, 91, 92, 102, 103, 104, 106], "footprint": 0, "increas": [0, 28, 47, 85, 91, 114, 115, 116, 167], "try": [0, 67, 85, 114, 173, 180, 181], "period": [0, 81, 85, 168], "garbag": [0, 81, 85], "collector": [0, 81], "gc_after_tri": [0, 85], "gc": [0, 85], "collect": [0, 4, 29, 30, 31, 46, 67, 74, 75, 85, 117, 125, 133], "callback": [0, 33, 37, 38, 39, 40, 41, 42, 45, 48, 50, 51, 56, 57, 81, 82, 83, 84, 85, 100, 109, 138, 168, 170, 180, 183, 184, 185], "less": [0, 13, 14, 15, 16, 17, 18, 19, 52, 68, 71, 73, 103, 104, 119], "ident": [0, 53, 82], "trade": [0, 42, 67], "off": [0, 42, 67, 81, 104, 168], "could": [0, 112, 133, 178], "neglig": [0, 3], "fast": [0, 29, 120], "otherwis": [0, 3, 10, 12, 13, 14, 15, 16, 17, 18, 19, 32, 33, 42, 56, 57, 72, 79, 81, 85, 89, 104, 122, 140, 141, 178], "therefor": [0, 45, 81, 103, 114, 116], "fals": [0, 10, 12, 13, 14, 15, 16, 17, 18, 19, 33, 35, 40, 42, 47, 50, 56, 57, 69, 74, 75, 79, 80, 81, 82, 85, 89, 103, 104, 115, 117, 122, 124, 125, 140, 141, 145, 151, 156, 162, 166, 173, 174, 176, 177, 178, 181, 182], "similar": [0, 115, 124, 129, 182], "fact": [0, 97], "includ": [0, 1, 3, 13, 14, 15, 16, 17, 18, 19, 28, 32, 34, 35, 42, 43, 47, 51, 53, 74, 75, 80, 81, 82, 85, 91, 104, 109, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 133, 143, 148, 154, 159, 167, 178], "chainermnstudi": 0, "current": [0, 8, 13, 16, 17, 18, 19, 27, 33, 34, 35, 37, 38, 39, 41, 44, 45, 49, 51, 56, 57, 64, 67, 68, 71, 80, 81, 85, 87, 97, 102, 103, 104, 109, 111, 115, 117, 118, 125, 148, 159, 177, 182], "nor": [0, 3, 32, 103, 148, 159], "here": [0, 120, 148, 159, 179, 180], "replac": [0, 13, 14, 15, 17, 58, 85, 143, 170], "pass": [0, 10, 12, 13, 14, 15, 16, 17, 18, 19, 32, 34, 40, 42, 43, 47, 50, 56, 57, 58, 74, 81, 85, 89, 103, 104, 106, 107, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 139, 143, 145, 154, 156, 164, 166, 173, 177, 180, 181, 182], "turn": [0, 81, 168], "logging_callback": 0, "frozen_tri": 0, "previous_best_valu": 0, "user_attr": [0, 40, 85, 87, 103, 104, 106, 166, 173, 175], "get": [0, 9, 28, 29, 30, 31, 42, 46, 64, 81, 82, 85, 88, 91, 104, 139, 147, 158, 166, 169, 173, 178, 180], "none": [0, 9, 10, 11, 12, 14, 15, 20, 29, 30, 31, 32, 33, 34, 35, 40, 42, 43, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 65, 70, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 92, 97, 99, 100, 101, 102, 103, 104, 106, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 128, 129, 130, 132, 142, 143, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 166, 173, 177, 178, 179], "best_valu": [0, 85, 103, 166, 173, 176], "set_user_attr": [0, 42, 85, 87, 103, 104, 175], "incorrect": 0, "n_job": [0, 32, 34, 42, 43, 47, 50, 85, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 152, 163], "due": [0, 45, 79, 82, 104, 105, 115, 178], "read": [0, 35, 61, 77, 79, 80, 81, 136], "prone": 0, "race": [0, 76, 78], "n": [0, 39, 47, 61, 63, 67, 115, 122, 127, 128, 132, 133, 176], "p": [0, 133, 174], "satisfi": [0, 124], "le": [0, 104], "k": [0, 13, 14, 15, 17, 104, 128, 168], "ani": [0, 1, 3, 13, 14, 18, 19, 32, 33, 34, 35, 40, 42, 43, 45, 47, 49, 50, 56, 57, 58, 67, 72, 77, 79, 80, 81, 82, 85, 87, 102, 103, 104, 105, 106, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 132, 148, 159, 175], "interpol": 0, "loss": [0, 3, 33, 37, 38, 44, 57, 58, 166, 178], "These": 0, "flat": 0, "numpi": [0, 8, 27, 42, 47, 67, 68, 69, 70, 71, 72, 104, 119, 126, 127, 128, 129, 130, 131, 132, 170, 177, 178, 180, 181], "np": [0, 8, 27, 67, 68, 69, 70, 71, 72, 104, 119, 170, 177, 178, 180, 181], "matplotlib": [0, 164, 170], "pyplot": [0, 143, 144, 145], "plt": [0, 145], "append": [0, 77, 79, 118, 167, 174, 181], "x_": 0, "sum": [0, 31, 174], "p_": 0, "randomsampl": [0, 29, 43, 47, 67, 115, 122, 133, 143, 147, 154, 158, 168, 177], "1000": [0, 29, 42, 56, 57, 133], "ax": [0, 54, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], "subplot": 0, "figsiz": 0, "20": [0, 8, 27, 43, 64, 67, 68, 69, 70, 71, 72, 81, 97, 99, 115, 128, 132, 143, 151, 154, 162, 168, 176, 178, 180, 181], "j": [0, 126, 132], "scatter": [0, 149, 160], "marker": 0, "set_xlim": 0, "set_ylim": 0, "set_xlabel": 0, "set_ylabel": 0, "savefig": [0, 145], "sampled_p": 0, "png": 0, "method": [0, 1, 12, 13, 14, 15, 16, 17, 18, 19, 20, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 42, 43, 45, 46, 47, 49, 50, 56, 57, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 85, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 166, 168, 173, 175, 177, 178, 181], "justifi": 0, "appli": [0, 85, 104, 120, 122], "transform": [0, 32, 42, 126, 127, 128, 129, 130, 131, 132, 174], "u": [0, 4, 140, 141, 166, 169, 176, 181], "uniform": [0, 13, 16, 17, 18, 19, 127, 131, 154, 177], "uni": 0, "interv": [0, 39, 68, 71, 73, 81, 126], "exponenti": [0, 167], "exp": [0, 143, 154, 177], "scale": [0, 1, 14, 15, 32, 34, 43, 47, 96, 104, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 169], "furthermor": [0, 115], "independ": [0, 32, 43, 47, 113, 115, 122, 123, 124, 177], "normal": [0, 31, 53, 115, 130], "sum_i": 0, "vector": [0, 181], "dir": [0, 174], "alpha": [0, 8, 27, 67, 68, 69, 70, 71, 72, 126, 168, 178, 181], "verifi": 0, "element": [0, 12, 35, 80, 81], "jacobian": 0, "nsgaiisampl": [0, 10, 89, 119, 126, 127, 128, 129, 130, 131, 132, 133, 134, 148, 159, 168], "botorchsampl": [0, 52, 53, 55, 133], "benchmark": [0, 56, 67, 115, 168], "binh": 0, "korn": 0, "one": [0, 9, 10, 12, 32, 33, 35, 40, 50, 53, 67, 72, 74, 79, 80, 81, 82, 85, 88, 89, 103, 104, 110, 116, 117, 120, 122, 124, 133, 136, 169, 173, 177], "ha": [0, 1, 32, 35, 47, 56, 57, 59, 63, 64, 65, 67, 68, 71, 73, 80, 81, 83, 86, 92, 102, 103, 105, 120, 122, 124, 133, 166, 177, 178, 180, 181], "c_0": 0, "25": [0, 71, 168, 170, 173, 174, 180], "c_1": 0, "8": [0, 33, 70, 82, 104, 122, 124, 148, 151, 152, 162, 163, 166, 168, 169, 180], "7": [0, 2, 33, 104, 151, 162, 166, 168, 170, 174, 176, 178, 179, 180, 181, 182], "solut": [0, 42, 97, 128, 132, 136], "15": [0, 168, 173, 180], "30": [0, 68, 71, 85, 142, 149, 151, 153, 160, 162, 166, 173, 174, 178, 180, 181], "consid": [0, 31, 32, 47, 67, 72, 75, 96, 97, 99, 113, 115, 116, 120, 124, 125, 143, 148, 151, 154, 159, 162, 169, 177, 178, 181, 182], "feasibl": [0, 32, 120, 124, 148, 159], "than": [0, 13, 14, 15, 16, 17, 18, 19, 29, 32, 35, 45, 47, 53, 54, 55, 67, 68, 71, 73, 77, 79, 80, 81, 85, 103, 104, 106, 119, 120, 122, 124, 136, 138, 148, 159, 178, 181], "equal": [0, 13, 14, 15, 16, 17, 18, 19, 32, 45, 77, 79, 104, 120, 124, 131, 148, 159], "zero": [0, 68, 71, 103, 104], "region": [0, 132], "basic": [0, 87, 111, 139, 168], "intersect": [0, 74, 75, 117, 124, 125], "circl": 0, "center": 0, "complement": 0, "c0": 0, "c1": 0, "store": [0, 28, 32, 34, 35, 43, 47, 48, 50, 56, 57, 80, 81, 91, 103, 104, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 173, 176, 181], "user": [0, 1, 6, 7, 9, 16, 20, 29, 30, 33, 35, 40, 42, 46, 50, 56, 57, 66, 67, 68, 69, 70, 71, 72, 73, 79, 80, 81, 85, 88, 98, 102, 103, 104, 106, 107, 110, 112, 133, 136, 137, 139, 176, 183, 184, 185], "attribut": [0, 9, 13, 29, 30, 35, 40, 42, 46, 49, 56, 57, 80, 81, 85, 86, 87, 88, 102, 103, 104, 105, 106, 126, 127, 128, 129, 130, 131, 132, 139, 176, 183, 184, 185], "restor": [0, 173], "after": [0, 8, 27, 32, 33, 34, 39, 40, 43, 45, 47, 61, 81, 85, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 168, 176, 178, 181, 182], "v0": [0, 42, 85, 118, 124, 148, 159], "v1": [0, 40, 45, 85, 148, 159], "constraints_func": [0, 32, 119, 120, 124, 148, 159], "direct": [0, 3, 8, 9, 10, 27, 35, 42, 67, 68, 69, 70, 71, 72, 80, 81, 85, 86, 87, 88, 89, 96, 99, 100, 104, 118, 137, 142, 146, 148, 152, 153, 157, 159, 163, 170, 174, 178, 180, 181, 182], "minim": [0, 1, 10, 35, 42, 67, 68, 72, 80, 81, 85, 86, 89, 112, 118, 142, 146, 148, 152, 153, 157, 159, 163, 166, 174, 175, 176], "32": [0, 1, 99, 100, 167, 178, 180], "timeout": [0, 42, 67, 81, 85, 170, 174, 180], "600": [0, 170, 180], "len": [0, 28, 43, 59, 85, 91, 92, 120, 129, 130, 166, 174, 178], "pareto": [0, 85, 148, 159, 174, 176, 182], "front": [0, 85, 119, 148, 159, 174, 176, 182], "sort": [0, 35, 74, 75, 80, 81, 117, 119, 120, 125, 168, 178], "t": [0, 29, 30, 31, 33, 45, 46, 70, 85, 113, 120, 124, 140, 141, 142, 143, 146, 147, 153, 154, 157, 158, 159, 166, 170, 173, 174, 176, 177, 178], "interest": [0, 110, 166, 177], "code": [0, 1, 3, 104, 111, 116, 126, 129, 130, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183], "kind": [0, 20], "constrain": [0, 55, 115, 120, 133], "soft": 0, "hard": 0, "penal": [0, 124], "unsatisfi": 0, "hand": [0, 47, 115, 176], "must": [0, 3, 10, 12, 13, 14, 15, 16, 17, 18, 19, 31, 32, 33, 40, 42, 50, 51, 56, 57, 71, 73, 74, 76, 78, 81, 82, 84, 85, 89, 103, 104, 106, 107, 114, 116, 117, 120, 122, 124, 148, 159], "adopt": [0, 1, 168], "NOT": [0, 3, 169], "built": [0, 32, 43, 47, 115, 122, 127, 177, 178], "variat": 0, "achiev": [0, 115, 177], "faster": [0, 32, 47, 67, 75, 125, 174, 181], "gil": [0, 42, 85], "while": [0, 42, 57, 84, 99, 132], "limit": [0, 3, 42, 72, 84, 85, 118, 124, 168], "situat": [0, 45, 182], "wait": [0, 82, 105], "request": [0, 1], "etc": [0, 50, 170, 181], "inform": [0, 4, 40, 45, 48, 50, 99, 115, 118, 119, 120, 122, 124, 126, 129, 131], "apirefer": 0, "journalfilestorag": [0, 80], "client": [0, 35, 80], "postgresql": [0, 169, 173], "mysql": [0, 81, 169, 173], "tutorialeasyparallel": 0, "instal": [0, 1, 140, 141, 164, 170], "never": [0, 69, 72, 81], "reason": [0, 32, 80, 104], "concurr": [0, 116], "enqueu": [0, 14, 15, 85], "enqueue_tri": [0, 85, 116, 180], "rdbstorag": [0, 10, 82, 83, 89, 124], "select": [0, 42, 126, 127, 128, 129, 130, 131, 132, 166, 170], "FOR": [0, 3], "syntax": [0, 1, 167, 181], "unsupport": [0, 174], "As": [0, 47, 67, 118, 122, 166, 168, 175, 177, 179], "describ": [0, 104, 113, 133, 173, 176, 177, 178], "sqlalchemi": [0, 10, 81, 89, 173], "document": [0, 3, 9, 10, 11, 28, 40, 50, 54, 59, 85, 88, 89, 90, 91, 92, 109, 120, 133, 136, 173, 177, 178], "pysqlit": 0, "driver": 0, "high": [0, 1, 6, 13, 14, 15, 16, 17, 18, 19, 29, 43, 49, 97, 102, 103, 104, 115, 124, 143, 146, 154, 157, 166, 170, 173, 176, 177, 178], "lock": [0, 76, 77, 78], "exclus": [0, 76, 77, 78, 168], "connect": [0, 35, 80, 81], "realiti": 0, "time": [0, 10, 14, 15, 17, 42, 49, 56, 57, 67, 68, 71, 72, 73, 75, 80, 81, 82, 83, 85, 89, 103, 104, 106, 113, 115, 125, 133, 148, 151, 152, 159, 162, 163, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "releas": [0, 13, 16, 17, 18, 19, 31, 32, 33, 34, 35, 37, 40, 42, 43, 46, 47, 48, 49, 50, 52, 53, 54, 55, 70, 76, 78, 79, 80, 82, 83, 85, 87, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 132, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 159, 160, 162, 163], "engine_kwarg": [0, 81], "connect_arg": [0, 81], "though": [0, 168], "nf": [0, 56, 57, 76, 78, 169], "section": [0, 67, 173, 177, 180, 181], "org": [0, 42, 54, 169], "scenario": [0, 85], "journalstorag": 0, "journal": [0, 77, 79, 80, 122], "medium": 0, "blog": [0, 56], "post": [0, 32, 34, 43, 47, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124], "heartbeat": [0, 81, 83], "mechan": [0, 66, 67, 68, 69, 70, 71, 72, 73, 81, 99, 100, 103, 104, 138, 168], "experiment": [0, 31, 32, 33, 34, 35, 40, 42, 43, 46, 47, 48, 49, 50, 52, 53, 54, 55, 70, 79, 80, 82, 83, 85, 94, 96, 97, 98, 99, 100, 101, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 128, 129, 130, 132, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 159, 160, 162, 163], "futur": [0, 13, 16, 17, 18, 19, 34, 37, 49, 56, 57, 85, 87, 102, 103, 104, 117, 118, 120, 124, 125, 148, 151, 159, 162], "typic": [0, 72], "job": [0, 42, 85], "schedul": [0, 13, 16, 17, 18, 19, 34, 35, 37, 49, 56, 57, 85, 87, 102, 103, 104, 117, 118, 125, 148, 159], "cluster": [0, 35, 79, 81], "left": [0, 40, 50, 99], "remov": [0, 13, 16, 17, 18, 19, 34, 37, 49, 56, 57, 76, 78, 81, 85, 87, 102, 103, 104, 117, 118, 125, 148, 159], "manual": [0, 33, 45, 67, 72, 85, 122, 169, 183, 184, 185], "wa": [0, 8, 27, 42, 48, 122, 176, 180], "consum": [0, 67], "comput": [0, 30, 32, 42, 46, 96, 99, 115, 120, 124, 130, 148, 151, 159, 162, 168], "record": [0, 20, 80, 81, 124, 168, 173], "everi": [0, 39, 80, 81, 179], "60": [0, 82, 180], "120": [0, 82], "last": [0, 67, 72, 81, 82, 166, 178], "url": [0, 9, 10, 11, 28, 35, 59, 79, 81, 82, 88, 89, 90, 91, 92, 173], "heartbeat_interv": [0, 81, 82, 124], "grace_period": [0, 81, 82], "suppos": [0, 8, 20, 27, 66, 67, 68, 69, 70, 71, 72, 73, 74, 80, 81, 117, 175, 182], "ask": [0, 81, 85, 99, 176, 183, 184, 185], "tell": [0, 8, 27, 81, 85, 99, 176, 183, 184, 185], "explicitli": [0, 81, 85, 176, 181], "retri": [0, 81, 82], "retryfailedtrialcallback": [0, 81], "invok": [0, 1, 42, 49, 56, 57, 81, 85, 116, 176, 177], "begin": [0, 32, 34, 43, 47, 80, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 177, 178], "mean": [0, 9, 30, 31, 32, 42, 43, 46, 79, 88, 99, 100, 115, 120, 124, 133, 148, 151, 159, 162, 166, 175, 178], "new": [0, 1, 10, 32, 34, 35, 40, 42, 43, 47, 50, 61, 63, 64, 80, 81, 85, 89, 106, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 168, 169, 176, 177, 179, 180, 185], "start": [0, 56, 57, 63, 68, 71, 87, 103, 104, 109, 115, 166, 169, 176, 179], "failed_trial_callback": [0, 81, 82], "max_retri": [0, 82], "i": [1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "automat": [1, 10, 32, 35, 43, 47, 67, 81, 85, 89, 99, 104, 116, 118, 138, 168, 173], "softwar": [1, 3], "particularli": [1, 81, 85], "design": [1, 122, 154], "machin": [1, 109, 122, 166, 168], "learn": [1, 33, 37, 38, 42, 51, 104, 115, 122, 129, 164, 166, 168, 170, 174, 180], "imper": 1, "defin": [1, 6, 7, 16, 33, 35, 80, 81, 85, 97, 102, 104, 112, 114, 133, 134, 136, 139, 170, 174, 175, 180, 182, 183, 184, 185], "run": [1, 32, 35, 40, 42, 43, 45, 50, 56, 57, 67, 68, 71, 72, 80, 81, 82, 83, 84, 85, 105, 116, 124, 166, 167, 168, 169, 170, 173, 175, 176, 177, 178, 179, 180, 182], "style": [1, 143, 144, 176], "thank": [1, 177], "our": [1, 4, 166], "written": [1, 3, 49, 133, 166, 168], "enjoi": 1, "modular": 1, "can": [1, 2, 4, 10, 29, 30, 31, 35, 40, 42, 46, 48, 50, 56, 57, 58, 67, 68, 71, 79, 80, 81, 82, 85, 89, 98, 100, 102, 103, 104, 106, 113, 115, 118, 121, 124, 139, 143, 145, 151, 154, 156, 162, 163, 166, 167, 168, 169, 170, 173, 175, 176, 177, 178, 179, 181, 182], "dynam": [1, 74, 75, 117, 125], "construct": [1, 102, 104, 124, 126, 127, 128, 129, 130, 131, 132, 178, 180], "search": [1, 29, 32, 34, 42, 43, 47, 53, 67, 74, 75, 104, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 143, 154, 166, 168, 171, 172, 176, 177, 185], "space": [1, 29, 32, 34, 43, 47, 53, 67, 74, 75, 104, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 143, 154, 168, 171, 172, 176, 177, 185], "modern": 1, "function": [1, 5, 6, 20, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 54, 56, 57, 58, 61, 66, 67, 68, 69, 70, 71, 72, 73, 75, 80, 81, 82, 85, 86, 96, 97, 101, 102, 103, 104, 106, 107, 109, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 128, 132, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 165, 173, 174, 175, 177, 178, 180, 181, 182], "lightweight": [1, 171, 172, 173, 185], "versatil": [1, 171, 172, 173, 185], "platform": [1, 171, 172, 173, 185], "agnost": [1, 171, 172, 173, 185], "architectur": [1, 124, 171, 172, 173, 185], "handl": [1, 10, 45, 89, 119, 120, 133, 168], "wide": [1, 29], "varieti": 1, "task": [1, 42, 85, 115, 168, 173, 177], "simpl": [1, 42, 43, 57, 58, 115, 122, 166, 173, 178, 181], "few": [1, 29, 166], "requir": [1, 29, 30, 42, 46, 59, 67, 72, 80, 92, 106, 127, 160, 164, 181], "us": [1, 3, 4, 5, 6, 9, 10, 13, 16, 17, 18, 19, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 56, 57, 58, 59, 61, 67, 68, 71, 72, 74, 75, 76, 78, 79, 80, 81, 82, 85, 88, 89, 92, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 139, 142, 143, 145, 146, 147, 148, 149, 150, 153, 154, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 169, 170, 173, 174, 176, 177, 178, 179, 180, 181, 183, 184, 185], "familiar": [1, 167], "loop": [1, 85, 167, 185], "effici": [1, 29, 112, 124, 133, 171, 172, 185], "algorithm": [1, 10, 29, 31, 32, 34, 43, 47, 56, 59, 67, 72, 89, 92, 99, 103, 104, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 130, 131, 132, 133, 147, 158, 171, 172, 177, 185], "art": [1, 168], "unpromis": [1, 10, 33, 37, 38, 39, 41, 44, 45, 51, 59, 89, 92, 168], "trial": [1, 6, 7, 8, 9, 10, 11, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 56, 57, 59, 60, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 96, 97, 99, 100, 101, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 133, 136, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 173, 174, 176, 177, 178, 180, 181, 183, 184, 185], "parallel": [1, 32, 34, 35, 42, 43, 45, 47, 49, 50, 56, 57, 58, 67, 81, 85, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 133, 168, 171, 172, 173, 185], "studi": [1, 8, 9, 10, 11, 24, 27, 28, 29, 30, 31, 32, 34, 35, 40, 42, 43, 45, 46, 47, 50, 56, 57, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 96, 99, 100, 102, 103, 104, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 168, 170, 174, 176, 177, 178, 180, 181, 182, 183, 184, 185], "ten": 1, "hundr": [1, 124], "worker": [1, 49, 116, 122, 124], "littl": 1, "quick": [1, 164, 171, 172, 185], "visual": [1, 85, 108, 171, 172, 174, 185], "inspect": 1, "histori": [1, 28, 33, 85, 91, 136, 145, 156, 169, 170], "from": [1, 2, 3, 6, 7, 8, 9, 27, 31, 32, 35, 40, 42, 45, 50, 61, 67, 68, 69, 70, 71, 72, 73, 79, 80, 81, 82, 84, 85, 88, 96, 99, 100, 103, 104, 106, 107, 109, 111, 112, 115, 118, 120, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 142, 149, 151, 162, 166, 168, 169, 170, 174, 177, 178, 180, 181, 182], "plot": [1, 31, 50, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "term": [1, 4, 85, 133], "object": [1, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 99, 100, 101, 102, 103, 104, 106, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185], "singl": [1, 10, 12, 13, 14, 15, 16, 17, 18, 19, 29, 30, 31, 35, 40, 46, 50, 53, 59, 80, 81, 85, 87, 89, 92, 113, 115, 124, 128, 129, 132, 133, 142, 143, 145, 146, 147, 149, 150, 153, 154, 156, 157, 158, 160, 161, 166, 175, 181], "goal": [1, 166], "out": [1, 3, 4, 85, 119, 170, 180], "valu": [1, 6, 10, 12, 13, 14, 15, 16, 17, 18, 19, 29, 30, 31, 32, 33, 34, 35, 39, 40, 42, 43, 46, 47, 49, 50, 52, 53, 54, 55, 59, 60, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 79, 80, 81, 82, 84, 85, 86, 87, 89, 92, 97, 98, 99, 102, 103, 104, 105, 106, 107, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 132, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "classifi": [1, 42, 148, 159, 167, 178, 181], "svm_c": 1, "through": [1, 74, 115, 117, 139, 170, 178, 180], "multipl": [1, 33, 35, 50, 59, 67, 72, 74, 75, 79, 85, 92, 104, 113, 117, 122, 124, 125, 132, 143, 145, 154, 156], "autom": [1, 168], "suggest": [1, 6, 10, 32, 34, 43, 47, 50, 53, 59, 74, 75, 85, 89, 92, 102, 103, 104, 106, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 139, 166, 168, 169, 176, 177, 181], "gener": [1, 10, 12, 13, 14, 15, 16, 17, 18, 19, 32, 34, 35, 42, 43, 47, 50, 56, 57, 80, 81, 85, 89, 104, 106, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 128, 130, 132, 143, 144, 164, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185], "regressor_nam": 1, "suggest_categor": [1, 12, 99, 100, 102, 104, 114, 124, 142, 145, 146, 149, 150, 153, 156, 157, 160, 161, 167, 178, 181], "svr": 1, "randomforest": [1, 167], "svr_c": 1, "log": [1, 14, 15, 16, 18, 35, 40, 42, 48, 49, 50, 56, 57, 58, 77, 79, 80, 85, 99, 102, 103, 104, 108, 133, 144, 151, 155, 162, 166, 167, 168, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "regressor_obj": 1, "els": [1, 85, 124, 167, 174, 177, 179, 181], "rf_max_depth": [1, 167], "2": [1, 9, 10, 11, 28, 32, 33, 37, 38, 40, 43, 50, 53, 59, 65, 73, 76, 81, 84, 85, 88, 89, 90, 91, 92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 111, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 173, 174, 176, 177, 178, 179, 180, 181], "ensembl": [1, 30, 46, 99, 100, 104, 167], "randomforestregressor": 1, "max_depth": [1, 29, 30, 46, 99, 100, 167], "x": [1, 8, 9, 10, 11, 27, 28, 40, 42, 43, 50, 59, 67, 68, 69, 70, 71, 72, 81, 84, 85, 88, 89, 90, 91, 92, 99, 100, 102, 103, 104, 106, 114, 115, 116, 118, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 169, 173, 175, 176, 177, 179, 181, 182], "fetch_california_h": 1, "return_x_i": [1, 8, 27, 42, 67, 68, 69, 70, 71, 72, 99, 100, 104, 151, 162, 170, 180, 181], "x_val": 1, "y_val": 1, "model_select": [1, 8, 27, 42, 67, 68, 69, 70, 71, 72, 99, 100, 104, 151, 162, 168, 170, 175, 178, 180, 181, 182], "train_test_split": [1, 8, 27, 67, 68, 69, 70, 71, 72, 104, 168, 170, 178, 180, 181, 182], "random_st": [1, 42, 104, 168, 178, 182], "y_pred": [1, 42], "error": [1, 8, 24, 25, 26, 27, 31, 35, 42, 51, 56, 57, 64, 65, 79, 80, 81, 85, 93, 96, 97, 98, 99, 100, 101, 104, 105, 110, 133, 138, 145, 151, 156, 162, 168, 175, 178], "metric": [1, 33, 37, 38, 39, 40, 41, 44, 45, 48, 50, 51, 57, 73, 85, 170, 180, 182], "mean_squared_error": 1, "return": [1, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 28, 29, 30, 31, 32, 33, 34, 35, 40, 42, 43, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "link": [1, 78], "question": 1, "bug": 1, "report": [1, 8, 27, 33, 35, 39, 66, 67, 68, 69, 70, 71, 72, 73, 80, 81, 82, 85, 99, 101, 103, 104, 109, 112, 124, 129, 144, 155, 168, 178, 181], "ar": [1, 3, 4, 9, 10, 12, 20, 29, 30, 31, 32, 34, 35, 39, 40, 42, 43, 45, 46, 47, 49, 50, 53, 56, 57, 59, 60, 61, 64, 65, 67, 68, 71, 74, 75, 79, 80, 81, 85, 88, 89, 92, 101, 103, 104, 106, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 130, 133, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 168, 170, 174, 175, 176, 177, 178, 180, 181, 185], "welcom": 1, "when": [1, 10, 14, 15, 23, 24, 26, 29, 32, 33, 34, 35, 40, 43, 45, 47, 49, 50, 51, 52, 55, 56, 57, 61, 67, 70, 71, 72, 76, 78, 79, 80, 81, 82, 84, 85, 89, 97, 98, 99, 104, 106, 107, 111, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 138, 142, 143, 146, 148, 153, 154, 157, 159, 166, 167, 169, 173, 177, 178, 181], "send": 1, "pull": 1, "mit": 1, "scipi": [1, 122], "fdlibm": 1, "project": [1, 3, 50], "third": [1, 109], "parti": [1, 109], "takuya": 1, "akiba": [1, 85, 175], "shotaro": 1, "sano": [1, 85, 175], "toshihiko": 1, "yanas": 1, "takeru": 1, "ohta": 1, "masanori": 1, "koyama": 1, "2019": 1, "next": [1, 32, 53, 72, 85, 177], "kdd": 1, "arxiv": [1, 115], "tutori": [1, 5, 10, 42, 54, 81, 85, 89, 104, 112, 115, 133, 159, 164, 170, 174, 179, 181, 182], "recip": [1, 85, 104], "cli": [1, 23, 108, 176], "distribut": [1, 3, 32, 34, 35, 42, 43, 45, 47, 49, 56, 57, 74, 75, 80, 81, 85, 103, 104, 106, 108, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 143, 154, 163, 166, 169, 170, 173, 176, 177, 180, 181], "except": [1, 8, 35, 42, 57, 80, 81, 85, 108, 111, 133, 179], "integr": [1, 108, 115, 170, 177, 180], "pruner": [1, 10, 39, 59, 85, 89, 92, 103, 104, 108, 170, 180, 181, 183, 184, 185], "search_spac": [1, 32, 34, 43, 47, 108, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 129, 130, 177], "faq": [1, 81, 169], "where": [1, 10, 13, 14, 15, 17, 29, 30, 31, 42, 43, 46, 50, 72, 82, 87, 89, 103, 104, 115, 116, 120, 143], "your": [1, 10, 32, 81, 85, 89, 112, 115, 119, 133, 140, 141, 170, 174, 177, 178, 181], "favorit": 1, "ml": [1, 109], "librari": [1, 6, 7, 20, 29, 30, 32, 43, 46, 61, 63, 66, 67, 68, 69, 70, 71, 72, 73, 80, 81, 104, 109, 110, 115, 136, 137, 168, 177], "how": [1, 4, 29, 30, 32, 35, 42, 45, 46, 81, 85, 99, 106, 113, 119, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 168, 169, 173, 177, 178, 179, 180, 181, 182], "have": [1, 12, 35, 42, 45, 47, 53, 67, 72, 74, 75, 80, 81, 84, 85, 104, 106, 109, 116, 117, 119, 122, 124, 125, 178, 181, 182], "own": [1, 32, 112, 133, 177, 178, 181], "argument": [1, 10, 13, 16, 29, 30, 31, 32, 35, 39, 40, 43, 46, 47, 50, 52, 53, 54, 55, 56, 57, 58, 67, 80, 81, 84, 85, 87, 89, 104, 115, 118, 120, 122, 124, 142, 143, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 167, 169, 173, 176, 178, 179, 181, 182], "without": [1, 3, 31, 32, 33, 34, 35, 40, 42, 43, 46, 47, 48, 49, 50, 52, 53, 54, 55, 68, 70, 71, 79, 80, 82, 83, 85, 94, 96, 97, 98, 99, 100, 101, 105, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 128, 129, 130, 132, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 159, 160, 162, 163, 168, 181], "remot": 1, "rdb": [1, 10, 45, 81, 89, 169, 170, 176, 183, 184, 185], "server": [1, 40, 79, 169], "save": [1, 10, 56, 57, 61, 63, 79, 85, 89, 104, 176, 183, 184, 185], "resum": [1, 10, 56, 57, 58, 60, 89, 176, 183, 184, 185], "suppress": [1, 56, 57, 65], "messag": [1, 35, 42, 43, 47, 56, 57, 80, 81, 85, 104, 115, 122, 124, 168, 173, 178, 179, 180], "model": [1, 29, 30, 33, 39, 42, 46, 51, 56, 57, 97, 109, 115, 124, 166, 170, 174, 181], "train": [1, 32, 33, 35, 39, 42, 45, 49, 56, 57, 67, 80, 81, 103, 104, 109, 168, 170, 174, 178, 180, 181, 182], "obtain": [1, 29, 45, 166], "reproduc": [1, 3, 56, 57, 173, 182], "result": [1, 5, 32, 34, 35, 43, 47, 49, 56, 57, 67, 68, 71, 74, 75, 85, 87, 102, 103, 109, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 158, 166, 168, 170, 176, 177, 178, 180, 182], "nan": [1, 32, 42, 73], "what": 1, "happen": [1, 35, 80, 81, 85], "alter": 1, "two": [1, 20, 32, 33, 40, 42, 50, 56, 57, 81, 85, 107, 111, 113, 122, 126, 128, 131, 166, 177, 179, 180, 181], "gpu": [1, 33], "evalu": [1, 29, 30, 31, 32, 33, 34, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 51, 53, 85, 93, 94, 96, 97, 98, 99, 101, 102, 103, 104, 107, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 138, 139, 147, 151, 158, 162, 166, 168, 174, 177, 178, 179, 181, 182], "simultan": [1, 85, 113], "test": [1, 12, 13, 14, 15, 16, 17, 18, 19], "my": [1, 40, 50], "do": [1, 32, 34, 43, 47, 85, 104, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 169, 178, 181], "avoid": [1, 40, 85, 124, 169], "memori": [1, 10, 35, 80, 81, 82, 85, 89, 136, 168, 179, 180], "oom": [1, 85], "output": [1, 32, 61, 63, 142, 149, 166], "onli": [1, 31, 32, 33, 34, 35, 42, 43, 47, 50, 56, 57, 61, 72, 74, 76, 80, 81, 82, 85, 87, 103, 104, 109, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 139, 143, 154, 177], "best": [1, 28, 35, 42, 56, 57, 68, 71, 72, 80, 81, 85, 87, 91, 96, 97, 124, 148, 159, 166, 168, 169, 173, 176, 177, 179, 180, 183, 184, 185], "updat": [1, 35, 42, 80, 81, 83, 85, 103, 115, 166], "variabl": [1, 42, 118, 166], "which": [1, 31, 33, 37, 38, 39, 41, 42, 44, 45, 50, 51, 53, 57, 58, 69, 70, 71, 73, 77, 79, 81, 82, 85, 96, 97, 100, 102, 104, 112, 113, 115, 119, 120, 121, 122, 124, 130, 133, 136, 147, 158, 166, 170, 173, 174, 175, 176, 178, 179, 180, 181, 182], "repres": [1, 6, 31, 66, 67, 68, 69, 70, 71, 72, 73, 85, 96, 105, 112, 119, 126, 127, 128, 129, 130, 131, 132, 133, 139], "proport": [1, 42], "accord": [1, 39, 54, 67, 81, 104, 109, 119, 128, 154], "dirichlet": 1, "some": [1, 67, 115, 151, 162, 176, 177, 180, 182], "constraint": [1, 32, 53, 119, 120, 124, 148, 159], "solv": [1, 80, 81, 115, 119], "occur": [1, 42, 81, 82, 85, 120], "perform": [1, 29, 32, 39, 42, 43, 54, 56, 57, 70, 81, 85, 114, 115, 118, 122, 126, 127, 128, 129, 130, 131, 132, 169, 177], "sqlite3": [1, 81], "monitor": [1, 37, 38, 45, 168], "make": [1, 49, 56, 57, 67, 103, 104, 124, 170, 181], "them": [1, 63, 80, 81, 85, 118, 124, 164, 177, 180], "fail": [1, 26, 32, 34, 43, 47, 81, 82, 83, 84, 85, 104, 105, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124], "thei": [1, 32, 34, 43, 47, 49, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 168, 169], "kill": [1, 81], "unexpectedli": [1, 81], "index": [1, 33, 51, 128, 132], "modul": [1, 5, 6, 7, 42, 43, 47, 107, 109, 110, 111, 112, 115, 122, 133, 134, 135, 136, 137, 138, 139, 140, 141, 164, 170], "page": [1, 81, 115], "optuna": [2, 3, 108, 166, 167, 168, 169, 170, 171, 173, 175, 176, 177, 178, 179, 182, 183, 184, 185], "3": [2, 9, 10, 11, 28, 40, 47, 59, 67, 82, 85, 88, 89, 90, 91, 92, 103, 104, 114, 119, 120, 133, 141, 143, 144, 147, 148, 154, 155, 158, 159, 167, 168, 169, 173, 174, 177, 178, 179, 180, 181], "newer": [2, 31, 32, 33, 34, 35, 40, 42, 43, 46, 47, 48, 49, 50, 52, 53, 54, 55, 70, 79, 80, 82, 83, 85, 94, 96, 97, 98, 99, 100, 101, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 128, 129, 130, 132, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 159, 160, 162, 163], "pip": [2, 140, 141, 170], "develop": [2, 3, 47, 176], "master": 2, "branch": [2, 167], "git": 2, "repositori": [2, 109, 170], "conda": 2, "forg": 2, "contain": [3, 9, 12, 13, 14, 15, 16, 17, 18, 19, 29, 31, 32, 33, 34, 35, 42, 43, 47, 59, 74, 75, 77, 79, 80, 81, 84, 85, 87, 88, 92, 102, 103, 104, 109, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 139, 142, 146, 148, 153, 157, 159, 161, 169, 175, 181], "copyright": 3, "2001": 3, "2002": 3, "enthought": 3, "inc": [3, 131], "2003": [3, 132], "2022": [3, 115, 176], "right": [3, 32, 34, 43, 45, 47, 82, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124], "reserv": 3, "redistribut": 3, "sourc": [3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183], "binari": [3, 42, 128, 132, 170, 180], "modif": [3, 115], "permit": [3, 42], "met": 3, "retain": 3, "notic": [3, 31, 32, 33, 34, 35, 40, 42, 43, 46, 47, 48, 49, 50, 52, 53, 54, 55, 70, 79, 80, 82, 83, 85, 94, 96, 97, 98, 99, 100, 101, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 128, 129, 130, 132, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 159, 160, 162, 163], "list": [3, 28, 29, 30, 31, 35, 40, 42, 46, 50, 56, 57, 75, 77, 79, 80, 81, 82, 85, 91, 96, 101, 115, 119, 120, 142, 146, 147, 148, 149, 150, 153, 157, 158, 159, 160, 161, 164, 168, 174, 176, 182], "disclaim": 3, "materi": 3, "neither": [3, 74, 75, 117, 125, 148, 159], "name": [3, 9, 10, 11, 24, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 59, 74, 75, 80, 81, 85, 87, 88, 89, 90, 92, 102, 103, 104, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 142, 143, 145, 146, 147, 148, 149, 150, 153, 154, 156, 157, 158, 159, 160, 161, 166, 168, 169, 173, 176, 177, 179, 180], "holder": 3, "contributor": [3, 85, 175], "endors": 3, "promot": [3, 67, 72], "product": 3, "deriv": [3, 7, 107, 133], "prior": [3, 31, 32, 33, 34, 35, 40, 42, 43, 46, 47, 48, 49, 50, 52, 53, 54, 55, 70, 76, 78, 79, 80, 82, 83, 85, 94, 96, 97, 98, 99, 100, 101, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 128, 129, 130, 132, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 159, 160, 162, 163], "permiss": 3, "BY": 3, "THE": 3, "AND": 3, "AS": 3, "express": 3, "OR": 3, "impli": [3, 31, 177], "warranti": 3, "BUT": 3, "TO": 3, "OF": 3, "merchant": 3, "particular": [3, 68, 71, 73, 84, 124], "IN": 3, "NO": 3, "event": 3, "shall": 3, "owner": 3, "BE": 3, "liabl": 3, "indirect": 3, "incident": 3, "special": [3, 7], "exemplari": 3, "consequenti": 3, "damag": 3, "procur": 3, "substitut": 3, "good": [3, 124, 182], "servic": [3, 4], "data": [3, 32, 42, 45, 49, 109, 168, 170, 174, 175, 178, 180], "profit": 3, "busi": 3, "interrupt": [3, 85], "caus": [3, 79, 133, 169], "ON": 3, "theori": 3, "liabil": 3, "whether": [3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 31, 35, 40, 59, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 79, 80, 81, 85, 92, 99, 100, 103, 104, 105, 112, 117, 125, 140, 141, 148, 151, 159, 162], "contract": 3, "strict": 3, "tort": 3, "aris": 3, "IF": [3, 169], "advis": 3, "SUCH": 3, "1993": 3, "sun": 3, "microsystem": 3, "sunpro": 3, "copi": [3, 9, 32, 34, 35, 43, 47, 66, 67, 68, 69, 70, 71, 72, 73, 80, 81, 85, 88, 103, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124], "modifi": [3, 32, 34, 43, 47, 66, 67, 68, 69, 70, 71, 72, 73, 85, 104, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 132], "freeli": 3, "grant": 3, "preserv": [3, 79], "visitor": 4, "websit": [4, 174], "improv": [4, 32, 52, 53, 54, 70, 94, 98, 115, 118, 124, 138, 151, 154, 162, 166], "www": [4, 169], "html": [4, 29, 42, 120, 169], "hl": 4, "en": [4, 120], "opt": 4, "add": [4, 33, 35, 37, 38, 39, 40, 41, 44, 45, 48, 50, 51, 80, 81, 85, 167, 168, 170, 173, 179, 180], "tool": 4, "dlpage": 4, "gaoptout": 4, "command": [5, 169, 170, 175, 183, 184, 185], "line": [5, 151, 162, 175, 183, 184, 185], "help": [5, 82, 112, 133, 151, 162, 183, 185], "interfac": [5, 31, 32, 33, 34, 35, 40, 42, 43, 46, 47, 48, 49, 50, 52, 53, 54, 55, 66, 67, 68, 69, 70, 71, 72, 73, 79, 80, 82, 83, 85, 94, 96, 97, 98, 99, 100, 101, 103, 104, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 128, 129, 130, 132, 133, 136, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 159, 160, 162, 163, 175, 182, 183, 184, 185], "variou": [6, 85, 167, 170], "probabl": [6, 97, 115, 120, 128, 131, 177], "mainli": [6, 81, 85], "initi": [6, 32, 40, 43, 50, 85, 107, 115, 118, 122, 173, 180], "optim": [6, 8, 9, 10, 11, 27, 28, 29, 30, 31, 32, 33, 35, 40, 42, 43, 46, 47, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 80, 81, 84, 85, 87, 88, 89, 90, 91, 92, 98, 99, 100, 102, 103, 104, 106, 112, 114, 115, 116, 118, 119, 121, 122, 123, 124, 132, 133, 138, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 169, 171, 172, 173, 175, 176, 177, 178, 180, 182, 183, 184, 185], "inherit": [6, 82, 112, 177, 178], "intern": [6, 10, 12, 13, 14, 15, 16, 17, 18, 19, 33, 35, 80, 81, 85, 87, 89, 104, 115, 116, 131, 136, 166, 177, 178], "basedistribut": [6, 20, 21, 22, 32, 34, 35, 42, 43, 47, 74, 75, 80, 81, 85, 103, 104, 106, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125], "low": [6, 13, 14, 15, 16, 17, 18, 19, 43, 49, 102, 103, 104, 106, 115, 118, 122, 124, 143, 154, 166, 168, 173, 176, 177], "endpoint": [6, 13, 14, 15, 16, 17, 18, 19, 104, 118, 124], "intdistribut": [6, 16, 17, 115, 118, 124, 176, 180], "should": [6, 7, 29, 30, 31, 32, 35, 39, 40, 45, 46, 50, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 80, 81, 85, 99, 101, 103, 104, 106, 107, 112, 117, 122, 125, 133, 136, 137, 151, 162, 178], "directli": [6, 42, 80, 81, 168], "util": [6, 85, 107, 164, 173, 174], "optunaerror": 7, "Of": [7, 169], "should_prun": [7, 8, 27, 66, 67, 68, 69, 70, 71, 72, 73, 85, 103, 104, 109, 144, 155, 168, 178, 181, 182], "trainer": [8, 27, 44, 45], "alia": [8, 10, 11, 27, 28, 36, 59, 89, 90, 91, 92, 111], "load_iri": [8, 27, 42, 67, 68, 69, 70, 71, 72, 104, 168, 175, 178, 181], "linear_model": [8, 27, 67, 68, 69, 70, 71, 72, 104, 168, 178, 181, 182], "sgdclassifi": [8, 27, 67, 68, 69, 70, 71, 72, 104, 168, 178, 181], "uniqu": [8, 10, 27, 35, 59, 67, 68, 69, 70, 71, 72, 80, 81, 89, 92, 103, 104, 173, 178, 181], "1": [8, 15, 16, 17, 27, 28, 29, 31, 32, 33, 34, 35, 39, 42, 43, 47, 49, 50, 54, 61, 64, 65, 67, 68, 69, 70, 71, 72, 73, 79, 80, 84, 85, 87, 91, 99, 100, 102, 103, 104, 106, 111, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 173, 174, 175, 177, 178, 179, 180, 181, 182], "n_train_it": [8, 27, 67, 68, 69, 70, 71, 72, 181], "step": [8, 13, 14, 15, 16, 17, 27, 35, 42, 49, 50, 67, 68, 69, 70, 71, 72, 73, 80, 81, 85, 102, 103, 104, 109, 114, 115, 116, 121, 144, 155, 166, 167, 168, 173, 174, 176, 177, 178, 181], "partial_fit": [8, 27, 42, 67, 68, 69, 70, 71, 72, 104, 168, 178, 181], "intermediate_valu": [8, 27, 35, 45, 67, 68, 69, 70, 71, 72, 80, 81, 82, 103, 104, 106, 166, 168, 173, 178, 181], "score": [8, 27, 40, 42, 56, 57, 67, 68, 69, 70, 71, 72, 96, 99, 100, 101, 104, 109, 151, 162, 168, 178, 181, 182], "maxim": [8, 10, 27, 32, 35, 42, 67, 68, 69, 70, 71, 72, 80, 81, 86, 89, 99, 100, 104, 124, 170, 174, 177, 178, 180, 181, 182], "from_study_nam": [9, 88], "from_storag": [9, 88], "to_storag": [9, 88], "to_study_nam": [9, 88], "system": [9, 35, 76, 78, 80, 81, 85, 88, 104, 106], "example_copi": [9, 88], "load_studi": [9, 85, 88, 137, 169], "str": [9, 10, 11, 12, 21, 22, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 56, 57, 59, 67, 72, 74, 75, 76, 77, 78, 79, 80, 81, 85, 87, 88, 89, 90, 91, 92, 102, 103, 104, 106, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 142, 143, 145, 146, 147, 148, 149, 150, 153, 154, 156, 157, 158, 159, 160, 161, 175], "basestorag": [9, 10, 11, 28, 35, 59, 85, 88, 89, 90, 91, 92, 136], "destin": [9, 88], "omit": [9, 32, 39, 88, 133], "duplicatedstudyerror": [9, 10, 35, 80, 81, 88, 89], "conflict": [9, 10, 88, 89], "alreadi": [9, 10, 24, 35, 53, 72, 80, 81, 85, 88, 89, 116, 181], "exist": [9, 10, 24, 28, 35, 40, 56, 57, 59, 80, 81, 88, 89, 91, 92, 106, 169, 173], "load_if_exist": [10, 89, 173], "engin": [10, 44, 81, 89, 169], "instanti": [10, 12, 13, 14, 15, 16, 17, 18, 19, 45, 80, 81, 89, 104, 118, 124, 166, 173], "basesampl": [10, 32, 34, 43, 47, 59, 85, 89, 92, 115, 121, 122, 123, 124, 133, 168, 177], "background": [10, 59, 89, 92], "dure": [10, 16, 32, 35, 42, 80, 81, 85, 87, 89, 113, 114, 116, 120, 124, 131, 166, 177], "multi": [10, 29, 30, 31, 40, 46, 50, 52, 55, 81, 85, 89, 103, 104, 106, 118, 119, 120, 124, 128, 130, 132, 133, 142, 143, 145, 146, 147, 149, 150, 153, 154, 156, 157, 158, 159, 160, 161, 170, 173, 182, 183, 184, 185], "baseprun": [10, 59, 70, 85, 89, 92, 104, 112, 178], "decid": [10, 59, 89, 92, 168, 180], "earli": [10, 59, 67, 70, 72, 89, 92, 168], "medianprun": [10, 59, 70, 89, 92, 103, 104, 115, 168, 170, 180], "studydirect": [10, 35, 80, 81, 85, 87, 89, 96], "bool": [10, 12, 13, 14, 15, 16, 17, 18, 19, 28, 31, 32, 33, 34, 35, 40, 42, 43, 47, 50, 56, 57, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 85, 89, 91, 99, 103, 104, 105, 115, 116, 117, 118, 122, 124, 125, 140, 141, 145, 148, 151, 156, 159, 162, 178], "flag": [10, 40, 47, 56, 57, 74, 75, 79, 81, 85, 89, 104, 115, 117, 124, 125, 145, 148, 151, 156, 159, 162], "control": [10, 29, 67, 85, 89, 135], "creation": [10, 81, 89], "skip": [10, 81, 85, 89], "sequenc": [10, 12, 32, 34, 35, 40, 43, 47, 50, 80, 81, 85, 87, 89, 103, 104, 106, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 143, 145, 148, 154, 156, 159], "concret": [10, 29, 30, 46, 89, 127, 133], "delet": [11, 32, 34, 35, 43, 47, 76, 78, 80, 81, 90, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 176], "choic": [12, 20, 43, 85, 104], "categor": [12, 32, 43, 53, 104, 115, 127, 133, 167, 168], "int": [12, 15, 16, 17, 29, 30, 32, 33, 34, 35, 39, 42, 43, 46, 47, 56, 57, 64, 65, 67, 68, 70, 71, 72, 73, 77, 79, 80, 81, 82, 84, 85, 87, 97, 99, 102, 103, 104, 106, 114, 115, 116, 118, 119, 120, 122, 123, 124, 127, 148, 151, 159, 162, 179], "candid": [12, 32, 42, 53, 104, 116, 118, 124], "least": [12, 67, 71, 73, 168], "Not": 12, "guarante": [12, 32, 34, 43, 47, 67, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124], "restrict": 12, "just": [12, 13, 14, 15, 16, 17, 18, 19, 48, 81, 104, 116, 169], "to_external_repr": [12, 13, 14, 15, 16, 17, 18, 19], "param_value_in_internal_repr": [12, 13, 14, 15, 16, 17, 18, 19], "convert": [12, 13, 14, 15, 16, 17, 18, 19, 104], "represent": [12, 13, 14, 15, 16, 17, 18, 19, 32, 35, 80, 81], "extern": [12, 13, 14, 15, 16, 17, 18, 19, 82, 109], "to_internal_repr": [12, 13, 14, 15, 16, 17, 18, 19], "param_value_in_external_repr": [12, 13, 14, 15, 16, 17, 18, 19], "q": [13, 49, 102, 103, 104], "discret": [13, 14, 15, 16, 17, 104, 115, 116, 167], "linear": [13, 19, 104, 115, 167, 174], "domain": [13, 14, 15, 16, 18, 19, 104, 115, 118, 124, 133], "mathsf": [13, 14, 15, 17, 72, 104], "divis": [13, 14, 15, 17, 104, 119], "maximum": [13, 14, 15, 17, 29, 30, 42, 46, 67, 72, 73, 82, 84, 103], "integ": [13, 14, 15, 16, 17, 42, 77, 79, 81, 82, 84, 99, 104, 115, 116, 122, 133, 167, 178], "lower": [13, 14, 15, 16, 17, 18, 19, 53, 73, 97, 104, 115, 122, 178], "upper": [13, 14, 15, 16, 17, 18, 19, 53, 73, 97, 104], "greater": [13, 14, 15, 16, 17, 18, 19, 77, 79, 85, 103, 104, 106, 120], "larger": [13, 14, 15, 16, 18, 32, 53, 55, 67, 73, 80, 104, 120, 124, 148, 159, 180], "deprec": [13, 16, 17, 18, 19, 34, 37, 43, 49, 56, 57, 85, 87, 102, 103, 104, 117, 118, 125, 148, 159], "v3": [13, 16, 17, 18, 19, 31, 32, 33, 35, 40, 46, 49, 50, 54, 79, 80, 82, 85, 87, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 114, 115, 117, 119, 122, 124, 125, 126, 128, 129, 130, 132, 148, 149, 151, 152, 159, 160, 162, 163], "v6": [13, 16, 17, 18, 19, 49, 102, 103, 104], "subject": [13, 16, 17, 18, 19, 34, 37, 49, 56, 57, 85, 87, 102, 103, 104, 117, 118, 120, 124, 125, 148, 159], "tag": [13, 16, 17, 18, 19, 31, 32, 33, 34, 35, 37, 40, 42, 43, 46, 47, 48, 49, 50, 52, 53, 54, 55, 70, 79, 80, 82, 83, 85, 87, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 132, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 159, 160, 162, 163], "floatdistribut": [13, 18, 19, 42, 85, 106, 114, 115, 118, 124, 166, 173, 176, 177, 180, 181], "properti": [13, 42, 49, 56, 57, 85, 102, 103, 104, 122, 127, 132, 166, 173, 175], "subtyp": 13, "proxi": 13, "posit": [14, 15, 16, 17, 81, 99, 104, 122], "v2": [16, 32, 34, 37, 40, 43, 47, 48, 49, 50, 52, 53, 55, 56, 57, 70, 82, 83, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 141, 142, 143, 144, 145, 146, 147, 148, 150, 159], "v4": [16, 34, 37, 56, 57, 117, 118, 125], "compon": [16, 42], "reli": 16, "ignor": [16, 32, 34, 39, 43, 47, 104, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 148, 159], "assum": [16, 32, 42, 68, 71, 79, 96, 103, 104, 133, 154, 169, 174, 176, 180], "alwai": [16, 42, 43, 47, 69, 98, 103, 115, 120, 182], "besid": 16, "dist_old": 20, "dist_new": 20, "categoricaldistribut": [20, 85, 104, 106, 115, 118, 120, 124, 181], "between": [20, 32, 34, 43, 45, 47, 50, 67, 68, 71, 73, 97, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124], "previous": [20, 53, 85, 104, 112], "newli": 20, "ad": [20, 31, 32, 33, 34, 35, 40, 42, 43, 46, 47, 48, 49, 50, 52, 53, 54, 55, 70, 79, 80, 82, 83, 85, 94, 96, 97, 98, 99, 100, 101, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 128, 129, 130, 132, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 159, 160, 162, 163, 180], "dist": 21, "serial": [21, 22, 56, 57, 79], "json": [21, 22, 35, 56, 57, 77, 79, 80, 81, 85, 104, 175], "string": [21, 42, 85, 104], "json_str": 22, "deseri": 22, "receiv": [23, 42, 85], "invalid": 23, "configur": [23, 29, 30, 32, 46, 53, 63, 67, 72, 81, 104, 116, 124], "duplic": [24, 85, 114, 116], "oper": [26, 79, 80, 126, 127, 128, 129, 131, 132, 133, 134, 168, 174, 181], "include_best_tri": [28, 91], "study_summari": [28, 91, 175], "potenti": [28, 91, 98, 138, 151, 162], "queri": [28, 91], "longer": [28, 47, 81, 91], "fetch": [28, 91, 174], "summari": [28, 91], "summar": [28, 91], "studysummari": [28, 91, 175], "n_tree": [29, 30, 46], "64": [29, 30, 46, 178, 180], "fanova": 29, "approach": [29, 57, 119], "assess": [29, 30, 31, 46, 99, 100, 147, 158], "forest": [29, 30, 46], "regress": [29, 30, 46], "accur": 29, "reliabl": 29, "over": [29, 67, 72, 80, 85, 154, 181], "minut": [29, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "publish": [29, 131], "cython": 29, "within": [29, 35, 40, 50, 80, 81, 101, 115, 129, 166], "packag": [29, 30, 46, 109, 110, 164], "underli": [29, 35, 42], "cover": 29, "explor": 29, "orient": 29, "cite": 29, "origin": [29, 67, 82, 104, 118, 124, 181], "automl": 29, "io": [29, 80, 120], "tree": [29, 30, 46, 104, 118, 124, 168], "depth": [29, 30, 46], "meant": [29, 30, 46], "get_param_import": [29, 30, 46, 107, 158], "present": [29, 30, 31, 42, 46, 147, 158], "frozentri": [29, 30, 31, 32, 34, 35, 42, 43, 46, 47, 56, 57, 66, 67, 68, 69, 70, 71, 72, 73, 75, 80, 81, 82, 85, 87, 96, 106, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 142, 143, 145, 146, 147, 148, 149, 150, 153, 154, 156, 157, 158, 159, 160, 161, 166, 173, 178, 179, 181, 182], "being": [29, 30, 31, 35, 46, 68, 71, 82, 85, 115, 142, 143, 145, 146, 147, 149, 150, 153, 154, 156, 157, 158, 160, 161], "durat": [29, 30, 46, 85, 103, 124, 170], "total_second": [29, 30, 46, 170], "ordereddict": [29, 30, 31, 46, 74, 75, 117, 125], "dict": [29, 30, 31, 32, 34, 35, 40, 42, 43, 46, 47, 49, 50, 56, 57, 74, 75, 77, 79, 80, 81, 85, 87, 102, 103, 104, 106, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125], "decreas": [30, 115, 177, 178], "impur": 30, "mdi": 30, "randomforestclassifi": [30, 46, 99, 100, 104, 167], "feature_importances_": 30, "consist": [31, 79], "neg": [31, 70, 77, 79], "point": [31, 72, 104, 115, 116, 119, 143, 154, 167, 177], "higher": [31, 42, 45, 104, 140, 141], "descend": 31, "exclud": [31, 74, 75, 117, 125, 132], "found": [31, 42, 56, 57, 79, 166, 182], "empti": [31, 82, 85, 124], "plot_param_import": [31, 164, 170, 174], "baseimportanceevalu": [31, 107, 147, 158], "fanovaimportanceevalu": [31, 107, 147, 158], "boolean": [31, 33, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 104, 112, 117, 125, 178], "candidates_func": [32, 52, 53, 55], "n_startup_tri": [32, 34, 43, 47, 68, 71, 115, 118, 124], "consider_running_tri": 32, "independent_sampl": [32, 34, 43, 47, 115, 122, 177], "devic": [32, 174], "botorch": 32, "bayesian": 32, "top": [32, 71, 72, 97], "pytorch": [32, 44, 45, 49, 174], "allow": [32, 42, 70, 81, 84, 85, 114, 128, 132, 133, 178], "back": [32, 109], "hot": [32, 53], "encod": [32, 53], "homepag": 32, "keep": [32, 71, 80, 81], "torch": [32, 49, 53, 167, 174], "tensor": [32, 49, 52, 53, 54, 55], "bound": [32, 42, 43, 52, 53, 54, 55, 85, 97, 115, 126, 127, 128, 129, 130, 131, 132], "quasi": [32, 52, 53, 54, 55, 122, 168], "mc": [32, 52, 53, 54, 55], "batch": [32, 52, 53, 54, 133], "expect": [32, 49, 52, 53, 54, 118, 124, 127, 179], "qei": [32, 53], "either": [32, 35, 42, 80, 81, 105, 107, 116, 118, 122, 124, 148, 159, 181], "hypervolum": [32, 52, 54, 118, 124], "qehvi": [32, 52, 54], "extend": [32, 35, 55, 119], "parego": [32, 55], "qparego": [32, 55], "qei_candidates_func": [32, 52, 54, 55], "strictli": [32, 42, 53, 120, 124, 148, 159, 177], "violat": [32, 53, 120, 124, 148, 159], "smaller": [32, 67, 73, 119, 120, 124, 138, 148, 159], "taken": [32, 70, 103], "account": [32, 118, 124, 180], "resort": 32, "acquisit": 32, "consider": 32, "whose": [32, 35, 76, 78, 80, 81, 83, 116, 142, 144, 145, 146, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 166, 173], "enabl": [32, 40, 50, 56, 57, 62, 63, 118, 122, 124, 168, 173, 181], "fasten": 32, "after_tri": [32, 34, 43, 47, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124], "process": [32, 34, 35, 42, 43, 45, 47, 49, 50, 76, 77, 78, 82, 85, 97, 104, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 138, 139, 164], "befor": [32, 34, 35, 43, 47, 50, 66, 67, 68, 69, 70, 71, 72, 73, 80, 81, 82, 84, 85, 99, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 151, 162, 168, 180, 181], "succeed": [32, 34, 43, 47, 76, 78, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124], "infer_relative_search_spac": [32, 34, 43, 47, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 177], "infer": [32, 34, 43, 47, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 177], "rel": [32, 34, 43, 47, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 177], "sample_rel": [32, 34, 43, 47, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 177], "sample_independ": [32, 34, 43, 47, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 177], "intersection_search_spac": [32, 34, 43, 47, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 177], "reseed_rng": [32, 34, 43, 47, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124], "rese": [32, 34, 43, 47, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124], "replic": [32, 34, 43, 47, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124], "prevent": [32, 34, 43, 47, 56, 57, 63, 81, 85, 99, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124], "assign": [32, 34, 40, 42, 43, 47, 50, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124], "param_nam": [32, 34, 35, 43, 47, 80, 81, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 177], "param_distribut": [32, 34, 42, 43, 47, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 177], "suitabl": [32, 34, 43, 47, 85, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 176], "relationship": [32, 34, 43, 47, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 142, 146, 149, 150, 153, 157, 160, 161, 170], "build": [32, 34, 43, 47, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 178], "regard": [32, 34, 43, 47, 111, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 167], "perspect": [32, 34, 43, 47, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 133], "onc": [32, 34, 43, 47, 49, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 166, 179], "gaussian": [32, 34, 43, 47, 97, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124], "cma": [32, 34, 43, 47, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 168], "eval_set_index": 33, "catboost": 33, "observ": [33, 39, 41, 44, 45, 51, 53, 67, 166], "valid": [33, 35, 37, 38, 39, 42, 44, 51, 57, 58, 80, 81, 85, 96, 99, 101, 151, 162, 168, 174, 181], "accuraci": [33, 37, 38, 39, 41, 44, 45, 48, 51, 166, 170, 174, 175, 180, 181], "after_iter": 33, "check_prun": [33, 45], "unlik": [33, 85], "doesn": [33, 45, 70, 143, 154, 173, 177], "logloss": 33, "auc": [33, 48, 170, 180], "eval_set": [33, 51], "iter": [33, 39, 42, 56, 57, 67, 85, 168, 180], "simplenamespac": 33, "iteraion": 33, "validation_nam": 33, "metric_nam": [33, 40, 41, 48, 50, 85], "6": [33, 43, 45, 49, 67, 76, 104, 115, 166, 168, 169, 173, 178, 179, 180], "9": [33, 40, 50, 83, 118, 119, 120, 128, 131, 166, 168, 173, 174, 177, 178, 180], "logic": [33, 168, 178], "x0": [34, 43, 115], "sigma0": [34, 43, 115], "cma_std": [34, 43], "cma_opt": [34, 43], "warn_independent_sampl": [34, 43, 47, 115, 122, 124], "wrapper": [34, 49, 58], "pycmasampl": [34, 115], "backward": [34, 174], "renam": [34, 43], "regist": [35, 37, 38, 80, 81, 175, 180], "dask": 35, "live": 35, "youtub": 35, "video": [35, 169, 185], "custom": [35, 41, 81, 107, 139, 178], "sometim": 35, "debug": [35, 64, 65, 110], "attempt": 35, "common": 35, "usag": [35, 82, 104, 170, 178], "need": [35, 42, 45, 50, 61, 67, 72, 80, 81, 85, 145, 168, 173, 177, 181], "check_trial_is_updat": [35, 80, 81], "trial_id": [35, 80, 81, 103, 104, 166, 173], "trial_stat": [35, 80, 81], "id": [35, 67, 80, 81, 104], "runtimeerror": [35, 80, 81, 85], "create_new_studi": [35, 80, 81], "among": [35, 71, 72, 80, 81], "create_new_tri": [35, 80, 81], "study_id": [35, 80, 81, 87], "template_tri": [35, 80, 81], "templat": [35, 80, 81, 178], "keyerror": [35, 80, 81], "match": [35, 67, 80, 81], "delete_studi": [35, 80, 81], "get_all_studi": [35, 80, 81], "frozenstudi": [35, 80, 81], "get_all_tri": [35, 80, 81], "deepcopi": [35, 80, 81, 85, 103, 177, 178], "intend": [35, 80, 81], "filter": [35, 80, 81, 85], "get_base_storag": 35, "retriev": [35, 175], "conveni": 35, "extract": [35, 174], "get_best_tri": [35, 80, 81], "been": [35, 47, 63, 68, 71, 73, 74, 75, 80, 81, 83, 86, 104, 105, 116, 117, 125, 178], "get_n_trial": [35, 80, 81], "count": [35, 42, 80, 81, 84, 85], "tupl": [35, 57, 80, 81, 84, 85, 148], "get_study_direct": [35, 80, 81], "get_study_id_from_nam": [35, 80, 81], "get_study_name_from_id": [35, 80, 81], "get_study_system_attr": [35, 80, 81], "get_study_user_attr": [35, 80, 81], "get_trial": [35, 80, 81, 85, 177, 178], "get_trial_id_from_study_id_trial_numb": [35, 80, 81], "trial_numb": [35, 56, 57, 80, 81, 181], "get_trial_number_from_id": [35, 80, 81], "get_trial_param": [35, 80, 81], "get_trial_system_attr": [35, 80, 81], "get_trial_user_attr": [35, 80, 81], "remove_sess": [35, 80, 81], "clean": [35, 80], "up": [35, 80, 82, 122, 168, 173], "set_study_system_attr": [35, 80, 81], "overwrit": [35, 80, 81], "serializ": [35, 77, 79, 80, 81, 85, 104, 175], "set_study_user_attr": [35, 80, 81], "set_trial_intermediate_valu": [35, 80, 81], "associ": [35, 80, 81, 103, 104, 112, 124, 178], "epoch": [35, 42, 67, 72, 80, 81, 103, 104, 174], "set_trial_param": [35, 80, 81], "param_value_intern": [35, 80, 81], "set_trial_state_valu": [35, 80, 81], "successfulli": [35, 80, 81, 84], "kept": [35, 45, 71, 80, 81], "latter": [35, 40, 42, 80, 81], "tri": [35, 80, 81, 180], "set_trial_system_attr": [35, 80, 81], "map": [35, 42, 80, 81, 116, 178], "jsonserializ": [35, 80, 81], "set_trial_user_attr": [35, 80, 81], "fastaiv2pruningcallback": 36, "fastai": [37, 38], "learner": [37, 38], "fit_one_cycl": [37, 38], "n_epoch": [37, 38], "fastaipruningcallback": [37, 38], "valid_loss": [37, 38], "cyc_len": 37, "max_lr": 37, "basic_train": 37, "trackercallback": [37, 38], "cnn_learner": 38, "dl": 38, "resnet18": 38, "error_r": 38, "cb": 38, "lr_max": 38, "valid_nam": [39, 56], "valid_0": 39, "report_interv": 39, "lightgbm": [39, 151, 162, 170, 180], "binary_error": 39, "multi_error": 39, "cv": [39, 42, 57, 99, 100, 151, 162], "th": 39, "boost": 39, "itself": [39, 48, 85, 103, 109, 124], "definit": [39, 178], "tracking_uri": 40, "create_experi": 40, "mlflow_kwarg": 40, "tag_study_user_attr": 40, "tag_trial_user_attr": 40, "track": [40, 48, 50], "mlflow": 40, "relev": [40, 48], "mlflc": 40, "your_tracking_uri": 40, "my_studi": [40, 59, 92], "uri": 40, "set_tracking_uri": 40, "broadcast": [40, 50], "suffix": [40, 50], "value_0": [40, 50], "value_1": [40, 50], "experi": [40, 50, 173, 175, 176, 177], "let": [40, 85, 166, 169, 173, 176, 178, 180, 181, 182], "under": [40, 81, 97], "set_experi": 40, "experiment_id": 40, "addit": [40, 45, 50, 85, 97, 173, 181], "databrick": 40, "notebook": [40, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183], "nest_trial": 40, "part": [40, 85, 119], "anyon": 40, "migrat": [40, 109], "nest": [40, 42, 85], "typeerror": [40, 104], "indic": [40, 42, 77, 79, 82, 148, 149, 159, 160, 178], "attr": [40, 85, 173, 175, 176], "pair": [40, 175, 181], "supersed": 40, "both": [40, 57, 67, 120, 181], "former": 40, "collis": 40, "track_in_mlflow": 40, "decor": [40, 50], "extens": [40, 130, 133], "log_param": 40, "power": [40, 50, 122], "log_metr": 40, "my_other_studi": 40, "eval_metr": [41, 51], "mxnet": 41, "cross": [41, 42, 57, 96, 99, 101, 151, 162], "entropi": [41, 99, 100], "constructor": [41, 43, 47, 85, 104, 137, 178], "estim": [42, 67, 97, 98, 109, 115, 118, 124, 138, 168], "enable_prun": 42, "error_scor": 42, "max_it": 42, "refit": 42, "return_train_scor": 42, "subsampl": [42, 151, 162], "verbos": [42, 56, 57, 64, 65, 110, 170, 180], "baseestim": [42, 109], "scikit": [42, 47, 51, 164], "basecrossvalid": [42, 57], "strategi": [42, 112, 113, 115, 118, 133, 178], "fold": [42, 57], "splitter": 42, "yield": 42, "split": [42, 61, 104], "arrai": [42, 181], "multiclass": 42, "stratifiedkfold": 42, "kfold": [42, 99, 100, 151, 162], "numer": [42, 126, 127, 128, 129, 130, 131, 132], "fitfailedwarn": 42, "affect": [42, 43, 56, 57, 85, 170, 174], "thread": [42, 81, 85], "cpu": [42, 49, 85, 174], "suffer": [42, 85], "func": [42, 85], "signal": [42, 85], "ctrl": [42, 85], "sigterm": [42, 85], "runtim": 42, "v": 42, "qualiti": 42, "randomst": [42, 126, 127, 128, 129, 130, 131, 132, 177], "pseudo": 42, "global": [42, 49, 97, 143, 154], "made": [42, 104, 112, 119], "avail": [42, 87, 109, 120, 137, 140, 141, 168], "best_estimator_": 42, "insight": 42, "impact": 42, "overfit": [42, 178], "underfit": 42, "computation": [42, 118, 124], "expens": [42, 118, 124], "draw": [42, 85], "shape": [42, 53, 85], "appropri": [42, 81], "end": [42, 56, 57, 84, 85, 122, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "accept": [42, 56, 57, 81, 85, 104, 127, 177], "chosen": 42, "n_splits_": 42, "refit_time_": 42, "sample_indices_": 42, "scorer_": 42, "scorer": 42, "study_": 42, "actual": [42, 53, 116, 133], "gamma": [42, 104, 118, 124], "auto": [42, 56, 57, 67, 72], "optuna_search": 42, "convent": [42, 80], "stabl": [42, 120], "model_evalu": 42, "multipli": [42, 43, 115], "17": [42, 60, 64, 168, 173, 178, 180], "best_index_": 42, "retun": [42, 181], "equiv": 42, "best_trial_": 42, "best_params_": 42, "best_score_": 42, "classes_": 42, "ndarrai": [42, 118, 119, 124, 126, 127, 128, 129, 130, 131, 132, 181], "seri": [42, 82], "label": [42, 143, 145, 146, 147, 150, 154, 156, 157, 158, 161, 170, 174, 180], "decision_funct": 42, "datafram": [42, 85, 173], "spmatrix": 42, "group": [42, 49, 124, 133], "fit_param": 42, "get_param": 42, "deep": [42, 85, 168], "subobject": 42, "inverse_transform": 42, "n_trials_": 42, "predict_log_proba": 42, "predict_proba": 42, "scaler": 42, "score_sampl": 42, "set_param": 42, "well": [42, 82, 120, 124, 173], "pipelin": [42, 177], "__": 42, "trials_": 42, "user_attrs_": 42, "quadrat": [43, 85, 115, 122], "especi": [43, 110], "exce": [43, 68, 71, 73, 99, 116, 133], "popul": [43, 115, 133], "size": [43, 115, 116, 133, 145], "cmaessampl": [43, 133, 168, 181], "cmaevolutionstrategi": 43, "standard": [43, 115, 122], "deviat": [43, 115], "min_rang": [43, 115], "denot": [43, 104, 115], "minimum": [43, 67, 68, 71, 72, 73, 97, 99, 115, 151, 162], "cma_default_opt": 43, "boundaryhandl": 43, "emit": [43, 47, 115, 122, 124], "ignit": 44, "handler": [44, 60, 61, 62, 63, 168, 173, 179, 180], "lightn": 45, "val_loss": 45, "val_acc": 45, "pytorch_lightn": 45, "lightningmodul": 45, "training_step": 45, "validation_epoch_end": 45, "pytorchlightn": 45, "evok": 45, "properli": [45, 56, 57, 85], "cach": [45, 80], "trial_system_attr": 45, "ddp": 45, "noth": [45, 103], "shaplei": 46, "shap": 46, "absolut": 46, "skopt_kwarg": 47, "consider_pruned_tri": [47, 115], "highli": [47, 185], "inact": 47, "keyword": [47, 56, 57, 58, 81], "skopt": 47, "dimens": [47, 85, 119, 124, 126, 127, 128, 129, 130, 131, 132, 133], "o": [47, 133], "slower": 47, "dirnam": 48, "tensorboard": 48, "directori": [48, 56, 57], "give": [48, 67, 119, 168], "know": 48, "later": [48, 76, 78, 173], "roc": 48, "incorpor": 49, "basetri": 49, "rank": [49, 149, 160], "node": [49, 173], "processgroup": 49, "commun": 49, "sure": 49, "gloo": 49, "world": 49, "nccl": 49, "synchron": [49, 76, 78], "transmiss": 49, "share": [49, 56, 57, 122, 182], "set_system_attr": [49, 85, 102, 103, 104], "v5": [49, 85, 87, 102, 103, 104, 148, 159], "suggest_discrete_uniform": [49, 102, 103, 104], "suggest_loguniform": [49, 102, 103, 104], "suggest_uniform": [49, 102, 103, 104], "wandb_kwarg": 50, "as_multirun": 50, "bias": 50, "onlin": 50, "wandb": 50, "setup": [50, 61, 63], "who": [50, 119, 136], "subsequ": [50, 124], "per": [50, 133], "ensur": [50, 68, 71, 79, 85, 114, 116, 169], "correct": [50, 174, 178], "wandbc": 50, "multirun": 50, "track_in_wandb": 50, "b": [50, 67, 114, 124, 143, 154], "sweep": 50, "panel": 50, "ex": 50, "coordin": 50, "observation_kei": 51, "xgboost": 51, "merror": 51, "validation_0": 51, "train_x": [52, 53, 54, 55, 168, 170, 180], "train_obj": [52, 53, 54, 55], "train_con": [52, 53, 54, 55], "pending_x": [52, 53, 54, 55], "descript": [52, 54, 55, 72, 176], "previou": [53, 68, 82, 122, 177, 178, 181], "n_param": 53, "n_object": [53, 148, 159], "n_constraint": 53, "involv": 53, "row": 53, "respect": [53, 82, 85, 116, 137], "pend": 53, "n_pend": 53, "optimize_acqf": 53, "noisi": 54, "qnehvi": 54, "better": [54, 67, 122, 168, 180], "qehvi_candidates_func": 54, "cf": 54, "constrained_multi_objective_bo": 54, "train_set": [56, 57], "num_boost_round": [56, 57], "valid_set": [56, 170, 180], "fobj": [56, 57], "feval": [56, 57], "feature_nam": [56, 57], "categorical_featur": [56, 57], "early_stopping_round": [56, 57], "evals_result": 56, "verbose_ev": [56, 57], "learning_r": [56, 167], "keep_training_boost": 56, "time_budget": [56, 57], "sample_s": [56, 57], "optuna_callback": [56, 57], "model_dir": [56, 57], "show_progress_bar": [56, 57, 85], "optuna_se": [56, 57], "tuner": [56, 57, 58], "stepwis": [56, 57, 58], "manner": [56, 58], "lambda_l1": [56, 57], "lambda_l2": [56, 57], "num_leav": [56, 57, 151, 162], "feature_fract": [56, 58], "bagging_fract": [56, 57, 170, 180], "bagging_freq": [56, 57, 170, 180], "min_child_sampl": [56, 58, 151, 162, 170, 180], "articl": 56, "kohei": 56, "ozaki": [56, 115, 168], "kaggl": 56, "grandmast": 56, "budget": [56, 57, 67, 133], "tune": [56, 57, 58, 182], "elapsed_sec": [56, 57], "elaps": [56, 57, 85, 103], "average_iteration_tim": [56, 57], "averag": [56, 57, 67, 96], "booster": [56, 57], "lgbm_param": [56, 57], "access": [56, 57, 80, 81, 85, 104, 109, 173, 175, 178], "get_best_boost": [56, 57], "filenam": [56, 57], "align": [56, 57], "progress": [56, 57, 85, 129], "bar": [56, 57, 85, 142, 145, 149, 153, 156, 160], "fragment": [56, 57], "lgb": [56, 57, 170, 180], "valid_set_typ": 56, "best_param": [56, 57, 85, 121, 166, 173, 176], "best_scor": [56, 57], "sample_train_set": [56, 57], "subset": [56, 57, 124, 174], "nfold": 57, "stratifi": 57, "shuffl": [57, 99, 100, 114, 116, 151, 162, 174], "fpreproc": 57, "show_stdv": 57, "return_cvboost": 57, "emploi": [57, 85], "lightgbmtun": [57, 58], "cancer": [57, 58, 170], "detect": [57, 58, 73, 81], "init_model": 57, "eval_train_metr": 57, "cvbooster": 57, "arg": [58, 94, 96], "kwarg": [58, 94, 96], "drop": 58, "suspend": 58, "loaded_studi": [59, 92], "root": [60, 61, 62, 63, 64, 65, 169], "logger": [60, 61, 62, 63, 64, 65], "sy": [60, 63, 99, 168, 173, 179, 180], "stderr": [60, 63], "enable_default_handl": 60, "02": [60, 65, 169, 174, 184], "23": [60, 174, 180], "00": [60, 172, 174, 184], "54": [60, 180], "314": 60, "356": 60, "11": [60, 118, 168, 174, 180], "enable_propag": 61, "disable_default_handl": [61, 62, 63], "getlogg": [61, 63], "setlevel": [61, 63], "addhandl": [61, 63, 168, 173, 179, 180], "filehandl": [61, 63], "foo": [61, 63, 169], "propog": 61, "readlin": [61, 63], "startswith": [61, 63], "doubl": 63, "2021": [64, 65, 115], "31": [64, 65, 180], "05": [64, 168, 169, 172, 174], "35": [64, 65, 130, 180], "232": 64, "238": 64, "245": 64, "critic": [64, 65, 110], "fatal": [64, 65, 110], "088": 65, "091": 65, "096": 65, "abstract": [66, 112, 113, 127, 136, 177, 178], "judg": [66, 67, 68, 69, 70, 71, 72, 73, 99], "min_resourc": [67, 72, 181], "max_resourc": [67, 181], "reduction_factor": [67, 72, 181], "bootstrap_count": [67, 72], "hyperband": [67, 168, 181], "successivehalv": 67, "sha": 67, "finit": [67, 114], "resourc": [67, 72, 168], "attack": 67, "paper": [67, 72, 99, 115, 118, 119, 120, 122, 124, 126, 129, 131, 154, 168], "counterpart": 67, "full": [67, 82, 85, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "characterist": [67, 168], "startup": 67, "successivehalvingprun": [67, 168], "bracket": 67, "adapt": [67, 119], "sever": [67, 80, 85, 121, 168], "factor": [67, 72, 104], "mathrm": 67, "floor": 67, "log_": 67, "texttt": 67, "reduct": [67, 72], "_": [67, 72, 85, 181], "frac": 67, "max": [67, 82, 84, 174, 177], "min": [67, 72, 177, 180], "too": 67, "larg": 67, "alloc": [67, 72], "r": [67, 72, 115, 128], "success": [67, 72, 85, 120, 124, 168], "With": [67, 116, 119, 167], "largest": 67, "No": [67, 130, 168], "eta": [67, 72, 128, 130, 132], "rung": [67, 72], "incompat": 67, "n_warmup_step": [68, 71, 73, 103, 104, 170], "interval_step": [68, 71, 73], "n_min_trial": [68, 71], "median": [68, 168], "rule": [68, 124, 168], "wors": 68, "offset": [68, 71, 73], "warmup": [68, 71, 73, 103, 104, 178], "postpon": [68, 71, 73], "wrapped_prun": 70, "patienc": 70, "min_delta": 70, "toler": [70, 168], "equival": [70, 181], "consecut": [70, 103, 104], "percentil": [71, 168], "bottom": 71, "inclus": 71, "25th": 71, "min_early_stopping_r": 72, "asynchron": [72, 122, 168], "halv": [72, 168], "bandit": 72, "care": [72, 104, 116, 176], "simple_prun": 72, "chainer_integr": 72, "heurist": [72, 118, 124], "look": 72, "rate": [72, 104, 115, 129, 180], "place": [72, 103, 178], "fraction": 72, "reach": [72, 73, 85], "won": [72, 85, 120, 124], "competit": 72, "repeat": 72, "procedur": [72, 81, 113], "At": [72, 113, 127, 177], "outli": 73, "threshold": [73, 98, 168, 179], "fall": 73, "behind": [73, 104, 124], "objective_for_upp": 73, "enumer": [73, 174], "ys_for_upp": 73, "objective_for_low": 73, "ys_for_low": 73, "90": [73, 180], "include_prun": [74, 75, 117, 125], "far": [74, 75, 117, 125, 182], "ordered_dict": [74, 75, 117, 125], "lifetim": [74, 85, 113, 117, 152, 163], "intersectionsearchspac": [75, 125], "much": [75, 125, 168], "reduc": [75, 80, 115, 125, 182], "filepath": [76, 78], "nfsv3": [76, 78], "acquir": [76, 78], "o_excl": 76, "kernel": [76, 104], "journalfilesymlinklock": 76, "path": [76, 77, 78], "protect": [76, 78], "block": [76, 78, 181], "_lock_fil": 76, "file_path": [77, 80], "lock_obj": [77, 80], "journalfilebaselock": 77, "append_log": [77, 79], "read_log": [77, 79], "log_number_from": [77, 79], "nfsv2": 78, "journalfileopenlock": [78, 80], "symbol": 78, "_lock_target_fil": 78, "use_clust": 79, "prefix": 79, "redi": 79, "password": 79, "ie": 79, "localhost": [79, 169], "6379": 79, "standalon": 79, "atom": 79, "inconsist": 79, "load_snapshot": 79, "snapshot": [79, 80], "byte": 79, "save_snapshot": 79, "log_storag": 80, "latest": [80, 81, 178], "crash": 80, "re": [80, 85, 103, 104, 121, 177, 183, 184, 185], "establish": 80, "content": 80, "replai": 80, "benefit": 80, "granular": 80, "simpler": [80, 168], "window": 80, "privileg": 80, "held": [80, 85], "appear": [80, 178], "basejournallogstorag": 80, "skip_compatibility_check": 81, "skip_table_cr": 81, "pool_siz": 81, "create_engin": 81, "grace": 81, "stale": [81, 83], "tabl": [81, 133, 168, 170, 176], "pool_pre_p": 81, "wait_timeout": 81, "often": [81, 124], "get_all_vers": 81, "get_current_vers": 81, "get_failed_trial_callback": 81, "get_head_vers": 81, "get_heartbeat_interv": 81, "record_heartbeat": 81, "session": [81, 166], "threadlocalregistri": 81, "close": [81, 107, 166], "destruct": 81, "occasion": [81, 116], "touch": 81, "inherit_intermediate_valu": 82, "recreat": 82, "queue": [82, 85], "again": [82, 85, 166, 182], "retried_trial_numb": 82, "repetit": 82, "retry_histori": 82, "preempt": 82, "indefinit": 82, "mani": [82, 85, 119, 133, 169], "static": [82, 118, 124], "ascend": 82, "long": 83, "certain": [84, 178, 179], "toward": [84, 129], "add_trial": [85, 106, 180], "create_tri": [85, 180], "other_studi": 85, "is_finish": [85, 105], "fixed_distribut": 85, "altern": [85, 169], "outsid": 85, "scope": 85, "adam": [85, 167, 174], "sgd": [85, 104], "lr": [85, 144, 155, 174], "0001": 85, "locat": [85, 176], "domin": [85, 119, 120, 148, 159], "t0": 85, "t1": 85, "zip": [85, 171, 181, 183], "skip_if_exist": 85, "memo": 85, "produc": [85, 129], "relat": [85, 137, 139, 149, 160], "shouldn": 85, "mutat": [85, 120], "corrupt": 85, "unexpect": 85, "done": [85, 109], "choos": [85, 124], "sigint": 85, "cleanli": 85, "maxtrialscallback": [85, 169], "consumpt": 85, "ne": 85, "invoc": [85, 166], "set_metric_nam": 85, "referenc": 85, "panda": [85, 173], "df": [85, 144, 155, 173], "multi_index": 85, "isinst": [85, 106, 177], "plot_pareto_front": [85, 170, 174], "exit": 85, "immedi": 85, "spawn": 85, "skip_if_finish": 85, "gradient": [85, 178], "descent": [85, 178], "128": [85, 104, 118, 144, 155, 167, 174], "break": [85, 99, 181], "gy": [85, 144, 155], "final": [85, 169], "succe": 85, "told": [85, 176], "short": 85, "datetime_start": [85, 87, 103, 104, 166, 173], "datetime_complet": [85, 103, 166, 173], "analyz": [85, 154, 166, 170, 182], "histogram": 85, "csv": 85, "multiindex": 85, "column": [85, 119], "hierarch": 85, "natur": [85, 115, 180], "flatten": 85, "params_x": [85, 173], "pd": 85, "implicitli": 85, "not_set": 86, "aggreg": 87, "get_all_study_summari": [87, 175], "datetim": [87, 103, 104, 166, 173], "ran": 87, "statist": [96, 99, 100, 101, 138], "come": 96, "varianc": [96, 118, 124], "moment": [96, 127], "study_direct": 96, "gp": [97, 168], "top_trials_ratio": 97, "min_n_trial": [97, 99, 151, 162], "min_lcb_n_additional_sampl": 97, "2000": [97, 129], "regret": 97, "confid": 97, "optimum": [97, 143, 154], "empir": [97, 143, 154, 170], "assumpt": 97, "basegaussianprocess": 97, "ratio": [97, 124], "constant": [98, 124], "improvement_evalu": [99, 100, 151, 162], "error_evalu": [99, 100, 151, 162], "aim": [99, 178, 181], "unnecessari": 99, "room": [99, 100, 115, 138], "makarova": 99, "et": [99, 168], "al": [99, 168], "baseimprovementevalu": [99, 151, 162], "regretboundevalu": [99, 151, 162], "baseerrorevalu": [99, 151, 162], "crossvalidationerrorevalu": [99, 151, 162], "load_win": [99, 100, 151, 162], "cross_val_scor": [99, 100, 151, 162, 175], "report_cross_validation_scor": [99, 100, 151, 162], "min_samples_split": [99, 100], "criterion": [99, 100], "gini": [99, 100], "n_split": [99, 100, 151, 162], "should_termin": 99, "terminationcallback": 99, "basetermin": 100, "50": [100, 104, 116, 119, 120, 148, 152, 159, 163, 176, 178, 180], "judgement": 101, "pre": [102, 122, 181], "contrast": 102, "deploi": [102, 103], "mutabl": 103, "despit": 103, "overwritten": 103, "best_trial_copi": 103, "length": [103, 106], "timedelta": 103, "last_step": [103, 178], "simpli": [103, 104, 170], "regardless": 103, "combin": [103, 109, 113, 116, 126, 127, 128, 129, 130, 131, 132, 133], "manag": [104, 139, 166, 170], "seamlessli": 104, "henc": 104, "float32": 104, "convers": 104, "neural_network": 104, "mlpclassifi": 104, "batchsiz": [104, 174], "momentum": 104, "hidden_layer_s": 104, "batch_siz": [104, 174, 181], "solver": [104, 181], "meaning": 104, "similarli": 104, "exact": 104, "poli": 104, "rbf": 104, "flexibl": [104, 176, 181], "dot": 104, "round": 104, "learning_rate_init": 104, "power_t": 104, "n_estim": 104, "400": 104, "ge": 104, "divid": 104, "grid": [104, 116, 168], "width": [104, 177], "uniformli": [104, 115, 119, 126, 129, 166], "nearest": 104, "tend": 104, "unfinish": 105, "uncaught": 105, "meandecreaseimpurityimportanceevalu": 107, "pai": 107, "attent": 107, "framework": [109, 168], "serv": 109, "compliant": 109, "mlflowcallback": [109, 179], "optunasearchcv": 109, "aka": 110, "primarili": 111, "alias": 111, "lifecycl": 111, "character": 112, "child": [112, 120, 126, 128, 129, 130, 132, 133, 136], "explain": [112, 133, 181], "concept": 112, "correl": [113, 177], "belong": [113, 177], "don": [113, 166, 176, 177], "figur": [113, 142, 149, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "depict": 113, "brute": 114, "forc": 114, "exhaust": 114, "elif": 114, "entir": [114, 166, 168], "randomli": [114, 116, 122], "restart_strategi": 115, "popsiz": 115, "inc_pops": 115, "use_separable_cma": 115, "with_margin": 115, "source_tri": 115, "cmae": 115, "multivari": [115, 124, 130, 133], "hansen": 115, "evolut": 115, "1604": 115, "00772": 115, "2016": 115, "auger": 115, "restart": 115, "proceed": [115, 130, 131], "ieee": 115, "congress": [115, 130], "evolutionari": [115, 119, 130], "cec": 115, "2005": 115, "1769": 115, "1776": 115, "press": 115, "bi": 115, "bbob": 115, "2009": 115, "testb": 115, "gecco": [115, 132], "workshop": 115, "raymond": 115, "ro": 115, "nikolau": 115, "complex": [115, 128, 133, 178], "10th": 115, "confer": [115, 131], "sep": 115, "2008": 115, "dortmund": 115, "germani": 115, "inria": 115, "00287367": 115, "masahiro": 115, "nomura": 115, "shuhei": 115, "watanab": 115, "youhei": 115, "akimoto": 115, "yoshihiko": 115, "masaki": 115, "onishi": 115, "warm": 115, "aaai": 115, "hamano": 115, "saito": 115, "m": [115, 122, 133], "shirakawa": 115, "margin": 115, "mix": 115, "black": 115, "box": [115, 119, 180], "converg": 115, "ipop": 115, "bipop": 115, "covari": 115, "matrix": 115, "diagon": 115, "consequ": 115, "outperform": [115, 124, 168], "separ": 115, "transfer": 115, "knowledg": 115, "hpo": 115, "promis": [115, 178], "prohibit": 115, "togeth": [115, 151, 162], "99": [116, 180], "quantiz": 116, "snippet": [116, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163], "total": [116, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184], "consider_prior": [118, 124], "prior_weight": [118, 124], "consider_magic_clip": [118, 124], "consider_endpoint": [118, 124], "n_ehvi_candid": 118, "24": [118, 124, 169, 180], "default_gamma": [118, 124], "weights_abov": 118, "_default_weights_abov": 118, "motp": [118, 124], "multiobject": [118, 120, 124], "structur": [118, 124, 168], "parzen": [118, 124, 168], "enhanc": [118, 124], "stabil": [118, 124], "impos": [118, 124], "effect": [118, 124], "smallest": [118, 124], "densiti": [118, 119, 124], "grain": [118, 124], "latin": 118, "hypercub": 118, "num_vari": 118, "hyperopt_paramet": [118, 124], "hyperopt": [118, 124], "population_s": [119, 120], "mutation_prob": [119, 120], "crossov": [119, 120, 126, 127, 128, 129, 130, 131, 132, 133, 134], "crossover_prob": [119, 120], "swapping_prob": [119, 120, 131], "reference_point": 119, "dividing_paramet": 119, "nsga": [119, 120], "iii": 119, "stand": [119, 120], "nondomin": [119, 120, 168], "genet": [119, 120, 126, 130, 131, 132, 168], "ii": [119, 120, 168], "surviv": 119, "borderlin": 119, "go": [119, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "spars": 119, "closest": 119, "spread": 119, "diversifi": 119, "reflect": 119, "priorit": 119, "around": 119, "axi": [119, 143, 145, 146, 147, 148, 150, 154, 156, 157, 158, 159, 161], "basecrossov": [119, 120], "known": [120, 122], "elitist": 120, "n_parent": [120, 127], "undxcrossov": 120, "spxcrossov": 120, "parent_tri": 120, "parent": [120, 126, 127, 128, 129, 130, 131, 132], "readthedoc": 120, "nsgaii": [120, 133], "uniformcrossov": 120, "unless": 120, "swap": [120, 131], "said": 120, "infeas": [120, 148, 159], "overal": 120, "fixed_param": 121, "base_sampl": 121, "partial_sampl": 121, "unfix": 121, "qmc_type": 122, "sobol": 122, "scrambl": 122, "warn_asynchronous_seed": 122, "mont": [122, 168], "carlo": [122, 168], "discrep": 122, "qmc": 122, "bergstra": 122, "jame": 122, "yoshua": 122, "bengio": 122, "hyper": [122, 124, 126], "research": 122, "2012": 122, "stat": 122, "mention": 122, "afterward": 122, "halton": 122, "degrad": 122, "n_ei_candid": 124, "default_weight": 124, "constant_liar": [124, 133], "mixtur": 124, "gmm": 124, "l": [124, 126], "scienc": 124, "vision": 124, "bad": 124, "contribut": 124, "propos": 124, "bohb": 124, "robust": [124, 178], "decompos": 124, "past": 124, "joint": 124, "subspac": 124, "partit": 124, "whole": [124, 182], "becom": 124, "z": [124, 147, 158], "nearbi": 124, "abnorm": 124, "leav": [124, 180], "Such": 124, "zombi": 124, "liar": 124, "costli": 124, "signific": 124, "blend": 126, "rectangl": 126, "blx": 126, "eshelman": 126, "d": [126, 133, 168], "schaffer": 126, "real": [126, 129, 130, 132, 166], "schemata": 126, "foga": 126, "1992": 126, "parametr": [126, 130], "parents_param": [126, 127, 128, 129, 130, 131, 132], "rng": [126, 127, 128, 129, 130, 131, 132], "search_space_bound": [126, 127, 128, 129, 130, 131, 132], "num_par": [126, 127, 128, 129, 130, 131, 132], "num_paramet": [126, 127, 128, 129, 130, 131, 132], "len_search_spac": [126, 127, 128, 129, 130, 131, 132], "dimension": [126, 127, 128, 129, 130, 131, 132, 146, 157, 159, 168, 170], "simul": [128, 132, 177], "polynomi": 128, "deb": 128, "agraw": 128, "syst": 128, "1995": 128, "pag": 128, "small": [128, 132], "distant": [128, 132], "children": [128, 132], "epsilon": 129, "simplex": 129, "spx": 129, "shigeyoshi": 129, "tsutsui": 129, "david": 129, "goldberg": 129, "kumara": 129, "sastri": 129, "linkag": 129, "ga": 129, "illig": 129, "expans": 129, "sqrt": [129, 130, 143, 154], "sigma_xi": 130, "sigma_eta": 130, "unimod": 130, "h": 130, "kita": 130, "ono": 130, "kobayashi": 130, "1999": 130, "cec99": 130, "cat": 130, "99th8406": 130, "pp": [130, 168], "1581": 130, "1588": 130, "vol": [130, 168], "xi": 130, "drawn": 130, "gilbert": 131, "syswerda": 131, "1989": 131, "3rd": 131, "morgan": 131, "kaufmann": 131, "san": 131, "francisco": 131, "ca": 131, "usa": 131, "vsbx": 132, "maintain": 132, "excel": 132, "sbx": 132, "pedro": 132, "ballest": 132, "jonathan": 132, "carter": 132, "modal": 132, "706": 132, "717": 132, "overview": [133, 168], "gridsampl": [133, 168], "qmcsampler": [133, 168], "bruteforcesampl": 133, "color": [133, 142, 148, 149, 151, 153, 159, 160, 162], "green": 133, "checkmark": 133, "blacktriangl": 133, "red": 133, "infinit": 133, "dn": 133, "mp": 133, "10000": 133, "ineffici": 133, "regular": 133, "wish": 136, "public": 137, "accompani": 138, "plotli": [140, 142, 149, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 170], "isn": [140, 141, 142, 146, 153, 157], "target_nam": [142, 143, 145, 146, 147, 148, 149, 150, 153, 154, 156, 157, 158, 159, 160, 161, 170, 174], "contour": [142, 153], "miss": [142, 146, 149, 153, 157, 160, 161], "displai": [142, 143, 145, 146, 147, 148, 149, 150, 153, 154, 156, 157, 158, 159, 160, 161], "colormap": [142, 146, 153, 157], "revers": [142, 146, 153, 157], "edf": [143, 154], "legend": [143, 144, 145, 146, 156, 157], "adjust": [143, 144, 145], "math": [143, 154], "acklei": [143, 154], "co": [143, 154], "pi": [143, 154], "widest": [143, 154], "study0": [143, 154], "500": [143, 154], "narrow": [143, 154, 168], "study1": [143, 154], "narrowest": [143, 154], "study2": [143, 154], "compar": [143, 145, 154, 156, 178], "error_bar": [145, 156], "tight_layout": 145, "yourself": 145, "image_nam": 145, "bbox_inch": 145, "tight": 145, "include_dominated_tri": [148, 159], "axis_ord": [148, 159], "titl": [148, 159], "objective_index": [148, 159], "categori": [148, 159], "slice": [150, 161, 170], "plot_error": [151, 162], "lgbmclassifi": [151, 162], "reg_alpha": [151, 162], "reg_lambda": [151, 162], "256": [151, 162], "colsample_bytre": [151, 162], "subsample_freq": [151, 162], "graph": [151, 162, 170], "lighter": [151, 162], "timelin": [152, 163], "sleep": [152, 163], "fig": [153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163], "graph_obj": [153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163], "practic": 154, "scalabl": 159, "overlap": 163, "jupyterlab": 164, "render": 164, "analysi": [164, 171, 172, 185], "download": [166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183], "quickli": 166, "move": 166, "convention": 166, "repeatedli": 166, "upon": 166, "found_x": 166, "0006488278603207": 166, "209775923283664e": 166, "clarifi": 166, "terminologi": 166, "outcom": 166, "83": [166, 180], "2023": [166, 173], "39": [166, 169, 173, 180], "356790": 166, "362183": 166, "55": [166, 180], "47820845741097": 166, "978102": 166, "978657": 166, "44836951670706": 166, "76": [166, 180], "21156329298796": 166, "978951": 166, "979209": 166, "729923441416195": 166, "200": [166, 169], "073": [166, 172], "001_first": [166, 172], "jupyt": [166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183], "ipynb": [166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "galleri": [166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185], "sphinx": [166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185], "logarithm": 167, "momentumsgd": 167, "num_lay": 167, "num_channel": 167, "512": 167, "num_unit": 167, "dropout_r": 167, "drop_path_r": 167, "classifier_nam": 167, "classifier_obj": 167, "nn": [167, 174], "create_model": 167, "in_siz": 167, "n_layer": [167, 174], "layer": [167, 174], "n_unit": 167, "n_units_l": [167, 174], "relu": [167, 174], "difficulti": 167, "roughli": 167, "That": 167, "unimport": 167, "001": [167, 172, 178], "002_configur": [167, 172], "down": 168, "lead": 168, "explan": [168, 176], "partialfixedsampl": 168, "__class__": 168, "__name__": [168, 169, 176], "stage": 168, "nopprun": 168, "patientprun": 168, "percentileprun": [168, 178], "thresholdprun": [168, 178], "meet": 168, "predefin": 168, "major": 168, "usecas": 168, "iri": [168, 175, 178], "valid_x": [168, 170, 180], "train_i": [168, 170, 180], "valid_i": [168, 170, 180], "test_siz": [168, 170, 178, 180], "stream": [168, 173, 179, 180], "stdout": [168, 173, 179, 180], "get_logg": [168, 173, 179, 180], "streamhandl": [168, 173, 179, 180], "ec518e4d": 168, "832d": 168, "4422": 168, "9162": 168, "0714c50c472c": 168, "052631578947368474": 168, "0005984325850997574": 168, "13157894736842102": 168, "004275062911061229": 168, "23684210526315785": 168, "0129496008854252e": 168, "3421052631578947": 168, "871942447138207e": 168, "07894736842105265": 168, "011617948726911144": 168, "09466702584731657": 168, "14": [168, 178, 180], "26315789473684215": 168, "00045293558295408915": 168, "18": [168, 174, 180, 184], "19": [168, 178, 180], "wiki": 168, "kurobako": 168, "sai": 168, "consult": 168, "ieic": 168, "tran": 168, "j103": 168, "615": 168, "631": 168, "japanes": 168, "ei": 168, "suffici": 168, "xgboostpruningcallback": 168, "introduc": [168, 181], "pruning_callback": [168, 170, 180], "bst": 168, "xgb": 168, "dtrain": [168, 170, 180], "eval": [168, 174], "dvalid": [168, 170, 180], "734": [168, 172], "003_efficient_optimization_algorithm": [168, 172], "straightforward": 169, "cours": 169, "kubernet": 169, "43": [169, 180], "642": 169, "Then": [169, 177, 180, 181], "__main__": [169, 176], "973": 169, "35553104173011": 169, "73465151598285": 169, "04": 169, "013": 169, "6002397305938905": 169, "144816945707463": 169, "028194513284051464": 169, "03": 169, "748": 169, "8320877810162361": 169, "783": 169, "45966755098074": 169, "945671597566982": 169, "deadlock": 169, "seriou": 169, "put": 169, "q5": 169, "004_distribut": [169, 172], "walk": [170, 180], "breast": 170, "dashboard": [170, 185], "interact": [170, 176], "plot_contour": 170, "plot_edf": 170, "plot_intermediate_valu": 170, "plot_optimization_histori": 170, "plot_parallel_coordin": 170, "plot_slic": 170, "42": [170, 180], "load_breast_canc": [170, 180], "boosting_typ": [170, 180], "gbdt": [170, 180], "lightgbmpruningcallback": [170, 180], "gbm": [170, 180], "pred": [170, 174, 180, 182], "pred_label": [170, 180], "rint": [170, 180], "curv": 170, "006": [170, 172, 179, 184], "005_visual": [170, 172], "showcas": [171, 174, 179, 183, 185], "10_key_features_python": 171, "10_key_features_jupyt": 171, "813": 172, "tutorial_10_key_featur": 172, "mb": [172, 184], "01": [172, 174, 181], "storage_nam": 173, "608900093202518": 173, "0605236975240535": 173, "663358549088457": 173, "265479834432982": 173, "352768342087726": 173, "21757180838093": 173, "393818970197557": 173, "923495758911631": 173, "58": [173, 174, 178, 180], "00075644755074": 173, "615822768916747": 173, "7848150067773392": 173, "335969687821299": 173, "restored_sampl": 173, "608900": 173, "060524": 173, "663359": 173, "265480": 173, "352768": 173, "217572": 173, "393819": 173, "923496": 173, "000756": 173, "615823": 173, "784815": 173, "335970": 173, "342867": 173, "363400": 173, "52438": 173, "94211": 173, "119031": 173, "140828": 173, "159485": 173, "181000": 173, "247528": 173, "278690": 173, "301096": 173, "322334": 173, "692": [173, 184], "001_rdb": [173, 184], "fashion": 174, "mnist": [174, 175], "flop": 174, "fvcore": 174, "measur": 174, "torchvis": 174, "flopcountanalysi": 174, "is_avail": 174, "n_train_exampl": 174, "n_valid_exampl": 174, "define_model": 174, "in_featur": 174, "28": [174, 178, 180], "out_featur": 174, "dropout_": 174, "dropout": 174, "logsoftmax": 174, "dim": 174, "train_model": 174, "train_load": 174, "batch_idx": 174, "view": 174, "zero_grad": 174, "nll_loss": 174, "eval_model": 174, "valid_load": 174, "no_grad": 174, "argmax": 174, "keepdim": 174, "eq": 174, "view_a": 174, "randn": 174, "train_dataset": 174, "fashionmnist": 174, "totensor": 174, "dataload": 174, "val_dataset": 174, "val_load": 174, "300": 174, "s3": 174, "eu": 174, "central": 174, "amazonaw": 174, "imag": 174, "idx3": 174, "ubyt": 174, "gz": 174, "raw": 174, "26421880": 174, "65536": 174, "367512": 174, "33it": 174, "229376": 174, "37": [174, 178, 180], "690638": 174, "03it": 174, "884736": 174, "2502991": 174, "30it": 174, "1933312": 174, "4181290": 174, "08it": 174, "6586368": 174, "15326670": 174, "88it": 174, "9961472": 174, "17424659": 174, "54it": 174, "15302656": 174, "26445705": 174, "95it": 174, "73": [174, 180], "19234816": 174, "29843980": 174, "78it": 174, "85": [174, 180], "22577152": 174, "26457345": 174, "14it": 174, "19578835": 174, "44it": 174, "idx1": 174, "29515": 174, "337931": 174, "77it": 174, "t10k": 174, "4422102": 174, "372049": 174, "40it": 174, "196608": 174, "782484": 174, "17it": 174, "491520": 174, "1312574": 174, "48it": 174, "1638400": 174, "4399586": 174, "65it": 174, "79": [174, 180], "3506176": 174, "7332024": 174, "76it": 174, "6184329": 174, "85it": 174, "5148": 174, "30934494": 174, "26it": 174, "aten": 174, "log_softmax": 174, "encount": 174, "pick": 174, "highest": 174, "trial_with_highest_accuraci": 174, "tnumber": 174, "tparam": 174, "tvalu": 174, "n_units_l0": 174, "125": 174, "dropout_0": 174, "24854397817790025": 174, "002107453516497342": 174, "99250": 174, "84140625": 174, "996": [174, 184], "002_multi_object": [174, 184], "annot": 175, "9400000000000001": 175, "270": [175, 184], "003_attribut": [175, 184], "ipython": 176, "shell": 176, "fine": 176, "00047193271147209255": 176, "0217240123244324": 176, "drug": 176, "lab": 176, "null": 176, "08": 176, "06": 176, "53": [176, 180], "158": 176, "512238141966016": 176, "distribution_to_json": 176, "conduct": 176, "22": [176, 180], "888": 176, "478": [176, 184], "004_cli": [176, 184], "refin": 177, "skoptsampl": 177, "respons": 177, "anneal": 177, "sa": 177, "temperatur": 177, "_rng": 177, "_temperatur": 177, "_current_tri": 177, "transit": 177, "prev_trial": 177, "neighborhood": 177, "msg": 177, "notimplementederror": 177, "current_valu": 177, "neighbor_low": 177, "neighbor_high": 177, "rest": 177, "unrel": 177, "boilerpl": 177, "favor": [177, 178], "simplic": 177, "simulated_ann": 177, "095109508437943": 177, "2782542604954994": 177, "1725349419218403": 177, "speak": 177, "338": [177, 184], "005_user_defined_sampl": [177, 184], "illustr": 178, "aggress": 178, "stochast": 178, "demonstr": [178, 182], "diagnost": 178, "holdout": 178, "enough": [178, 181], "had": 178, "_state": 178, "warmup_step": 178, "warmup_tri": 178, "_warmup_step": 178, "_warmup_tri": 178, "yet": [178, 180], "this_scor": 178, "completed_tri": 178, "other_scor": 178, "lastli": 178, "confirm": 178, "train_siz": 178, "hing": 178, "log_loss": 178, "perceptron": 178, "00001": 178, "72": [178, 180], "62": [178, 180], "56": [178, 180], "26": [178, 180], "68": [178, 180], "29": [178, 180, 184], "33": [178, 180], "48": [178, 180], "34": [178, 180], "40": [178, 180], "47": [178, 180], "835": [178, 184], "006_user_defined_prun": [178, 184], "great": 179, "stopwhentrialkeepbeingprunedcallback": 179, "_consequtive_pruned_count": 179, "study_stop_cb": 179, "4626b173": 179, "5783": 179, "4800": 179, "9652": 179, "3816f014aad": 179, "07677468706004276": 179, "3275580456103028": 179, "6493020876343165": 179, "0026803988422470226": 179, "32680876837195993": 179, "007_optuna_callback": [179, 184], "ve": 180, "lit": 180, "bagging_fraq": 180, "75": 180, "expectedli": 180, "972027972027972": 180, "986013986013986": 180, "9790209790209791": 180, "49855626184356305": 180, "965034965034965": 180, "74468794904759": 180, "70": 180, "958041958041958": 180, "7967100590676713": 180, "5609569461640462": 180, "610451769039265": 180, "27": 180, "5828299199626832": 180, "8666202824033372": 180, "44": 180, "46": 180, "49": 180, "51": 180, "52": 180, "8103474104358913": 180, "57": 180, "61": 180, "63": 180, "993006993006993": 180, "8747186945742316": 180, "5559568024748008": 180, "65": 180, "66": 180, "67": 180, "69": 180, "71": 180, "51271312946274": 180, "5284002018170413": 180, "74": 180, "77": 180, "78": 180, "80": 180, "81": 180, "82": 180, "84": 180, "86": 180, "87": 180, "88": 180, "89": 180, "91": 180, "92": [180, 182], "93": 180, "94": 180, "95": 180, "96": 180, "97": 180, "98": 180, "think": 180, "dcd3c0b7": 180, "832b": 180, "40a8": 180, "b13d": 180, "f7a515f697b5": 180, "5025031869600282": 180, "5285552020448836": 180, "5094871377256629": 180, "7176069050345205": 180, "8445466396761335": 180, "46379524721464155": 180, "48607506291191777": 180, "101": 180, "554": [180, 184], "008_specify_param": [180, 184], "benefici": 181, "tradit": 181, "supervis": [181, 182], "classif": [181, 182], "logisticregress": [181, 182], "make_classif": [181, 182], "n_featur": [181, 182], "x_test": [181, 182], "y_test": [181, 182], "val_accuraci": 181, "naiv": 181, "suggest_": 181, "lbfg": 181, "saga": 181, "pruned_tri": 181, "rather": 181, "paralleliz": 181, "batched_object": 181, "x_batch": 181, "y_batch": 181, "137": [181, 184], "009_ask_and_tel": [181, 184], "classic": 182, "recal": 182, "precis": 182, "f1": 182, "detailed_object": 182, "acc": 182, "recall_scor": 182, "precision_scor": 182, "f1_score": 182, "9285714285714286": 182, "activ": 182, "052": [182, 184], "010_reuse_best_tri": [182, 184], "comfort": [183, 185], "20_recipes_python": 183, "20_recipes_jupyt": 183, "357": 184, "tutorial_20_recip": 184, "introduct": 185, "human": 185}, "objects": {"": [[111, 0, 0, "-", "optuna"]], "optuna": [[8, 1, 1, "", "TrialPruned"], [5, 0, 0, "-", "cli"], [9, 2, 1, "", "copy_study"], [10, 2, 1, "", "create_study"], [11, 2, 1, "", "delete_study"], [6, 0, 0, "-", "distributions"], [7, 0, 0, "-", "exceptions"], [28, 2, 1, "", "get_all_study_summaries"], [107, 0, 0, "-", "importance"], [109, 0, 0, "-", "integration"], [59, 2, 1, "", "load_study"], [110, 0, 0, "-", "logging"], [112, 0, 0, "-", "pruners"], [133, 0, 0, "-", "samplers"], [135, 0, 0, "-", "search_space"], [136, 0, 0, "-", "storages"], [137, 0, 0, "-", "study"], [138, 0, 0, "-", "terminator"], [139, 0, 0, "-", "trial"], [164, 0, 0, "-", "visualization"]], "optuna.distributions": [[12, 3, 1, "", "CategoricalDistribution"], [13, 3, 1, "", "DiscreteUniformDistribution"], [14, 3, 1, "", "FloatDistribution"], [15, 3, 1, "", "IntDistribution"], [16, 3, 1, "", "IntLogUniformDistribution"], [17, 3, 1, "", "IntUniformDistribution"], [18, 3, 1, "", "LogUniformDistribution"], [19, 3, 1, "", "UniformDistribution"], [20, 2, 1, "", "check_distribution_compatibility"], [21, 2, 1, "", "distribution_to_json"], [22, 2, 1, "", "json_to_distribution"]], "optuna.distributions.CategoricalDistribution": [[12, 4, 1, "", "choices"], [12, 5, 1, "", "single"], [12, 5, 1, "", "to_external_repr"], [12, 5, 1, "", "to_internal_repr"]], "optuna.distributions.DiscreteUniformDistribution": [[13, 4, 1, "", "high"], [13, 4, 1, "", "low"], [13, 6, 1, "", "q"], [13, 5, 1, "", "single"], [13, 5, 1, "", "to_external_repr"], [13, 5, 1, "", "to_internal_repr"]], "optuna.distributions.FloatDistribution": [[14, 4, 1, "", "high"], [14, 4, 1, "", "log"], [14, 4, 1, "", "low"], [14, 5, 1, "", "single"], [14, 4, 1, "", "step"], [14, 5, 1, "", "to_external_repr"], [14, 5, 1, "", "to_internal_repr"]], "optuna.distributions.IntDistribution": [[15, 4, 1, "", "high"], [15, 4, 1, "", "log"], [15, 4, 1, "", "low"], [15, 5, 1, "", "single"], [15, 4, 1, "", "step"], [15, 5, 1, "", "to_external_repr"], [15, 5, 1, "", "to_internal_repr"]], "optuna.distributions.IntLogUniformDistribution": [[16, 4, 1, "", "high"], [16, 4, 1, "", "low"], [16, 5, 1, "", "single"], [16, 4, 1, "", "step"], [16, 5, 1, "", "to_external_repr"], [16, 5, 1, "", "to_internal_repr"]], "optuna.distributions.IntUniformDistribution": [[17, 4, 1, "", "high"], [17, 4, 1, "", "low"], [17, 5, 1, "", "single"], [17, 4, 1, "", "step"], [17, 5, 1, "", "to_external_repr"], [17, 5, 1, "", "to_internal_repr"]], "optuna.distributions.LogUniformDistribution": [[18, 4, 1, "", "high"], [18, 4, 1, "", "low"], [18, 5, 1, "", "single"], [18, 5, 1, "", "to_external_repr"], [18, 5, 1, "", "to_internal_repr"]], "optuna.distributions.UniformDistribution": [[19, 4, 1, "", "high"], [19, 4, 1, "", "low"], [19, 5, 1, "", "single"], [19, 5, 1, "", "to_external_repr"], [19, 5, 1, "", "to_internal_repr"]], "optuna.exceptions": [[23, 1, 1, "", "CLIUsageError"], [24, 1, 1, "", "DuplicatedStudyError"], [25, 1, 1, "", "OptunaError"], [26, 1, 1, "", "StorageInternalError"], [27, 1, 1, "", "TrialPruned"]], "optuna.importance": [[29, 3, 1, "", "FanovaImportanceEvaluator"], [30, 3, 1, "", "MeanDecreaseImpurityImportanceEvaluator"], [31, 2, 1, "", "get_param_importances"]], "optuna.importance.FanovaImportanceEvaluator": [[29, 5, 1, "", "evaluate"]], "optuna.importance.MeanDecreaseImpurityImportanceEvaluator": [[30, 5, 1, "", "evaluate"]], "optuna.integration": [[32, 3, 1, "", "BoTorchSampler"], [33, 3, 1, "", "CatBoostPruningCallback"], [34, 3, 1, "", "CmaEsSampler"], [35, 3, 1, "", "DaskStorage"], [36, 4, 1, "", "FastAIPruningCallback"], [37, 3, 1, "", "FastAIV1PruningCallback"], [38, 3, 1, "", "FastAIV2PruningCallback"], [39, 3, 1, "", "LightGBMPruningCallback"], [40, 3, 1, "", "MLflowCallback"], [41, 3, 1, "", "MXNetPruningCallback"], [42, 3, 1, "", "OptunaSearchCV"], [43, 3, 1, "", "PyCmaSampler"], [44, 3, 1, "", "PyTorchIgnitePruningHandler"], [45, 3, 1, "", "PyTorchLightningPruningCallback"], [46, 3, 1, "", "ShapleyImportanceEvaluator"], [47, 3, 1, "", "SkoptSampler"], [48, 3, 1, "", "TensorBoardCallback"], [49, 3, 1, "", "TorchDistributedTrial"], [50, 3, 1, "", "WeightsAndBiasesCallback"], [51, 3, 1, "", "XGBoostPruningCallback"]], "optuna.integration.BoTorchSampler": [[32, 5, 1, "", "after_trial"], [32, 5, 1, "", "infer_relative_search_space"], [32, 5, 1, "", "reseed_rng"], [32, 5, 1, "", "sample_independent"], [32, 5, 1, "", "sample_relative"]], "optuna.integration.CatBoostPruningCallback": [[33, 5, 1, "", "after_iteration"], [33, 5, 1, "", "check_pruned"]], "optuna.integration.CmaEsSampler": [[34, 5, 1, "", "after_trial"], [34, 5, 1, "", "infer_relative_search_space"], [34, 5, 1, "", "reseed_rng"], [34, 5, 1, "", "sample_independent"], [34, 5, 1, "", "sample_relative"]], "optuna.integration.DaskStorage": [[35, 5, 1, "", "check_trial_is_updatable"], [35, 5, 1, "", "create_new_study"], [35, 5, 1, "", "create_new_trial"], [35, 5, 1, "", "delete_study"], [35, 5, 1, "", "get_all_studies"], [35, 5, 1, "", "get_all_trials"], [35, 5, 1, "", "get_base_storage"], [35, 5, 1, "", "get_best_trial"], [35, 5, 1, "", "get_n_trials"], [35, 5, 1, "", "get_study_directions"], [35, 5, 1, "", "get_study_id_from_name"], [35, 5, 1, "", "get_study_name_from_id"], [35, 5, 1, "", "get_study_system_attrs"], [35, 5, 1, "", "get_study_user_attrs"], [35, 5, 1, "", "get_trial"], [35, 5, 1, "", "get_trial_id_from_study_id_trial_number"], [35, 5, 1, "", "get_trial_number_from_id"], [35, 5, 1, "", "get_trial_param"], [35, 5, 1, "", "get_trial_params"], [35, 5, 1, "", "get_trial_system_attrs"], [35, 5, 1, "", "get_trial_user_attrs"], [35, 5, 1, "", "remove_session"], [35, 5, 1, "", "set_study_system_attr"], [35, 5, 1, "", "set_study_user_attr"], [35, 5, 1, "", "set_trial_intermediate_value"], [35, 5, 1, "", "set_trial_param"], [35, 5, 1, "", "set_trial_state_values"], [35, 5, 1, "", "set_trial_system_attr"], [35, 5, 1, "", "set_trial_user_attr"]], "optuna.integration.MLflowCallback": [[40, 5, 1, "", "track_in_mlflow"]], "optuna.integration.OptunaSearchCV": [[42, 4, 1, "", "best_estimator_"], [42, 6, 1, "", "best_index_"], [42, 6, 1, "", "best_params_"], [42, 6, 1, "", "best_score_"], [42, 6, 1, "", "best_trial_"], [42, 6, 1, "", "classes_"], [42, 6, 1, "", "decision_function"], [42, 5, 1, "", "fit"], [42, 5, 1, "", "get_params"], [42, 6, 1, "", "inverse_transform"], [42, 4, 1, "", "n_splits_"], [42, 6, 1, "", "n_trials_"], [42, 6, 1, "", "predict"], [42, 6, 1, "", "predict_log_proba"], [42, 6, 1, "", "predict_proba"], [42, 4, 1, "", "refit_time_"], [42, 4, 1, "", "sample_indices_"], [42, 5, 1, "", "score"], [42, 6, 1, "", "score_samples"], [42, 4, 1, "", "scorer_"], [42, 5, 1, "", "set_params"], [42, 6, 1, "", "set_user_attr"], [42, 4, 1, "", "study_"], [42, 6, 1, "", "transform"], [42, 6, 1, "", "trials_"], [42, 6, 1, "", "trials_dataframe"], [42, 6, 1, "", "user_attrs_"]], "optuna.integration.PyCmaSampler": [[43, 5, 1, "", "after_trial"], [43, 5, 1, "", "infer_relative_search_space"], [43, 5, 1, "", "reseed_rng"], [43, 5, 1, "", "sample_independent"], [43, 5, 1, "", "sample_relative"]], "optuna.integration.PyTorchLightningPruningCallback": [[45, 5, 1, "", "check_pruned"]], "optuna.integration.ShapleyImportanceEvaluator": [[46, 5, 1, "", "evaluate"]], "optuna.integration.SkoptSampler": [[47, 5, 1, "", "after_trial"], [47, 5, 1, "", "infer_relative_search_space"], [47, 5, 1, "", "reseed_rng"], [47, 5, 1, "", "sample_independent"], [47, 5, 1, "", "sample_relative"]], "optuna.integration.TorchDistributedTrial": [[49, 5, 1, "", "set_system_attr"], [49, 5, 1, "", "suggest_discrete_uniform"], [49, 5, 1, "", "suggest_loguniform"], [49, 5, 1, "", "suggest_uniform"], [49, 6, 1, "", "system_attrs"]], "optuna.integration.WeightsAndBiasesCallback": [[50, 5, 1, "", "track_in_wandb"]], "optuna.integration.botorch": [[52, 2, 1, "", "qehvi_candidates_func"], [53, 2, 1, "", "qei_candidates_func"], [54, 2, 1, "", "qnehvi_candidates_func"], [55, 2, 1, "", "qparego_candidates_func"]], "optuna.integration.lightgbm": [[56, 3, 1, "", "LightGBMTuner"], [57, 3, 1, "", "LightGBMTunerCV"], [58, 2, 1, "", "train"]], "optuna.integration.lightgbm.LightGBMTuner": [[56, 6, 1, "", "best_params"], [56, 6, 1, "", "best_score"], [56, 5, 1, "", "get_best_booster"], [56, 5, 1, "", "run"], [56, 5, 1, "", "sample_train_set"]], "optuna.integration.lightgbm.LightGBMTunerCV": [[57, 6, 1, "", "best_params"], [57, 6, 1, "", "best_score"], [57, 5, 1, "", "get_best_booster"], [57, 5, 1, "", "run"], [57, 5, 1, "", "sample_train_set"]], "optuna.logging": [[60, 2, 1, "", "disable_default_handler"], [61, 2, 1, "", "disable_propagation"], [62, 2, 1, "", "enable_default_handler"], [63, 2, 1, "", "enable_propagation"], [64, 2, 1, "", "get_verbosity"], [65, 2, 1, "", "set_verbosity"]], "optuna.pruners": [[66, 3, 1, "", "BasePruner"], [67, 3, 1, "", "HyperbandPruner"], [68, 3, 1, "", "MedianPruner"], [69, 3, 1, "", "NopPruner"], [70, 3, 1, "", "PatientPruner"], [71, 3, 1, "", "PercentilePruner"], [72, 3, 1, "", "SuccessiveHalvingPruner"], [73, 3, 1, "", "ThresholdPruner"]], "optuna.pruners.BasePruner": [[66, 5, 1, "", "prune"]], "optuna.pruners.HyperbandPruner": [[67, 5, 1, "", "prune"]], "optuna.pruners.MedianPruner": [[68, 5, 1, "", "prune"]], "optuna.pruners.NopPruner": [[69, 5, 1, "", "prune"]], "optuna.pruners.PatientPruner": [[70, 5, 1, "", "prune"]], "optuna.pruners.PercentilePruner": [[71, 5, 1, "", "prune"]], "optuna.pruners.SuccessiveHalvingPruner": [[72, 5, 1, "", "prune"]], "optuna.pruners.ThresholdPruner": [[73, 5, 1, "", "prune"]], "optuna.samplers": [[113, 3, 1, "", "BaseSampler"], [114, 3, 1, "", "BruteForceSampler"], [115, 3, 1, "", "CmaEsSampler"], [116, 3, 1, "", "GridSampler"], [117, 3, 1, "", "IntersectionSearchSpace"], [118, 3, 1, "", "MOTPESampler"], [119, 3, 1, "", "NSGAIIISampler"], [120, 3, 1, "", "NSGAIISampler"], [121, 3, 1, "", "PartialFixedSampler"], [122, 3, 1, "", "QMCSampler"], [123, 3, 1, "", "RandomSampler"], [124, 3, 1, "", "TPESampler"], [125, 2, 1, "", "intersection_search_space"], [134, 0, 0, "-", "nsgaii"]], "optuna.samplers.BaseSampler": [[113, 5, 1, "", "after_trial"], [113, 5, 1, "", "infer_relative_search_space"], [113, 5, 1, "", "reseed_rng"], [113, 5, 1, "", "sample_independent"], [113, 5, 1, "", "sample_relative"]], "optuna.samplers.BruteForceSampler": [[114, 5, 1, "", "after_trial"], [114, 5, 1, "", "infer_relative_search_space"], [114, 5, 1, "", "reseed_rng"], [114, 5, 1, "", "sample_independent"], [114, 5, 1, "", "sample_relative"]], "optuna.samplers.CmaEsSampler": [[115, 5, 1, "", "after_trial"], [115, 5, 1, "", "infer_relative_search_space"], [115, 5, 1, "", "reseed_rng"], [115, 5, 1, "", "sample_independent"], [115, 5, 1, "", "sample_relative"]], "optuna.samplers.GridSampler": [[116, 5, 1, "", "after_trial"], [116, 5, 1, "", "infer_relative_search_space"], [116, 5, 1, "", "reseed_rng"], [116, 5, 1, "", "sample_independent"], [116, 5, 1, "", "sample_relative"]], "optuna.samplers.IntersectionSearchSpace": [[117, 5, 1, "", "calculate"]], "optuna.samplers.MOTPESampler": [[118, 5, 1, "", "after_trial"], [118, 5, 1, "", "hyperopt_parameters"], [118, 5, 1, "", "infer_relative_search_space"], [118, 5, 1, "", "reseed_rng"], [118, 5, 1, "", "sample_independent"], [118, 5, 1, "", "sample_relative"]], "optuna.samplers.NSGAIIISampler": [[119, 5, 1, "", "after_trial"], [119, 5, 1, "", "infer_relative_search_space"], [119, 5, 1, "", "reseed_rng"], [119, 5, 1, "", "sample_independent"], [119, 5, 1, "", "sample_relative"]], "optuna.samplers.NSGAIISampler": [[120, 5, 1, "", "after_trial"], [120, 5, 1, "", "infer_relative_search_space"], [120, 5, 1, "", "reseed_rng"], [120, 5, 1, "", "sample_independent"], [120, 5, 1, "", "sample_relative"]], "optuna.samplers.PartialFixedSampler": [[121, 5, 1, "", "after_trial"], [121, 5, 1, "", "infer_relative_search_space"], [121, 5, 1, "", "reseed_rng"], [121, 5, 1, "", "sample_independent"], [121, 5, 1, "", "sample_relative"]], "optuna.samplers.QMCSampler": [[122, 5, 1, "", "after_trial"], [122, 5, 1, "", "infer_relative_search_space"], [122, 5, 1, "", "reseed_rng"], [122, 5, 1, "", "sample_independent"], [122, 5, 1, "", "sample_relative"]], "optuna.samplers.RandomSampler": [[123, 5, 1, "", "after_trial"], [123, 5, 1, "", "infer_relative_search_space"], [123, 5, 1, "", "reseed_rng"], [123, 5, 1, "", "sample_independent"], [123, 5, 1, "", "sample_relative"]], "optuna.samplers.TPESampler": [[124, 5, 1, "", "after_trial"], [124, 5, 1, "", "hyperopt_parameters"], [124, 5, 1, "", "infer_relative_search_space"], [124, 5, 1, "", "reseed_rng"], [124, 5, 1, "", "sample_independent"], [124, 5, 1, "", "sample_relative"]], "optuna.samplers.nsgaii": [[126, 3, 1, "", "BLXAlphaCrossover"], [127, 3, 1, "", "BaseCrossover"], [128, 3, 1, "", "SBXCrossover"], [129, 3, 1, "", "SPXCrossover"], [130, 3, 1, "", "UNDXCrossover"], [131, 3, 1, "", "UniformCrossover"], [132, 3, 1, "", "VSBXCrossover"]], "optuna.samplers.nsgaii.BLXAlphaCrossover": [[126, 5, 1, "", "crossover"]], "optuna.samplers.nsgaii.BaseCrossover": [[127, 5, 1, "", "crossover"], [127, 6, 1, "", "n_parents"]], "optuna.samplers.nsgaii.SBXCrossover": [[128, 5, 1, "", "crossover"]], "optuna.samplers.nsgaii.SPXCrossover": [[129, 5, 1, "", "crossover"]], "optuna.samplers.nsgaii.UNDXCrossover": [[130, 5, 1, "", "crossover"]], "optuna.samplers.nsgaii.UniformCrossover": [[131, 5, 1, "", "crossover"]], "optuna.samplers.nsgaii.VSBXCrossover": [[132, 5, 1, "", "crossover"]], "optuna.search_space": [[74, 3, 1, "", "IntersectionSearchSpace"], [75, 2, 1, "", "intersection_search_space"]], "optuna.search_space.IntersectionSearchSpace": [[74, 5, 1, "", "calculate"]], "optuna.storages": [[76, 3, 1, "", "JournalFileOpenLock"], [77, 3, 1, "", "JournalFileStorage"], [78, 3, 1, "", "JournalFileSymlinkLock"], [79, 3, 1, "", "JournalRedisStorage"], [80, 3, 1, "", "JournalStorage"], [81, 3, 1, "", "RDBStorage"], [82, 3, 1, "", "RetryFailedTrialCallback"], [83, 2, 1, "", "fail_stale_trials"]], "optuna.storages.JournalFileOpenLock": [[76, 5, 1, "", "acquire"], [76, 5, 1, "", "release"]], "optuna.storages.JournalFileStorage": [[77, 5, 1, "", "append_logs"], [77, 5, 1, "", "read_logs"]], "optuna.storages.JournalFileSymlinkLock": [[78, 5, 1, "", "acquire"], [78, 5, 1, "", "release"]], "optuna.storages.JournalRedisStorage": [[79, 5, 1, "", "append_logs"], [79, 5, 1, "", "load_snapshot"], [79, 5, 1, "", "read_logs"], [79, 5, 1, "", "save_snapshot"]], "optuna.storages.JournalStorage": [[80, 5, 1, "", "check_trial_is_updatable"], [80, 5, 1, "", "create_new_study"], [80, 5, 1, "", "create_new_trial"], [80, 5, 1, "", "delete_study"], [80, 5, 1, "", "get_all_studies"], [80, 5, 1, "", "get_all_trials"], [80, 5, 1, "", "get_best_trial"], [80, 5, 1, "", "get_n_trials"], [80, 5, 1, "", "get_study_directions"], [80, 5, 1, "", "get_study_id_from_name"], [80, 5, 1, "", "get_study_name_from_id"], [80, 5, 1, "", "get_study_system_attrs"], [80, 5, 1, "", "get_study_user_attrs"], [80, 5, 1, "", "get_trial"], [80, 5, 1, "", "get_trial_id_from_study_id_trial_number"], [80, 5, 1, "", "get_trial_number_from_id"], [80, 5, 1, "", "get_trial_param"], [80, 5, 1, "", "get_trial_params"], [80, 5, 1, "", "get_trial_system_attrs"], [80, 5, 1, "", "get_trial_user_attrs"], [80, 5, 1, "", "remove_session"], [80, 5, 1, "", "set_study_system_attr"], [80, 5, 1, "", "set_study_user_attr"], [80, 5, 1, "", "set_trial_intermediate_value"], [80, 5, 1, "", "set_trial_param"], [80, 5, 1, "", "set_trial_state_values"], [80, 5, 1, "", "set_trial_system_attr"], [80, 5, 1, "", "set_trial_user_attr"]], "optuna.storages.RDBStorage": [[81, 5, 1, "", "check_trial_is_updatable"], [81, 5, 1, "", "create_new_study"], [81, 5, 1, "", "create_new_trial"], [81, 5, 1, "", "delete_study"], [81, 5, 1, "", "get_all_studies"], [81, 5, 1, "", "get_all_trials"], [81, 5, 1, "", "get_all_versions"], [81, 5, 1, "", "get_best_trial"], [81, 5, 1, "", "get_current_version"], [81, 5, 1, "", "get_failed_trial_callback"], [81, 5, 1, "", "get_head_version"], [81, 5, 1, "", "get_heartbeat_interval"], [81, 5, 1, "", "get_n_trials"], [81, 5, 1, "", "get_study_directions"], [81, 5, 1, "", "get_study_id_from_name"], [81, 5, 1, "", "get_study_name_from_id"], [81, 5, 1, "", "get_study_system_attrs"], [81, 5, 1, "", "get_study_user_attrs"], [81, 5, 1, "", "get_trial"], [81, 5, 1, "", "get_trial_id_from_study_id_trial_number"], [81, 5, 1, "", "get_trial_number_from_id"], [81, 5, 1, "", "get_trial_param"], [81, 5, 1, "", "get_trial_params"], [81, 5, 1, "", "get_trial_system_attrs"], [81, 5, 1, "", "get_trial_user_attrs"], [81, 5, 1, "", "record_heartbeat"], [81, 5, 1, "", "remove_session"], [81, 5, 1, "", "set_study_system_attr"], [81, 5, 1, "", "set_study_user_attr"], [81, 5, 1, "", "set_trial_intermediate_value"], [81, 5, 1, "", "set_trial_param"], [81, 5, 1, "", "set_trial_state_values"], [81, 5, 1, "", "set_trial_system_attr"], [81, 5, 1, "", "set_trial_user_attr"], [81, 5, 1, "", "upgrade"]], "optuna.storages.RetryFailedTrialCallback": [[82, 5, 1, "", "retried_trial_number"], [82, 5, 1, "", "retry_history"]], "optuna.study": [[84, 3, 1, "", "MaxTrialsCallback"], [85, 3, 1, "", "Study"], [86, 3, 1, "", "StudyDirection"], [87, 3, 1, "", "StudySummary"], [88, 2, 1, "", "copy_study"], [89, 2, 1, "", "create_study"], [90, 2, 1, "", "delete_study"], [91, 2, 1, "", "get_all_study_summaries"], [92, 2, 1, "", "load_study"]], "optuna.study.Study": [[85, 5, 1, "", "add_trial"], [85, 5, 1, "", "add_trials"], [85, 5, 1, "", "ask"], [85, 6, 1, "", "best_params"], [85, 6, 1, "", "best_trial"], [85, 6, 1, "", "best_trials"], [85, 6, 1, "", "best_value"], [85, 6, 1, "", "direction"], [85, 6, 1, "", "directions"], [85, 5, 1, "", "enqueue_trial"], [85, 5, 1, "", "get_trials"], [85, 5, 1, "", "optimize"], [85, 5, 1, "", "set_metric_names"], [85, 5, 1, "", "set_system_attr"], [85, 5, 1, "", "set_user_attr"], [85, 5, 1, "", "stop"], [85, 6, 1, "", "system_attrs"], [85, 5, 1, "", "tell"], [85, 6, 1, "", "trials"], [85, 5, 1, "", "trials_dataframe"], [85, 6, 1, "", "user_attrs"]], "optuna.study.StudyDirection": [[86, 4, 1, "", "MAXIMIZE"], [86, 4, 1, "", "MINIMIZE"], [86, 4, 1, "", "NOT_SET"]], "optuna.study.StudySummary": [[87, 4, 1, "", "best_trial"], [87, 4, 1, "", "datetime_start"], [87, 4, 1, "", "direction"], [87, 4, 1, "", "directions"], [87, 4, 1, "", "n_trials"], [87, 4, 1, "", "study_name"], [87, 4, 1, "", "system_attrs"], [87, 4, 1, "", "user_attrs"]], "optuna.terminator": [[93, 3, 1, "", "BaseErrorEvaluator"], [94, 3, 1, "", "BaseImprovementEvaluator"], [95, 3, 1, "", "BaseTerminator"], [96, 3, 1, "", "CrossValidationErrorEvaluator"], [97, 3, 1, "", "RegretBoundEvaluator"], [98, 3, 1, "", "StaticErrorEvaluator"], [99, 3, 1, "", "Terminator"], [100, 3, 1, "", "TerminatorCallback"], [101, 2, 1, "", "report_cross_validation_scores"]], "optuna.terminator.CrossValidationErrorEvaluator": [[96, 5, 1, "", "evaluate"]], "optuna.terminator.Terminator": [[99, 5, 1, "", "should_terminate"]], "optuna.trial": [[102, 3, 1, "", "FixedTrial"], [103, 3, 1, "", "FrozenTrial"], [104, 3, 1, "", "Trial"], [105, 3, 1, "", "TrialState"], [106, 2, 1, "", "create_trial"]], "optuna.trial.FixedTrial": [[102, 5, 1, "", "set_system_attr"], [102, 5, 1, "", "suggest_discrete_uniform"], [102, 5, 1, "", "suggest_loguniform"], [102, 5, 1, "", "suggest_uniform"]], "optuna.trial.FrozenTrial": [[103, 4, 1, "", "datetime_complete"], [103, 4, 1, "", "datetime_start"], [103, 4, 1, "", "distributions"], [103, 6, 1, "", "duration"], [103, 4, 1, "", "intermediate_values"], [103, 6, 1, "", "last_step"], [103, 4, 1, "", "number"], [103, 4, 1, "", "params"], [103, 5, 1, "", "report"], [103, 5, 1, "", "set_system_attr"], [103, 5, 1, "", "should_prune"], [103, 4, 1, "", "state"], [103, 5, 1, "", "suggest_discrete_uniform"], [103, 5, 1, "", "suggest_loguniform"], [103, 5, 1, "", "suggest_uniform"], [103, 4, 1, "", "system_attrs"], [103, 4, 1, "", "user_attrs"], [103, 4, 1, "", "value"], [103, 4, 1, "", "values"]], "optuna.trial.Trial": [[104, 6, 1, "", "datetime_start"], [104, 6, 1, "", "distributions"], [104, 6, 1, "", "number"], [104, 6, 1, "", "params"], [104, 5, 1, "", "report"], [104, 5, 1, "", "set_system_attr"], [104, 5, 1, "", "set_user_attr"], [104, 5, 1, "", "should_prune"], [104, 5, 1, "", "suggest_categorical"], [104, 5, 1, "", "suggest_discrete_uniform"], [104, 5, 1, "", "suggest_float"], [104, 5, 1, "", "suggest_int"], [104, 5, 1, "", "suggest_loguniform"], [104, 5, 1, "", "suggest_uniform"], [104, 6, 1, "", "system_attrs"], [104, 6, 1, "", "user_attrs"]], "optuna.trial.TrialState": [[105, 4, 1, "", "COMPLETE"], [105, 4, 1, "", "FAIL"], [105, 4, 1, "", "PRUNED"], [105, 4, 1, "", "RUNNING"], [105, 4, 1, "", "WAITING"], [105, 5, 1, "", "is_finished"]], "optuna.visualization": [[140, 2, 1, "", "is_available"], [165, 0, 0, "-", "matplotlib"], [153, 2, 1, "", "plot_contour"], [154, 2, 1, "", "plot_edf"], [155, 2, 1, "", "plot_intermediate_values"], [156, 2, 1, "", "plot_optimization_history"], [157, 2, 1, "", "plot_parallel_coordinate"], [158, 2, 1, "", "plot_param_importances"], [159, 2, 1, "", "plot_pareto_front"], [160, 2, 1, "", "plot_rank"], [161, 2, 1, "", "plot_slice"], [162, 2, 1, "", "plot_terminator_improvement"], [163, 2, 1, "", "plot_timeline"]], "optuna.visualization.matplotlib": [[141, 2, 1, "", "is_available"], [142, 2, 1, "", "plot_contour"], [143, 2, 1, "", "plot_edf"], [144, 2, 1, "", "plot_intermediate_values"], [145, 2, 1, "", "plot_optimization_history"], [146, 2, 1, "", "plot_parallel_coordinate"], [147, 2, 1, "", "plot_param_importances"], [148, 2, 1, "", "plot_pareto_front"], [149, 2, 1, "", "plot_rank"], [150, 2, 1, "", "plot_slice"], [151, 2, 1, "", "plot_terminator_improvement"], [152, 2, 1, "", "plot_timeline"]]}, "objtypes": {"0": "py:module", "1": "py:exception", "2": "py:function", "3": "py:class", "4": "py:attribute", "5": "py:method", "6": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "exception", "Python exception"], "2": ["py", "function", "Python function"], "3": ["py", "class", "Python class"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "method", "Python method"], "6": ["py", "property", "Python property"]}, "titleterms": {"faq": 0, "can": 0, "i": 0, "us": [0, 168, 182], "optuna": [0, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 174, 180, 181], "x": 0, "where": 0, "your": [0, 180], "favorit": 0, "ml": 0, "librari": 0, "how": 0, "defin": [0, 167, 177, 178, 181], "object": [0, 166, 174], "function": [0, 166, 170], "have": [0, 180], "own": 0, "argument": 0, "without": 0, "remot": 0, "rdb": [0, 173], "server": 0, "save": [0, 173], "resum": [0, 173], "studi": [0, 84, 85, 86, 87, 88, 89, 90, 91, 92, 137, 166, 169, 173, 175, 179], "suppress": 0, "log": [0, 60, 61, 62, 63, 64, 65, 110], "messag": 0, "machin": 0, "learn": [0, 109], "model": [0, 182], "train": [0, 58], "obtain": 0, "reproduc": 0, "optim": [0, 1, 109, 168, 170, 174, 179, 181], "result": 0, "ar": [0, 179], "except": [0, 7, 23, 24, 25, 26, 27], "from": 0, "trial": [0, 102, 103, 104, 105, 106, 139, 175, 179, 182], "handl": 0, "nan": 0, "return": 0, "what": 0, "happen": 0, "when": 0, "dynam": 0, "alter": 0, "search": [0, 167], "space": [0, 167], "two": 0, "gpu": 0, "evalu": [0, 180], "simultan": 0, "test": 0, "my": 0, "do": 0, "avoid": 0, "run": [0, 174, 181], "out": 0, "memori": 0, "oom": 0, "output": 0, "onli": 0, "best": [0, 182], "valu": 0, "updat": 0, "suggest": 0, "variabl": 0, "which": [0, 168], "repres": 0, "proport": 0, "accord": 0, "dirichlet": 0, "distribut": [0, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], "some": [0, 179], "constraint": 0, "parallel": [0, 169], "1": 0, "multi": [0, 174], "thread": 0, "singl": 0, "node": [0, 169], "2": 0, "process": [0, 169], "3": 0, "multipl": [0, 169], "solv": 0, "error": 0, "occur": 0, "perform": 0, "sqlite3": 0, "monitor": 0, "make": 0, "them": 0, "fail": 0, "automat": 0, "thei": 0, "kill": 0, "unexpectedli": 0, "A": 1, "hyperparamet": [1, 170, 180], "framework": 1, "kei": [1, 171, 185], "featur": [1, 171, 185], "basic": 1, "concept": 1, "commun": 1, "contribut": 1, "licens": [1, 3], "refer": [1, 108], "content": 1, "indic": 1, "tabl": 1, "instal": 2, "third": 3, "parti": 3, "scipi": 3, "fdlibm": 3, "privaci": 4, "polici": 4, "googl": 4, "analyt": 4, "cli": 5, "trialprun": [8, 27], "copy_studi": [9, 88], "create_studi": [10, 89], "delete_studi": [11, 90], "categoricaldistribut": 12, "discreteuniformdistribut": 13, "floatdistribut": 14, "intdistribut": 15, "intloguniformdistribut": 16, "intuniformdistribut": 17, "loguniformdistribut": 18, "uniformdistribut": 19, "check_distribution_compat": 20, "distribution_to_json": 21, "json_to_distribut": 22, "cliusageerror": 23, "duplicatedstudyerror": 24, "optunaerror": 25, "storageinternalerror": 26, "get_all_study_summari": [28, 91], "import": [29, 30, 31, 107], "fanovaimportanceevalu": 29, "meandecreaseimpurityimportanceevalu": 30, "get_param_import": 31, "integr": [32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 109, 168], "botorchsampl": 32, "catboostpruningcallback": 33, "cmaessampl": [34, 115], "daskstorag": 35, "fastaipruningcallback": 36, "fastaiv1pruningcallback": 37, "fastaiv2pruningcallback": 38, "lightgbmpruningcallback": 39, "mlflowcallback": 40, "mxnetpruningcallback": 41, "optunasearchcv": 42, "pycmasampl": 43, "pytorchignitepruninghandl": 44, "pytorchlightningpruningcallback": 45, "shapleyimportanceevalu": 46, "skoptsampl": 47, "tensorboardcallback": 48, "torchdistributedtri": 49, "weightsandbiasescallback": 50, "xgboostpruningcallback": 51, "botorch": [52, 53, 54, 55, 109], "qehvi_candidates_func": 52, "qei_candidates_func": 53, "qnehvi_candidates_func": 54, "qparego_candidates_func": 55, "lightgbm": [56, 57, 58, 109], "lightgbmtun": 56, "lightgbmtunercv": 57, "load_studi": [59, 92], "disable_default_handl": 60, "disable_propag": 61, "enable_default_handl": 62, "enable_propag": 63, "get_verbos": 64, "set_verbos": 65, "pruner": [66, 67, 68, 69, 70, 71, 72, 73, 112, 168, 178], "baseprun": 66, "hyperbandprun": 67, "medianprun": 68, "nopprun": 69, "patientprun": 70, "percentileprun": 71, "successivehalvingprun": 72, "thresholdprun": 73, "search_spac": [74, 75, 135], "intersectionsearchspac": [74, 117], "intersection_search_spac": [75, 125], "storag": [76, 77, 78, 79, 80, 81, 82, 83, 136], "journalfileopenlock": 76, "journalfilestorag": 77, "journalfilesymlinklock": 78, "journalredisstorag": 79, "journalstorag": 80, "rdbstorag": 81, "retryfailedtrialcallback": 82, "fail_stale_tri": 83, "maxtrialscallback": 84, "studydirect": 86, "studysummari": 87, "termin": [93, 94, 95, 96, 97, 98, 99, 100, 101, 138], "baseerrorevalu": 93, "baseimprovementevalu": 94, "basetermin": 95, "crossvalidationerrorevalu": 96, "regretboundevalu": 97, "staticerrorevalu": 98, "terminatorcallback": 100, "report_cross_validation_scor": 101, "fixedtri": 102, "frozentri": 103, "trialstat": 105, "create_tri": 106, "api": 108, "catboost": 109, "dask": 109, "fast": 109, "ai": 109, "mlflow": 109, "weight": 109, "bias": 109, "mxnet": 109, "pycma": 109, "pytorch": 109, "scikit": 109, "shap": 109, "tensorflow": 109, "xgboost": 109, "sampler": [113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 168, 177], "basesampl": 113, "bruteforcesampl": 114, "gridsampl": 116, "motpesampl": 118, "nsgaiiisampl": 119, "nsgaiisampl": 120, "partialfixedsampl": 121, "qmcsampler": 122, "randomsampl": 123, "tpesampl": 124, "nsgaii": [126, 127, 128, 129, 130, 131, 132, 134], "blxalphacrossov": 126, "basecrossov": 127, "sbxcrossov": 128, "spxcrossov": 129, "undxcrossov": 130, "uniformcrossov": 131, "vsbxcrossov": 132, "visual": [140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 170], "is_avail": [140, 141], "matplotlib": [141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 165], "plot_contour": [142, 153], "plot_edf": [143, 154], "plot_intermediate_valu": [144, 155], "plot_optimization_histori": [145, 156], "plot_parallel_coordin": [146, 157], "plot_param_import": [147, 158], "plot_pareto_front": [148, 159], "plot_rank": [149, 160], "plot_slic": [150, 161], "plot_terminator_improv": [151, 162], "plot_timelin": [152, 163], "lightweight": 166, "versatil": 166, "platform": 166, "agnost": 166, "architectur": 166, "quadrat": 166, "exampl": [166, 177, 178], "python": 167, "paramet": 167, "note": 167, "number": 167, "effici": 168, "algorithm": 168, "sampl": 168, "switch": 168, "prune": [168, 178, 179], "activ": 168, "should": 168, "modul": 168, "easi": 169, "creat": 169, "share": 169, "among": 169, "quick": 170, "analysi": 170, "plot": 170, "comput": [172, 184], "time": [172, 184], "backend": 173, "new": 173, "experiment": 173, "histori": 173, "user": [175, 177, 178], "attribut": 175, "ad": 175, "command": 176, "line": 176, "interfac": [176, 178, 181], "overview": [177, 178], "an": [177, 178, 181], "implement": [177, 178], "simulatedannealingsampl": 177, "lastplaceprun": 178, "callback": 179, "stop": 179, "after": 179, "row": 179, "specifi": 180, "manual": 180, "first": 180, "scenario": 180, "second": 180, "util": 180, "alreadi": 180, "ask": 181, "tell": 181, "appli": 181, "exist": 181, "problem": 181, "minimum": 181, "modif": 181, "batch": 181, "re": 182, "investig": 182, "further": 182, "The": 182, "differ": 182, "between": 182, "best_trial": 182, "ordin": 182, "recip": [183, 185], "tutori": 185}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"FAQ": [[0, "faq"]], "Can I use Optuna with X? (where X is your favorite ML library)": [[0, "can-i-use-optuna-with-x-where-x-is-your-favorite-ml-library"]], "How to define objective functions that have own arguments?": [[0, "how-to-define-objective-functions-that-have-own-arguments"]], "Can I use Optuna without remote RDB servers?": [[0, "can-i-use-optuna-without-remote-rdb-servers"]], "How can I save and resume studies?": [[0, "how-can-i-save-and-resume-studies"]], "How to suppress log messages of Optuna?": [[0, "how-to-suppress-log-messages-of-optuna"]], "How to save machine learning models trained in objective functions?": [[0, "how-to-save-machine-learning-models-trained-in-objective-functions"]], "How can I obtain reproducible optimization results?": [[0, "how-can-i-obtain-reproducible-optimization-results"]], "How are exceptions from trials handled?": [[0, "how-are-exceptions-from-trials-handled"]], "How are NaNs returned by trials handled?": [[0, "how-are-nans-returned-by-trials-handled"]], "What happens when I dynamically alter a search space?": [[0, "what-happens-when-i-dynamically-alter-a-search-space"]], "How can I use two GPUs for evaluating two trials simultaneously?": [[0, "how-can-i-use-two-gpus-for-evaluating-two-trials-simultaneously"]], "How can I test my objective functions?": [[0, "how-can-i-test-my-objective-functions"]], "How do I avoid running out of memory (OOM) when optimizing studies?": [[0, "how-do-i-avoid-running-out-of-memory-oom-when-optimizing-studies"]], "How can I output a log only when the best value is updated?": [[0, "how-can-i-output-a-log-only-when-the-best-value-is-updated"]], "How do I suggest variables which represent the proportion, that is, are in accordance with Dirichlet distribution?": [[0, "how-do-i-suggest-variables-which-represent-the-proportion-that-is-are-in-accordance-with-dirichlet-distribution"]], "How can I optimize a model with some constraints?": [[0, "how-can-i-optimize-a-model-with-some-constraints"]], "How can I parallelize optimization?": [[0, "how-can-i-parallelize-optimization"]], "1. Multi-threading parallelization with a single node": [[0, "multi-threading-parallelization-with-a-single-node"]], "2. Multi-processing parallelization with single node": [[0, "multi-processing-parallelization-with-single-node"]], "3. Multi-processing parallelization with multiple nodes": [[0, "multi-processing-parallelization-with-multiple-nodes"]], "How can I solve the error that occurs when performing parallel optimization with SQLite3?": [[0, "how-can-i-solve-the-error-that-occurs-when-performing-parallel-optimization-with-sqlite3"]], "Can I monitor trials and make them failed automatically when they are killed unexpectedly?": [[0, "can-i-monitor-trials-and-make-them-failed-automatically-when-they-are-killed-unexpectedly"]], "Optuna: A hyperparameter optimization framework": [[1, "optuna-a-hyperparameter-optimization-framework"]], "Key Features": [[1, "key-features"], [171, "key-features"], [185, "key-features"]], "Basic Concepts": [[1, "basic-concepts"]], "Communication": [[1, "communication"]], "Contribution": [[1, "contribution"]], "License": [[1, "license"]], "Reference": [[1, "reference"]], "Contents:": [[1, null]], "Indices and tables": [[1, "indices-and-tables"]], "Installation": [[2, "installation"]], "Third-party License": [[3, "third-party-license"]], "SciPy": [[3, "scipy"]], "fdlibm": [[3, "fdlibm"]], "Privacy Policy": [[4, "privacy-policy"]], "Google Analytics": [[4, "google-analytics"]], "optuna.cli": [[5, "optuna-cli"]], "optuna.distributions": [[6, "optuna-distributions"]], "optuna.exceptions": [[7, "optuna-exceptions"]], "optuna.TrialPruned": [[8, "optuna-trialpruned"]], "optuna.copy_study": [[9, "optuna-copy-study"]], "optuna.create_study": [[10, "optuna-create-study"]], "optuna.delete_study": [[11, "optuna-delete-study"]], "optuna.distributions.CategoricalDistribution": [[12, "optuna-distributions-categoricaldistribution"]], "optuna.distributions.DiscreteUniformDistribution": [[13, "optuna-distributions-discreteuniformdistribution"]], "optuna.distributions.FloatDistribution": [[14, "optuna-distributions-floatdistribution"]], "optuna.distributions.IntDistribution": [[15, "optuna-distributions-intdistribution"]], "optuna.distributions.IntLogUniformDistribution": [[16, "optuna-distributions-intloguniformdistribution"]], "optuna.distributions.IntUniformDistribution": [[17, "optuna-distributions-intuniformdistribution"]], "optuna.distributions.LogUniformDistribution": [[18, "optuna-distributions-loguniformdistribution"]], "optuna.distributions.UniformDistribution": [[19, "optuna-distributions-uniformdistribution"]], "optuna.distributions.check_distribution_compatibility": [[20, "optuna-distributions-check-distribution-compatibility"]], "optuna.distributions.distribution_to_json": [[21, "optuna-distributions-distribution-to-json"]], "optuna.distributions.json_to_distribution": [[22, "optuna-distributions-json-to-distribution"]], "optuna.exceptions.CLIUsageError": [[23, "optuna-exceptions-cliusageerror"]], "optuna.exceptions.DuplicatedStudyError": [[24, "optuna-exceptions-duplicatedstudyerror"]], "optuna.exceptions.OptunaError": [[25, "optuna-exceptions-optunaerror"]], "optuna.exceptions.StorageInternalError": [[26, "optuna-exceptions-storageinternalerror"]], "optuna.exceptions.TrialPruned": [[27, "optuna-exceptions-trialpruned"]], "optuna.get_all_study_summaries": [[28, "optuna-get-all-study-summaries"]], "optuna.importance.FanovaImportanceEvaluator": [[29, "optuna-importance-fanovaimportanceevaluator"]], "optuna.importance.MeanDecreaseImpurityImportanceEvaluator": [[30, "optuna-importance-meandecreaseimpurityimportanceevaluator"]], "optuna.importance.get_param_importances": [[31, "optuna-importance-get-param-importances"]], "optuna.integration.BoTorchSampler": [[32, "optuna-integration-botorchsampler"]], "optuna.integration.CatBoostPruningCallback": [[33, "optuna-integration-catboostpruningcallback"]], "optuna.integration.CmaEsSampler": [[34, "optuna-integration-cmaessampler"]], "optuna.integration.DaskStorage": [[35, "optuna-integration-daskstorage"]], "optuna.integration.FastAIPruningCallback": [[36, "optuna-integration-fastaipruningcallback"]], "optuna.integration.FastAIV1PruningCallback": [[37, "optuna-integration-fastaiv1pruningcallback"]], "optuna.integration.FastAIV2PruningCallback": [[38, "optuna-integration-fastaiv2pruningcallback"]], "optuna.integration.LightGBMPruningCallback": [[39, "optuna-integration-lightgbmpruningcallback"]], "optuna.integration.MLflowCallback": [[40, "optuna-integration-mlflowcallback"]], "optuna.integration.MXNetPruningCallback": [[41, "optuna-integration-mxnetpruningcallback"]], "optuna.integration.OptunaSearchCV": [[42, "optuna-integration-optunasearchcv"]], "optuna.integration.PyCmaSampler": [[43, "optuna-integration-pycmasampler"]], "optuna.integration.PyTorchIgnitePruningHandler": [[44, "optuna-integration-pytorchignitepruninghandler"]], "optuna.integration.PyTorchLightningPruningCallback": [[45, "optuna-integration-pytorchlightningpruningcallback"]], "optuna.integration.ShapleyImportanceEvaluator": [[46, "optuna-integration-shapleyimportanceevaluator"]], "optuna.integration.SkoptSampler": [[47, "optuna-integration-skoptsampler"]], "optuna.integration.TensorBoardCallback": [[48, "optuna-integration-tensorboardcallback"]], "optuna.integration.TorchDistributedTrial": [[49, "optuna-integration-torchdistributedtrial"]], "optuna.integration.WeightsAndBiasesCallback": [[50, "optuna-integration-weightsandbiasescallback"]], "optuna.integration.XGBoostPruningCallback": [[51, "optuna-integration-xgboostpruningcallback"]], "optuna.integration.botorch.qehvi_candidates_func": [[52, "optuna-integration-botorch-qehvi-candidates-func"]], "optuna.integration.botorch.qei_candidates_func": [[53, "optuna-integration-botorch-qei-candidates-func"]], "optuna.integration.botorch.qnehvi_candidates_func": [[54, "optuna-integration-botorch-qnehvi-candidates-func"]], "optuna.integration.botorch.qparego_candidates_func": [[55, "optuna-integration-botorch-qparego-candidates-func"]], "optuna.integration.lightgbm.LightGBMTuner": [[56, "optuna-integration-lightgbm-lightgbmtuner"]], "optuna.integration.lightgbm.LightGBMTunerCV": [[57, "optuna-integration-lightgbm-lightgbmtunercv"]], "optuna.integration.lightgbm.train": [[58, "optuna-integration-lightgbm-train"]], "optuna.load_study": [[59, "optuna-load-study"]], "optuna.logging.disable_default_handler": [[60, "optuna-logging-disable-default-handler"]], "optuna.logging.disable_propagation": [[61, "optuna-logging-disable-propagation"]], "optuna.logging.enable_default_handler": [[62, "optuna-logging-enable-default-handler"]], "optuna.logging.enable_propagation": [[63, "optuna-logging-enable-propagation"]], "optuna.logging.get_verbosity": [[64, "optuna-logging-get-verbosity"]], "optuna.logging.set_verbosity": [[65, "optuna-logging-set-verbosity"]], "optuna.pruners.BasePruner": [[66, "optuna-pruners-basepruner"]], "optuna.pruners.HyperbandPruner": [[67, "optuna-pruners-hyperbandpruner"]], "optuna.pruners.MedianPruner": [[68, "optuna-pruners-medianpruner"]], "optuna.pruners.NopPruner": [[69, "optuna-pruners-noppruner"]], "optuna.pruners.PatientPruner": [[70, "optuna-pruners-patientpruner"]], "optuna.pruners.PercentilePruner": [[71, "optuna-pruners-percentilepruner"]], "optuna.pruners.SuccessiveHalvingPruner": [[72, "optuna-pruners-successivehalvingpruner"]], "optuna.pruners.ThresholdPruner": [[73, "optuna-pruners-thresholdpruner"]], "optuna.search_space.IntersectionSearchSpace": [[74, "optuna-search-space-intersectionsearchspace"]], "optuna.search_space.intersection_search_space": [[75, "optuna-search-space-intersection-search-space"]], "optuna.storages.JournalFileOpenLock": [[76, "optuna-storages-journalfileopenlock"]], "optuna.storages.JournalFileStorage": [[77, "optuna-storages-journalfilestorage"]], "optuna.storages.JournalFileSymlinkLock": [[78, "optuna-storages-journalfilesymlinklock"]], "optuna.storages.JournalRedisStorage": [[79, "optuna-storages-journalredisstorage"]], "optuna.storages.JournalStorage": [[80, "optuna-storages-journalstorage"]], "optuna.storages.RDBStorage": [[81, "optuna-storages-rdbstorage"]], "optuna.storages.RetryFailedTrialCallback": [[82, "optuna-storages-retryfailedtrialcallback"]], "optuna.storages.fail_stale_trials": [[83, "optuna-storages-fail-stale-trials"]], "optuna.study.MaxTrialsCallback": [[84, "optuna-study-maxtrialscallback"]], "optuna.study.Study": [[85, "optuna-study-study"]], "optuna.study.StudyDirection": [[86, "optuna-study-studydirection"]], "optuna.study.StudySummary": [[87, "optuna-study-studysummary"]], "optuna.study.copy_study": [[88, "optuna-study-copy-study"]], "optuna.study.create_study": [[89, "optuna-study-create-study"]], "optuna.study.delete_study": [[90, "optuna-study-delete-study"]], "optuna.study.get_all_study_summaries": [[91, "optuna-study-get-all-study-summaries"]], "optuna.study.load_study": [[92, "optuna-study-load-study"]], "optuna.terminator.BaseErrorEvaluator": [[93, "optuna-terminator-baseerrorevaluator"]], "optuna.terminator.BaseImprovementEvaluator": [[94, "optuna-terminator-baseimprovementevaluator"]], "optuna.terminator.BaseTerminator": [[95, "optuna-terminator-baseterminator"]], "optuna.terminator.CrossValidationErrorEvaluator": [[96, "optuna-terminator-crossvalidationerrorevaluator"]], "optuna.terminator.RegretBoundEvaluator": [[97, "optuna-terminator-regretboundevaluator"]], "optuna.terminator.StaticErrorEvaluator": [[98, "optuna-terminator-staticerrorevaluator"]], "optuna.terminator.Terminator": [[99, "optuna-terminator-terminator"]], "optuna.terminator.TerminatorCallback": [[100, "optuna-terminator-terminatorcallback"]], "optuna.terminator.report_cross_validation_scores": [[101, "optuna-terminator-report-cross-validation-scores"]], "optuna.trial.FixedTrial": [[102, "optuna-trial-fixedtrial"]], "optuna.trial.FrozenTrial": [[103, "optuna-trial-frozentrial"]], "optuna.trial.Trial": [[104, "optuna-trial-trial"]], "optuna.trial.TrialState": [[105, "optuna-trial-trialstate"]], "optuna.trial.create_trial": [[106, "optuna-trial-create-trial"]], "optuna.importance": [[107, "optuna-importance"]], "API Reference": [[108, "api-reference"]], "optuna.integration": [[109, "optuna-integration"]], "BoTorch": [[109, "botorch"]], "CatBoost": [[109, "catboost"]], "Dask": [[109, "dask"]], "fast.ai": [[109, "fast-ai"]], "LightGBM": [[109, "lightgbm"]], "MLflow": [[109, "mlflow"]], "Weights & Biases": [[109, "weights-biases"]], "MXNet": [[109, "mxnet"]], "pycma": [[109, "pycma"]], "PyTorch": [[109, "pytorch"]], "scikit-learn": [[109, "scikit-learn"]], "scikit-optimize": [[109, "scikit-optimize"]], "SHAP": [[109, "shap"]], "TensorFlow": [[109, "tensorflow"]], "XGBoost": [[109, "xgboost"]], "optuna.logging": [[110, "optuna-logging"]], "optuna": [[111, "optuna"]], "optuna.pruners": [[112, "optuna-pruners"]], "optuna.samplers.BaseSampler": [[113, "optuna-samplers-basesampler"]], "optuna.samplers.BruteForceSampler": [[114, "optuna-samplers-bruteforcesampler"]], "optuna.samplers.CmaEsSampler": [[115, "optuna-samplers-cmaessampler"]], "optuna.samplers.GridSampler": [[116, "optuna-samplers-gridsampler"]], "optuna.samplers.IntersectionSearchSpace": [[117, "optuna-samplers-intersectionsearchspace"]], "optuna.samplers.MOTPESampler": [[118, "optuna-samplers-motpesampler"]], "optuna.samplers.NSGAIIISampler": [[119, "optuna-samplers-nsgaiiisampler"]], "optuna.samplers.NSGAIISampler": [[120, "optuna-samplers-nsgaiisampler"]], "optuna.samplers.PartialFixedSampler": [[121, "optuna-samplers-partialfixedsampler"]], "optuna.samplers.QMCSampler": [[122, "optuna-samplers-qmcsampler"]], "optuna.samplers.RandomSampler": [[123, "optuna-samplers-randomsampler"]], "optuna.samplers.TPESampler": [[124, "optuna-samplers-tpesampler"]], "optuna.samplers.intersection_search_space": [[125, "optuna-samplers-intersection-search-space"]], "optuna.samplers.nsgaii.BLXAlphaCrossover": [[126, "optuna-samplers-nsgaii-blxalphacrossover"]], "optuna.samplers.nsgaii.BaseCrossover": [[127, "optuna-samplers-nsgaii-basecrossover"]], "optuna.samplers.nsgaii.SBXCrossover": [[128, "optuna-samplers-nsgaii-sbxcrossover"]], "optuna.samplers.nsgaii.SPXCrossover": [[129, "optuna-samplers-nsgaii-spxcrossover"]], "optuna.samplers.nsgaii.UNDXCrossover": [[130, "optuna-samplers-nsgaii-undxcrossover"]], "optuna.samplers.nsgaii.UniformCrossover": [[131, "optuna-samplers-nsgaii-uniformcrossover"]], "optuna.samplers.nsgaii.VSBXCrossover": [[132, "optuna-samplers-nsgaii-vsbxcrossover"]], "optuna.samplers": [[133, "optuna-samplers"]], "optuna.samplers.nsgaii": [[134, "optuna-samplers-nsgaii"]], "optuna.search_space": [[135, "optuna-search-space"]], "optuna.storages": [[136, "optuna-storages"]], "optuna.study": [[137, "optuna-study"]], "optuna.terminator": [[138, "optuna-terminator"]], "optuna.trial": [[139, "optuna-trial"]], "optuna.visualization.is_available": [[140, "optuna-visualization-is-available"]], "optuna.visualization.matplotlib.is_available": [[141, "optuna-visualization-matplotlib-is-available"]], "optuna.visualization.matplotlib.plot_contour": [[142, "optuna-visualization-matplotlib-plot-contour"]], "optuna.visualization.matplotlib.plot_edf": [[143, "optuna-visualization-matplotlib-plot-edf"]], "optuna.visualization.matplotlib.plot_intermediate_values": [[144, "optuna-visualization-matplotlib-plot-intermediate-values"]], "optuna.visualization.matplotlib.plot_optimization_history": [[145, "optuna-visualization-matplotlib-plot-optimization-history"]], "optuna.visualization.matplotlib.plot_parallel_coordinate": [[146, "optuna-visualization-matplotlib-plot-parallel-coordinate"]], "optuna.visualization.matplotlib.plot_param_importances": [[147, "optuna-visualization-matplotlib-plot-param-importances"]], "optuna.visualization.matplotlib.plot_pareto_front": [[148, "optuna-visualization-matplotlib-plot-pareto-front"]], "optuna.visualization.matplotlib.plot_rank": [[149, "optuna-visualization-matplotlib-plot-rank"]], "optuna.visualization.matplotlib.plot_slice": [[150, "optuna-visualization-matplotlib-plot-slice"]], "optuna.visualization.matplotlib.plot_terminator_improvement": [[151, "optuna-visualization-matplotlib-plot-terminator-improvement"]], "optuna.visualization.matplotlib.plot_timeline": [[152, "optuna-visualization-matplotlib-plot-timeline"]], "optuna.visualization.plot_contour": [[153, "optuna-visualization-plot-contour"]], "optuna.visualization.plot_edf": [[154, "optuna-visualization-plot-edf"]], "optuna.visualization.plot_intermediate_values": [[155, "optuna-visualization-plot-intermediate-values"]], "optuna.visualization.plot_optimization_history": [[156, "optuna-visualization-plot-optimization-history"]], "optuna.visualization.plot_parallel_coordinate": [[157, "optuna-visualization-plot-parallel-coordinate"]], "optuna.visualization.plot_param_importances": [[158, "optuna-visualization-plot-param-importances"]], "optuna.visualization.plot_pareto_front": [[159, "optuna-visualization-plot-pareto-front"]], "optuna.visualization.plot_rank": [[160, "optuna-visualization-plot-rank"]], "optuna.visualization.plot_slice": [[161, "optuna-visualization-plot-slice"]], "optuna.visualization.plot_terminator_improvement": [[162, "optuna-visualization-plot-terminator-improvement"]], "optuna.visualization.plot_timeline": [[163, "optuna-visualization-plot-timeline"]], "optuna.visualization": [[164, "optuna-visualization"]], "optuna.visualization.matplotlib": [[165, "optuna-visualization-matplotlib"]], "Lightweight, versatile, and platform agnostic architecture": [[166, "lightweight-versatile-and-platform-agnostic-architecture"]], "Quadratic Function Example": [[166, "quadratic-function-example"]], "Study Object": [[166, "study-object"]], "Pythonic Search Space": [[167, "pythonic-search-space"]], "Defining Parameter Spaces": [[167, "defining-parameter-spaces"]], "Note on the Number of Parameters": [[167, "note-on-the-number-of-parameters"]], "Efficient Optimization Algorithms": [[168, "efficient-optimization-algorithms"]], "Sampling Algorithms": [[168, "sampling-algorithms"]], "Switching Samplers": [[168, "switching-samplers"]], "Pruning Algorithms": [[168, "pruning-algorithms"]], "Activating Pruners": [[168, "activating-pruners"]], "Which Sampler and Pruner Should be Used?": [[168, "which-sampler-and-pruner-should-be-used"]], "Integration Modules for Pruning": [[168, "integration-modules-for-pruning"]], "Easy Parallelization": [[169, "easy-parallelization"]], "Create a Study": [[169, "create-a-study"]], "Share the Study among Multiple Nodes and Processes": [[169, "share-the-study-among-multiple-nodes-and-processes"]], "Quick Visualization for Hyperparameter Optimization Analysis": [[170, "quick-visualization-for-hyperparameter-optimization-analysis"]], "Plot functions": [[170, "plot-functions"]], "Computation times": [[172, "computation-times"], [184, "computation-times"]], "Saving/Resuming Study with RDB Backend": [[173, "saving-resuming-study-with-rdb-backend"]], "New Study": [[173, "new-study"]], "Resume Study": [[173, "resume-study"]], "Experimental History": [[173, "experimental-history"]], "Multi-objective Optimization with Optuna": [[174, "multi-objective-optimization-with-optuna"]], "Run multi-objective optimization": [[174, "run-multi-objective-optimization"]], "User Attributes": [[175, "user-attributes"]], "Adding User Attributes to Studies": [[175, "adding-user-attributes-to-studies"]], "Adding User Attributes to Trials": [[175, "adding-user-attributes-to-trials"]], "Command-Line Interface": [[176, "command-line-interface"]], "User-Defined Sampler": [[177, "user-defined-sampler"]], "Overview of Sampler": [[177, "overview-of-sampler"]], "An Example: Implementing SimulatedAnnealingSampler": [[177, "an-example-implementing-simulatedannealingsampler"]], "User-Defined Pruner": [[178, "user-defined-pruner"]], "Overview of Pruning Interface": [[178, "overview-of-pruning-interface"]], "An Example: Implementing LastPlacePruner": [[178, "an-example-implementing-lastplacepruner"]], "Callback for Study.optimize": [[179, "callback-for-study-optimize"]], "Stop optimization after some trials are pruned in a row": [[179, "stop-optimization-after-some-trials-are-pruned-in-a-row"]], "Specify Hyperparameters Manually": [[180, "specify-hyperparameters-manually"]], "First Scenario: Have Optuna evaluate your hyperparameters": [[180, "first-scenario-have-optuna-evaluate-your-hyperparameters"]], "Second scenario: Have Optuna utilize already evaluated hyperparameters": [[180, "second-scenario-have-optuna-utilize-already-evaluated-hyperparameters"]], "Ask-and-Tell Interface": [[181, "ask-and-tell-interface"]], "Apply Optuna to an existing optimization problem with minimum modifications": [[181, "apply-optuna-to-an-existing-optimization-problem-with-minimum-modifications"]], "Define-and-Run": [[181, "define-and-run"]], "Batch Optimization": [[181, "batch-optimization"]], "Re-use the best trial": [[182, "re-use-the-best-trial"]], "Investigating the best model further": [[182, "investigating-the-best-model-further"]], "The difference between best_trial and ordinal trials": [[182, "the-difference-between-best-trial-and-ordinal-trials"]], "Recipes": [[183, "recipes"], [185, "recipes"]], "Tutorial": [[185, "tutorial"]]}, "indexentries": {"module": [[5, "module-optuna.cli"], [6, "module-optuna.distributions"], [7, "module-optuna.exceptions"], [107, "module-optuna.importance"], [109, "module-optuna.integration"], [110, "module-optuna.logging"], [111, "module-optuna"], [112, "module-optuna.pruners"], [133, "module-optuna.samplers"], [134, "module-optuna.samplers.nsgaii"], [135, "module-optuna.search_space"], [136, "module-optuna.storages"], [137, "module-optuna.study"], [138, "module-optuna.terminator"], [139, "module-optuna.trial"], [164, "module-optuna.visualization"], [165, "module-optuna.visualization.matplotlib"]], "optuna.cli": [[5, "module-optuna.cli"]], "optuna.distributions": [[6, "module-optuna.distributions"]], "optuna.exceptions": [[7, "module-optuna.exceptions"]], "trialpruned": [[8, "optuna.TrialPruned"], [27, "optuna.exceptions.TrialPruned"]], "copy_study() (in module optuna)": [[9, "optuna.copy_study"]], "create_study() (in module optuna)": [[10, "optuna.create_study"]], "delete_study() (in module optuna)": [[11, "optuna.delete_study"]], "categoricaldistribution (class in optuna.distributions)": [[12, "optuna.distributions.CategoricalDistribution"]], "choices (optuna.distributions.categoricaldistribution attribute)": [[12, "optuna.distributions.CategoricalDistribution.choices"]], "single() (optuna.distributions.categoricaldistribution method)": [[12, "optuna.distributions.CategoricalDistribution.single"]], "to_external_repr() (optuna.distributions.categoricaldistribution method)": [[12, "optuna.distributions.CategoricalDistribution.to_external_repr"]], "to_internal_repr() (optuna.distributions.categoricaldistribution method)": [[12, "optuna.distributions.CategoricalDistribution.to_internal_repr"]], "discreteuniformdistribution (class in optuna.distributions)": [[13, "optuna.distributions.DiscreteUniformDistribution"]], "high (optuna.distributions.discreteuniformdistribution attribute)": [[13, "optuna.distributions.DiscreteUniformDistribution.high"]], "low (optuna.distributions.discreteuniformdistribution attribute)": [[13, "optuna.distributions.DiscreteUniformDistribution.low"]], "q (optuna.distributions.discreteuniformdistribution property)": [[13, "optuna.distributions.DiscreteUniformDistribution.q"]], "single() (optuna.distributions.discreteuniformdistribution method)": [[13, "optuna.distributions.DiscreteUniformDistribution.single"]], "to_external_repr() (optuna.distributions.discreteuniformdistribution method)": [[13, "optuna.distributions.DiscreteUniformDistribution.to_external_repr"]], "to_internal_repr() (optuna.distributions.discreteuniformdistribution method)": [[13, "optuna.distributions.DiscreteUniformDistribution.to_internal_repr"]], "floatdistribution (class in optuna.distributions)": [[14, "optuna.distributions.FloatDistribution"]], "high (optuna.distributions.floatdistribution attribute)": [[14, "optuna.distributions.FloatDistribution.high"]], "log (optuna.distributions.floatdistribution attribute)": [[14, "optuna.distributions.FloatDistribution.log"]], "low (optuna.distributions.floatdistribution attribute)": [[14, "optuna.distributions.FloatDistribution.low"]], "single() (optuna.distributions.floatdistribution method)": [[14, "optuna.distributions.FloatDistribution.single"]], "step (optuna.distributions.floatdistribution attribute)": [[14, "optuna.distributions.FloatDistribution.step"]], "to_external_repr() (optuna.distributions.floatdistribution method)": [[14, "optuna.distributions.FloatDistribution.to_external_repr"]], "to_internal_repr() (optuna.distributions.floatdistribution method)": [[14, "optuna.distributions.FloatDistribution.to_internal_repr"]], "intdistribution (class in optuna.distributions)": [[15, "optuna.distributions.IntDistribution"]], "high (optuna.distributions.intdistribution attribute)": [[15, "optuna.distributions.IntDistribution.high"]], "log (optuna.distributions.intdistribution attribute)": [[15, "optuna.distributions.IntDistribution.log"]], "low (optuna.distributions.intdistribution attribute)": [[15, "optuna.distributions.IntDistribution.low"]], "single() (optuna.distributions.intdistribution method)": [[15, "optuna.distributions.IntDistribution.single"]], "step (optuna.distributions.intdistribution attribute)": [[15, "optuna.distributions.IntDistribution.step"]], "to_external_repr() (optuna.distributions.intdistribution method)": [[15, "optuna.distributions.IntDistribution.to_external_repr"]], "to_internal_repr() (optuna.distributions.intdistribution method)": [[15, "optuna.distributions.IntDistribution.to_internal_repr"]], "intloguniformdistribution (class in optuna.distributions)": [[16, "optuna.distributions.IntLogUniformDistribution"]], "high (optuna.distributions.intloguniformdistribution attribute)": [[16, "optuna.distributions.IntLogUniformDistribution.high"]], "low (optuna.distributions.intloguniformdistribution attribute)": [[16, "optuna.distributions.IntLogUniformDistribution.low"]], "single() (optuna.distributions.intloguniformdistribution method)": [[16, "optuna.distributions.IntLogUniformDistribution.single"]], "step (optuna.distributions.intloguniformdistribution attribute)": [[16, "optuna.distributions.IntLogUniformDistribution.step"]], "to_external_repr() (optuna.distributions.intloguniformdistribution method)": [[16, "optuna.distributions.IntLogUniformDistribution.to_external_repr"]], "to_internal_repr() (optuna.distributions.intloguniformdistribution method)": [[16, "optuna.distributions.IntLogUniformDistribution.to_internal_repr"]], "intuniformdistribution (class in optuna.distributions)": [[17, "optuna.distributions.IntUniformDistribution"]], "high (optuna.distributions.intuniformdistribution attribute)": [[17, "optuna.distributions.IntUniformDistribution.high"]], "low (optuna.distributions.intuniformdistribution attribute)": [[17, "optuna.distributions.IntUniformDistribution.low"]], "single() (optuna.distributions.intuniformdistribution method)": [[17, "optuna.distributions.IntUniformDistribution.single"]], "step (optuna.distributions.intuniformdistribution attribute)": [[17, "optuna.distributions.IntUniformDistribution.step"]], "to_external_repr() (optuna.distributions.intuniformdistribution method)": [[17, "optuna.distributions.IntUniformDistribution.to_external_repr"]], "to_internal_repr() (optuna.distributions.intuniformdistribution method)": [[17, "optuna.distributions.IntUniformDistribution.to_internal_repr"]], "loguniformdistribution (class in optuna.distributions)": [[18, "optuna.distributions.LogUniformDistribution"]], "high (optuna.distributions.loguniformdistribution attribute)": [[18, "optuna.distributions.LogUniformDistribution.high"]], "low (optuna.distributions.loguniformdistribution attribute)": [[18, "optuna.distributions.LogUniformDistribution.low"]], "single() (optuna.distributions.loguniformdistribution method)": [[18, "optuna.distributions.LogUniformDistribution.single"]], "to_external_repr() (optuna.distributions.loguniformdistribution method)": [[18, "optuna.distributions.LogUniformDistribution.to_external_repr"]], "to_internal_repr() (optuna.distributions.loguniformdistribution method)": [[18, "optuna.distributions.LogUniformDistribution.to_internal_repr"]], "uniformdistribution (class in optuna.distributions)": [[19, "optuna.distributions.UniformDistribution"]], "high (optuna.distributions.uniformdistribution attribute)": [[19, "optuna.distributions.UniformDistribution.high"]], "low (optuna.distributions.uniformdistribution attribute)": [[19, "optuna.distributions.UniformDistribution.low"]], "single() (optuna.distributions.uniformdistribution method)": [[19, "optuna.distributions.UniformDistribution.single"]], "to_external_repr() (optuna.distributions.uniformdistribution method)": [[19, "optuna.distributions.UniformDistribution.to_external_repr"]], "to_internal_repr() (optuna.distributions.uniformdistribution method)": [[19, "optuna.distributions.UniformDistribution.to_internal_repr"]], "check_distribution_compatibility() (in module optuna.distributions)": [[20, "optuna.distributions.check_distribution_compatibility"]], "distribution_to_json() (in module optuna.distributions)": [[21, "optuna.distributions.distribution_to_json"]], "json_to_distribution() (in module optuna.distributions)": [[22, "optuna.distributions.json_to_distribution"]], "cliusageerror": [[23, "optuna.exceptions.CLIUsageError"]], "duplicatedstudyerror": [[24, "optuna.exceptions.DuplicatedStudyError"]], "optunaerror": [[25, "optuna.exceptions.OptunaError"]], "storageinternalerror": [[26, "optuna.exceptions.StorageInternalError"]], "get_all_study_summaries() (in module optuna)": [[28, "optuna.get_all_study_summaries"]], "fanovaimportanceevaluator (class in optuna.importance)": [[29, "optuna.importance.FanovaImportanceEvaluator"]], "evaluate() (optuna.importance.fanovaimportanceevaluator method)": [[29, "optuna.importance.FanovaImportanceEvaluator.evaluate"]], "meandecreaseimpurityimportanceevaluator (class in optuna.importance)": [[30, "optuna.importance.MeanDecreaseImpurityImportanceEvaluator"]], "evaluate() (optuna.importance.meandecreaseimpurityimportanceevaluator method)": [[30, "optuna.importance.MeanDecreaseImpurityImportanceEvaluator.evaluate"]], "get_param_importances() (in module optuna.importance)": [[31, "optuna.importance.get_param_importances"]], "botorchsampler (class in optuna.integration)": [[32, "optuna.integration.BoTorchSampler"]], "after_trial() (optuna.integration.botorchsampler method)": [[32, "optuna.integration.BoTorchSampler.after_trial"]], "infer_relative_search_space() (optuna.integration.botorchsampler method)": [[32, "optuna.integration.BoTorchSampler.infer_relative_search_space"]], "reseed_rng() (optuna.integration.botorchsampler method)": [[32, "optuna.integration.BoTorchSampler.reseed_rng"]], "sample_independent() (optuna.integration.botorchsampler method)": [[32, "optuna.integration.BoTorchSampler.sample_independent"]], "sample_relative() (optuna.integration.botorchsampler method)": [[32, "optuna.integration.BoTorchSampler.sample_relative"]], "catboostpruningcallback (class in optuna.integration)": [[33, "optuna.integration.CatBoostPruningCallback"]], "after_iteration() (optuna.integration.catboostpruningcallback method)": [[33, "optuna.integration.CatBoostPruningCallback.after_iteration"]], "check_pruned() (optuna.integration.catboostpruningcallback method)": [[33, "optuna.integration.CatBoostPruningCallback.check_pruned"]], "cmaessampler (class in optuna.integration)": [[34, "optuna.integration.CmaEsSampler"]], "after_trial() (optuna.integration.cmaessampler method)": [[34, "optuna.integration.CmaEsSampler.after_trial"]], "infer_relative_search_space() (optuna.integration.cmaessampler method)": [[34, "optuna.integration.CmaEsSampler.infer_relative_search_space"]], "reseed_rng() (optuna.integration.cmaessampler method)": [[34, "optuna.integration.CmaEsSampler.reseed_rng"]], "sample_independent() (optuna.integration.cmaessampler method)": [[34, "optuna.integration.CmaEsSampler.sample_independent"]], "sample_relative() (optuna.integration.cmaessampler method)": [[34, "optuna.integration.CmaEsSampler.sample_relative"]], "daskstorage (class in optuna.integration)": [[35, "optuna.integration.DaskStorage"]], "check_trial_is_updatable() (optuna.integration.daskstorage method)": [[35, "optuna.integration.DaskStorage.check_trial_is_updatable"]], "create_new_study() (optuna.integration.daskstorage method)": [[35, "optuna.integration.DaskStorage.create_new_study"]], "create_new_trial() (optuna.integration.daskstorage method)": [[35, "optuna.integration.DaskStorage.create_new_trial"]], "delete_study() (optuna.integration.daskstorage method)": [[35, "optuna.integration.DaskStorage.delete_study"]], "get_all_studies() (optuna.integration.daskstorage method)": [[35, "optuna.integration.DaskStorage.get_all_studies"]], "get_all_trials() (optuna.integration.daskstorage method)": [[35, "optuna.integration.DaskStorage.get_all_trials"]], "get_base_storage() (optuna.integration.daskstorage method)": [[35, "optuna.integration.DaskStorage.get_base_storage"]], "get_best_trial() (optuna.integration.daskstorage method)": [[35, "optuna.integration.DaskStorage.get_best_trial"]], "get_n_trials() (optuna.integration.daskstorage method)": [[35, "optuna.integration.DaskStorage.get_n_trials"]], "get_study_directions() (optuna.integration.daskstorage method)": [[35, "optuna.integration.DaskStorage.get_study_directions"]], "get_study_id_from_name() (optuna.integration.daskstorage method)": [[35, "optuna.integration.DaskStorage.get_study_id_from_name"]], "get_study_name_from_id() (optuna.integration.daskstorage method)": [[35, "optuna.integration.DaskStorage.get_study_name_from_id"]], "get_study_system_attrs() (optuna.integration.daskstorage method)": [[35, "optuna.integration.DaskStorage.get_study_system_attrs"]], "get_study_user_attrs() (optuna.integration.daskstorage method)": [[35, "optuna.integration.DaskStorage.get_study_user_attrs"]], "get_trial() (optuna.integration.daskstorage method)": [[35, "optuna.integration.DaskStorage.get_trial"]], "get_trial_id_from_study_id_trial_number() (optuna.integration.daskstorage method)": [[35, "optuna.integration.DaskStorage.get_trial_id_from_study_id_trial_number"]], "get_trial_number_from_id() (optuna.integration.daskstorage method)": [[35, "optuna.integration.DaskStorage.get_trial_number_from_id"]], "get_trial_param() (optuna.integration.daskstorage method)": [[35, "optuna.integration.DaskStorage.get_trial_param"]], "get_trial_params() (optuna.integration.daskstorage method)": [[35, "optuna.integration.DaskStorage.get_trial_params"]], "get_trial_system_attrs() (optuna.integration.daskstorage method)": [[35, "optuna.integration.DaskStorage.get_trial_system_attrs"]], "get_trial_user_attrs() (optuna.integration.daskstorage method)": [[35, "optuna.integration.DaskStorage.get_trial_user_attrs"]], "remove_session() (optuna.integration.daskstorage method)": [[35, "optuna.integration.DaskStorage.remove_session"]], "set_study_system_attr() (optuna.integration.daskstorage method)": [[35, "optuna.integration.DaskStorage.set_study_system_attr"]], "set_study_user_attr() (optuna.integration.daskstorage method)": [[35, "optuna.integration.DaskStorage.set_study_user_attr"]], "set_trial_intermediate_value() (optuna.integration.daskstorage method)": [[35, "optuna.integration.DaskStorage.set_trial_intermediate_value"]], "set_trial_param() (optuna.integration.daskstorage method)": [[35, "optuna.integration.DaskStorage.set_trial_param"]], "set_trial_state_values() (optuna.integration.daskstorage method)": [[35, "optuna.integration.DaskStorage.set_trial_state_values"]], "set_trial_system_attr() (optuna.integration.daskstorage method)": [[35, "optuna.integration.DaskStorage.set_trial_system_attr"]], "set_trial_user_attr() (optuna.integration.daskstorage method)": [[35, "optuna.integration.DaskStorage.set_trial_user_attr"]], "fastaipruningcallback (in module optuna.integration)": [[36, "optuna.integration.FastAIPruningCallback"]], "fastaiv1pruningcallback (class in optuna.integration)": [[37, "optuna.integration.FastAIV1PruningCallback"]], "fastaiv2pruningcallback (class in optuna.integration)": [[38, "optuna.integration.FastAIV2PruningCallback"]], "lightgbmpruningcallback (class in optuna.integration)": [[39, "optuna.integration.LightGBMPruningCallback"]], "mlflowcallback (class in optuna.integration)": [[40, "optuna.integration.MLflowCallback"]], "track_in_mlflow() (optuna.integration.mlflowcallback method)": [[40, "optuna.integration.MLflowCallback.track_in_mlflow"]], "mxnetpruningcallback (class in optuna.integration)": [[41, "optuna.integration.MXNetPruningCallback"]], "optunasearchcv (class in optuna.integration)": [[42, "optuna.integration.OptunaSearchCV"]], "best_estimator_ (optuna.integration.optunasearchcv attribute)": [[42, "optuna.integration.OptunaSearchCV.best_estimator_"]], "best_index_ (optuna.integration.optunasearchcv property)": [[42, "optuna.integration.OptunaSearchCV.best_index_"]], "best_params_ (optuna.integration.optunasearchcv property)": [[42, "optuna.integration.OptunaSearchCV.best_params_"]], "best_score_ (optuna.integration.optunasearchcv property)": [[42, "optuna.integration.OptunaSearchCV.best_score_"]], "best_trial_ (optuna.integration.optunasearchcv property)": [[42, "optuna.integration.OptunaSearchCV.best_trial_"]], "classes_ (optuna.integration.optunasearchcv property)": [[42, "optuna.integration.OptunaSearchCV.classes_"]], "decision_function (optuna.integration.optunasearchcv property)": [[42, "optuna.integration.OptunaSearchCV.decision_function"]], "fit() (optuna.integration.optunasearchcv method)": [[42, "optuna.integration.OptunaSearchCV.fit"]], "get_params() (optuna.integration.optunasearchcv method)": [[42, "optuna.integration.OptunaSearchCV.get_params"]], "inverse_transform (optuna.integration.optunasearchcv property)": [[42, "optuna.integration.OptunaSearchCV.inverse_transform"]], "n_splits_ (optuna.integration.optunasearchcv attribute)": [[42, "optuna.integration.OptunaSearchCV.n_splits_"]], "n_trials_ (optuna.integration.optunasearchcv property)": [[42, "optuna.integration.OptunaSearchCV.n_trials_"]], "predict (optuna.integration.optunasearchcv property)": [[42, "optuna.integration.OptunaSearchCV.predict"]], "predict_log_proba (optuna.integration.optunasearchcv property)": [[42, "optuna.integration.OptunaSearchCV.predict_log_proba"]], "predict_proba (optuna.integration.optunasearchcv property)": [[42, "optuna.integration.OptunaSearchCV.predict_proba"]], "refit_time_ (optuna.integration.optunasearchcv attribute)": [[42, "optuna.integration.OptunaSearchCV.refit_time_"]], "sample_indices_ (optuna.integration.optunasearchcv attribute)": [[42, "optuna.integration.OptunaSearchCV.sample_indices_"]], "score() (optuna.integration.optunasearchcv method)": [[42, "optuna.integration.OptunaSearchCV.score"]], "score_samples (optuna.integration.optunasearchcv property)": [[42, "optuna.integration.OptunaSearchCV.score_samples"]], "scorer_ (optuna.integration.optunasearchcv attribute)": [[42, "optuna.integration.OptunaSearchCV.scorer_"]], "set_params() (optuna.integration.optunasearchcv method)": [[42, "optuna.integration.OptunaSearchCV.set_params"]], "set_user_attr (optuna.integration.optunasearchcv property)": [[42, "optuna.integration.OptunaSearchCV.set_user_attr"]], "study_ (optuna.integration.optunasearchcv attribute)": [[42, "optuna.integration.OptunaSearchCV.study_"]], "transform (optuna.integration.optunasearchcv property)": [[42, "optuna.integration.OptunaSearchCV.transform"]], "trials_ (optuna.integration.optunasearchcv property)": [[42, "optuna.integration.OptunaSearchCV.trials_"]], "trials_dataframe (optuna.integration.optunasearchcv property)": [[42, "optuna.integration.OptunaSearchCV.trials_dataframe"]], "user_attrs_ (optuna.integration.optunasearchcv property)": [[42, "optuna.integration.OptunaSearchCV.user_attrs_"]], "pycmasampler (class in optuna.integration)": [[43, "optuna.integration.PyCmaSampler"]], "after_trial() (optuna.integration.pycmasampler method)": [[43, "optuna.integration.PyCmaSampler.after_trial"]], "infer_relative_search_space() (optuna.integration.pycmasampler method)": [[43, "optuna.integration.PyCmaSampler.infer_relative_search_space"]], "reseed_rng() (optuna.integration.pycmasampler method)": [[43, "optuna.integration.PyCmaSampler.reseed_rng"]], "sample_independent() (optuna.integration.pycmasampler method)": [[43, "optuna.integration.PyCmaSampler.sample_independent"]], "sample_relative() (optuna.integration.pycmasampler method)": [[43, "optuna.integration.PyCmaSampler.sample_relative"]], "pytorchignitepruninghandler (class in optuna.integration)": [[44, "optuna.integration.PyTorchIgnitePruningHandler"]], "pytorchlightningpruningcallback (class in optuna.integration)": [[45, "optuna.integration.PyTorchLightningPruningCallback"]], "check_pruned() (optuna.integration.pytorchlightningpruningcallback method)": [[45, "optuna.integration.PyTorchLightningPruningCallback.check_pruned"]], "shapleyimportanceevaluator (class in optuna.integration)": [[46, "optuna.integration.ShapleyImportanceEvaluator"]], "evaluate() (optuna.integration.shapleyimportanceevaluator method)": [[46, "optuna.integration.ShapleyImportanceEvaluator.evaluate"]], "skoptsampler (class in optuna.integration)": [[47, "optuna.integration.SkoptSampler"]], "after_trial() (optuna.integration.skoptsampler method)": [[47, "optuna.integration.SkoptSampler.after_trial"]], "infer_relative_search_space() (optuna.integration.skoptsampler method)": [[47, "optuna.integration.SkoptSampler.infer_relative_search_space"]], "reseed_rng() (optuna.integration.skoptsampler method)": [[47, "optuna.integration.SkoptSampler.reseed_rng"]], "sample_independent() (optuna.integration.skoptsampler method)": [[47, "optuna.integration.SkoptSampler.sample_independent"]], "sample_relative() (optuna.integration.skoptsampler method)": [[47, "optuna.integration.SkoptSampler.sample_relative"]], "tensorboardcallback (class in optuna.integration)": [[48, "optuna.integration.TensorBoardCallback"]], "torchdistributedtrial (class in optuna.integration)": [[49, "optuna.integration.TorchDistributedTrial"]], "set_system_attr() (optuna.integration.torchdistributedtrial method)": [[49, "optuna.integration.TorchDistributedTrial.set_system_attr"]], "suggest_discrete_uniform() (optuna.integration.torchdistributedtrial method)": [[49, "optuna.integration.TorchDistributedTrial.suggest_discrete_uniform"]], "suggest_loguniform() (optuna.integration.torchdistributedtrial method)": [[49, "optuna.integration.TorchDistributedTrial.suggest_loguniform"]], "suggest_uniform() (optuna.integration.torchdistributedtrial method)": [[49, "optuna.integration.TorchDistributedTrial.suggest_uniform"]], "system_attrs (optuna.integration.torchdistributedtrial property)": [[49, "optuna.integration.TorchDistributedTrial.system_attrs"]], "weightsandbiasescallback (class in optuna.integration)": [[50, "optuna.integration.WeightsAndBiasesCallback"]], "track_in_wandb() (optuna.integration.weightsandbiasescallback method)": [[50, "optuna.integration.WeightsAndBiasesCallback.track_in_wandb"]], "xgboostpruningcallback (class in optuna.integration)": [[51, "optuna.integration.XGBoostPruningCallback"]], "qehvi_candidates_func() (in module optuna.integration.botorch)": [[52, "optuna.integration.botorch.qehvi_candidates_func"]], "qei_candidates_func() (in module optuna.integration.botorch)": [[53, "optuna.integration.botorch.qei_candidates_func"]], "qnehvi_candidates_func() (in module optuna.integration.botorch)": [[54, "optuna.integration.botorch.qnehvi_candidates_func"]], "qparego_candidates_func() (in module optuna.integration.botorch)": [[55, "optuna.integration.botorch.qparego_candidates_func"]], "lightgbmtuner (class in optuna.integration.lightgbm)": [[56, "optuna.integration.lightgbm.LightGBMTuner"]], "best_params (optuna.integration.lightgbm.lightgbmtuner property)": [[56, "optuna.integration.lightgbm.LightGBMTuner.best_params"]], "best_score (optuna.integration.lightgbm.lightgbmtuner property)": [[56, "optuna.integration.lightgbm.LightGBMTuner.best_score"]], "get_best_booster() (optuna.integration.lightgbm.lightgbmtuner method)": [[56, "optuna.integration.lightgbm.LightGBMTuner.get_best_booster"]], "run() (optuna.integration.lightgbm.lightgbmtuner method)": [[56, "optuna.integration.lightgbm.LightGBMTuner.run"]], "sample_train_set() (optuna.integration.lightgbm.lightgbmtuner method)": [[56, "optuna.integration.lightgbm.LightGBMTuner.sample_train_set"]], "lightgbmtunercv (class in optuna.integration.lightgbm)": [[57, "optuna.integration.lightgbm.LightGBMTunerCV"]], "best_params (optuna.integration.lightgbm.lightgbmtunercv property)": [[57, "optuna.integration.lightgbm.LightGBMTunerCV.best_params"]], "best_score (optuna.integration.lightgbm.lightgbmtunercv property)": [[57, "optuna.integration.lightgbm.LightGBMTunerCV.best_score"]], "get_best_booster() (optuna.integration.lightgbm.lightgbmtunercv method)": [[57, "optuna.integration.lightgbm.LightGBMTunerCV.get_best_booster"]], "run() (optuna.integration.lightgbm.lightgbmtunercv method)": [[57, "optuna.integration.lightgbm.LightGBMTunerCV.run"]], "sample_train_set() (optuna.integration.lightgbm.lightgbmtunercv method)": [[57, "optuna.integration.lightgbm.LightGBMTunerCV.sample_train_set"]], "train() (in module optuna.integration.lightgbm)": [[58, "optuna.integration.lightgbm.train"]], "load_study() (in module optuna)": [[59, "optuna.load_study"]], "disable_default_handler() (in module optuna.logging)": [[60, "optuna.logging.disable_default_handler"]], "disable_propagation() (in module optuna.logging)": [[61, "optuna.logging.disable_propagation"]], "enable_default_handler() (in module optuna.logging)": [[62, "optuna.logging.enable_default_handler"]], "enable_propagation() (in module optuna.logging)": [[63, "optuna.logging.enable_propagation"]], "get_verbosity() (in module optuna.logging)": [[64, "optuna.logging.get_verbosity"]], "set_verbosity() (in module optuna.logging)": [[65, "optuna.logging.set_verbosity"]], "basepruner (class in optuna.pruners)": [[66, "optuna.pruners.BasePruner"]], "prune() (optuna.pruners.basepruner method)": [[66, "optuna.pruners.BasePruner.prune"]], "hyperbandpruner (class in optuna.pruners)": [[67, "optuna.pruners.HyperbandPruner"]], "prune() (optuna.pruners.hyperbandpruner method)": [[67, "optuna.pruners.HyperbandPruner.prune"]], "medianpruner (class in optuna.pruners)": [[68, "optuna.pruners.MedianPruner"]], "prune() (optuna.pruners.medianpruner method)": [[68, "optuna.pruners.MedianPruner.prune"]], "noppruner (class in optuna.pruners)": [[69, "optuna.pruners.NopPruner"]], "prune() (optuna.pruners.noppruner method)": [[69, "optuna.pruners.NopPruner.prune"]], "patientpruner (class in optuna.pruners)": [[70, "optuna.pruners.PatientPruner"]], "prune() (optuna.pruners.patientpruner method)": [[70, "optuna.pruners.PatientPruner.prune"]], "percentilepruner (class in optuna.pruners)": [[71, "optuna.pruners.PercentilePruner"]], "prune() (optuna.pruners.percentilepruner method)": [[71, "optuna.pruners.PercentilePruner.prune"]], "successivehalvingpruner (class in optuna.pruners)": [[72, "optuna.pruners.SuccessiveHalvingPruner"]], "prune() (optuna.pruners.successivehalvingpruner method)": [[72, "optuna.pruners.SuccessiveHalvingPruner.prune"]], "thresholdpruner (class in optuna.pruners)": [[73, "optuna.pruners.ThresholdPruner"]], "prune() (optuna.pruners.thresholdpruner method)": [[73, "optuna.pruners.ThresholdPruner.prune"]], "intersectionsearchspace (class in optuna.search_space)": [[74, "optuna.search_space.IntersectionSearchSpace"]], "calculate() (optuna.search_space.intersectionsearchspace method)": [[74, "optuna.search_space.IntersectionSearchSpace.calculate"]], "intersection_search_space() (in module optuna.search_space)": [[75, "optuna.search_space.intersection_search_space"]], "journalfileopenlock (class in optuna.storages)": [[76, "optuna.storages.JournalFileOpenLock"]], "acquire() (optuna.storages.journalfileopenlock method)": [[76, "optuna.storages.JournalFileOpenLock.acquire"]], "release() (optuna.storages.journalfileopenlock method)": [[76, "optuna.storages.JournalFileOpenLock.release"]], "journalfilestorage (class in optuna.storages)": [[77, "optuna.storages.JournalFileStorage"]], "append_logs() (optuna.storages.journalfilestorage method)": [[77, "optuna.storages.JournalFileStorage.append_logs"]], "read_logs() (optuna.storages.journalfilestorage method)": [[77, "optuna.storages.JournalFileStorage.read_logs"]], "journalfilesymlinklock (class in optuna.storages)": [[78, "optuna.storages.JournalFileSymlinkLock"]], "acquire() (optuna.storages.journalfilesymlinklock method)": [[78, "optuna.storages.JournalFileSymlinkLock.acquire"]], "release() (optuna.storages.journalfilesymlinklock method)": [[78, "optuna.storages.JournalFileSymlinkLock.release"]], "journalredisstorage (class in optuna.storages)": [[79, "optuna.storages.JournalRedisStorage"]], "append_logs() (optuna.storages.journalredisstorage method)": [[79, "optuna.storages.JournalRedisStorage.append_logs"]], "load_snapshot() (optuna.storages.journalredisstorage method)": [[79, "optuna.storages.JournalRedisStorage.load_snapshot"]], "read_logs() (optuna.storages.journalredisstorage method)": [[79, "optuna.storages.JournalRedisStorage.read_logs"]], "save_snapshot() (optuna.storages.journalredisstorage method)": [[79, "optuna.storages.JournalRedisStorage.save_snapshot"]], "journalstorage (class in optuna.storages)": [[80, "optuna.storages.JournalStorage"]], "check_trial_is_updatable() (optuna.storages.journalstorage method)": [[80, "optuna.storages.JournalStorage.check_trial_is_updatable"]], "create_new_study() (optuna.storages.journalstorage method)": [[80, "optuna.storages.JournalStorage.create_new_study"]], "create_new_trial() (optuna.storages.journalstorage method)": [[80, "optuna.storages.JournalStorage.create_new_trial"]], "delete_study() (optuna.storages.journalstorage method)": [[80, "optuna.storages.JournalStorage.delete_study"]], "get_all_studies() (optuna.storages.journalstorage method)": [[80, "optuna.storages.JournalStorage.get_all_studies"]], "get_all_trials() (optuna.storages.journalstorage method)": [[80, "optuna.storages.JournalStorage.get_all_trials"]], "get_best_trial() (optuna.storages.journalstorage method)": [[80, "optuna.storages.JournalStorage.get_best_trial"]], "get_n_trials() (optuna.storages.journalstorage method)": [[80, "optuna.storages.JournalStorage.get_n_trials"]], "get_study_directions() (optuna.storages.journalstorage method)": [[80, "optuna.storages.JournalStorage.get_study_directions"]], "get_study_id_from_name() (optuna.storages.journalstorage method)": [[80, "optuna.storages.JournalStorage.get_study_id_from_name"]], "get_study_name_from_id() (optuna.storages.journalstorage method)": [[80, "optuna.storages.JournalStorage.get_study_name_from_id"]], "get_study_system_attrs() (optuna.storages.journalstorage method)": [[80, "optuna.storages.JournalStorage.get_study_system_attrs"]], "get_study_user_attrs() (optuna.storages.journalstorage method)": [[80, "optuna.storages.JournalStorage.get_study_user_attrs"]], "get_trial() (optuna.storages.journalstorage method)": [[80, "optuna.storages.JournalStorage.get_trial"]], "get_trial_id_from_study_id_trial_number() (optuna.storages.journalstorage method)": [[80, "optuna.storages.JournalStorage.get_trial_id_from_study_id_trial_number"]], "get_trial_number_from_id() (optuna.storages.journalstorage method)": [[80, "optuna.storages.JournalStorage.get_trial_number_from_id"]], "get_trial_param() (optuna.storages.journalstorage method)": [[80, "optuna.storages.JournalStorage.get_trial_param"]], "get_trial_params() (optuna.storages.journalstorage method)": [[80, "optuna.storages.JournalStorage.get_trial_params"]], "get_trial_system_attrs() (optuna.storages.journalstorage method)": [[80, "optuna.storages.JournalStorage.get_trial_system_attrs"]], "get_trial_user_attrs() (optuna.storages.journalstorage method)": [[80, "optuna.storages.JournalStorage.get_trial_user_attrs"]], "remove_session() (optuna.storages.journalstorage method)": [[80, "optuna.storages.JournalStorage.remove_session"]], "set_study_system_attr() (optuna.storages.journalstorage method)": [[80, "optuna.storages.JournalStorage.set_study_system_attr"]], "set_study_user_attr() (optuna.storages.journalstorage method)": [[80, "optuna.storages.JournalStorage.set_study_user_attr"]], "set_trial_intermediate_value() (optuna.storages.journalstorage method)": [[80, "optuna.storages.JournalStorage.set_trial_intermediate_value"]], "set_trial_param() (optuna.storages.journalstorage method)": [[80, "optuna.storages.JournalStorage.set_trial_param"]], "set_trial_state_values() (optuna.storages.journalstorage method)": [[80, "optuna.storages.JournalStorage.set_trial_state_values"]], "set_trial_system_attr() (optuna.storages.journalstorage method)": [[80, "optuna.storages.JournalStorage.set_trial_system_attr"]], "set_trial_user_attr() (optuna.storages.journalstorage method)": [[80, "optuna.storages.JournalStorage.set_trial_user_attr"]], "rdbstorage (class in optuna.storages)": [[81, "optuna.storages.RDBStorage"]], "check_trial_is_updatable() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.check_trial_is_updatable"]], "create_new_study() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.create_new_study"]], "create_new_trial() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.create_new_trial"]], "delete_study() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.delete_study"]], "get_all_studies() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.get_all_studies"]], "get_all_trials() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.get_all_trials"]], "get_all_versions() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.get_all_versions"]], "get_best_trial() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.get_best_trial"]], "get_current_version() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.get_current_version"]], "get_failed_trial_callback() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.get_failed_trial_callback"]], "get_head_version() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.get_head_version"]], "get_heartbeat_interval() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.get_heartbeat_interval"]], "get_n_trials() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.get_n_trials"]], "get_study_directions() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.get_study_directions"]], "get_study_id_from_name() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.get_study_id_from_name"]], "get_study_name_from_id() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.get_study_name_from_id"]], "get_study_system_attrs() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.get_study_system_attrs"]], "get_study_user_attrs() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.get_study_user_attrs"]], "get_trial() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.get_trial"]], "get_trial_id_from_study_id_trial_number() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.get_trial_id_from_study_id_trial_number"]], "get_trial_number_from_id() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.get_trial_number_from_id"]], "get_trial_param() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.get_trial_param"]], "get_trial_params() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.get_trial_params"]], "get_trial_system_attrs() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.get_trial_system_attrs"]], "get_trial_user_attrs() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.get_trial_user_attrs"]], "record_heartbeat() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.record_heartbeat"]], "remove_session() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.remove_session"]], "set_study_system_attr() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.set_study_system_attr"]], "set_study_user_attr() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.set_study_user_attr"]], "set_trial_intermediate_value() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.set_trial_intermediate_value"]], "set_trial_param() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.set_trial_param"]], "set_trial_state_values() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.set_trial_state_values"]], "set_trial_system_attr() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.set_trial_system_attr"]], "set_trial_user_attr() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.set_trial_user_attr"]], "upgrade() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.upgrade"]], "retryfailedtrialcallback (class in optuna.storages)": [[82, "optuna.storages.RetryFailedTrialCallback"]], "retried_trial_number() (optuna.storages.retryfailedtrialcallback static method)": [[82, "optuna.storages.RetryFailedTrialCallback.retried_trial_number"]], "retry_history() (optuna.storages.retryfailedtrialcallback static method)": [[82, "optuna.storages.RetryFailedTrialCallback.retry_history"]], "fail_stale_trials() (in module optuna.storages)": [[83, "optuna.storages.fail_stale_trials"]], "maxtrialscallback (class in optuna.study)": [[84, "optuna.study.MaxTrialsCallback"]], "study (class in optuna.study)": [[85, "optuna.study.Study"]], "add_trial() (optuna.study.study method)": [[85, "optuna.study.Study.add_trial"]], "add_trials() (optuna.study.study method)": [[85, "optuna.study.Study.add_trials"]], "ask() (optuna.study.study method)": [[85, "optuna.study.Study.ask"]], "best_params (optuna.study.study property)": [[85, "optuna.study.Study.best_params"]], "best_trial (optuna.study.study property)": [[85, "optuna.study.Study.best_trial"]], "best_trials (optuna.study.study property)": [[85, "optuna.study.Study.best_trials"]], "best_value (optuna.study.study property)": [[85, "optuna.study.Study.best_value"]], "direction (optuna.study.study property)": [[85, "optuna.study.Study.direction"]], "directions (optuna.study.study property)": [[85, "optuna.study.Study.directions"]], "enqueue_trial() (optuna.study.study method)": [[85, "optuna.study.Study.enqueue_trial"]], "get_trials() (optuna.study.study method)": [[85, "optuna.study.Study.get_trials"]], "optimize() (optuna.study.study method)": [[85, "optuna.study.Study.optimize"]], "set_metric_names() (optuna.study.study method)": [[85, "optuna.study.Study.set_metric_names"]], "set_system_attr() (optuna.study.study method)": [[85, "optuna.study.Study.set_system_attr"]], "set_user_attr() (optuna.study.study method)": [[85, "optuna.study.Study.set_user_attr"]], "stop() (optuna.study.study method)": [[85, "optuna.study.Study.stop"]], "system_attrs (optuna.study.study property)": [[85, "optuna.study.Study.system_attrs"]], "tell() (optuna.study.study method)": [[85, "optuna.study.Study.tell"]], "trials (optuna.study.study property)": [[85, "optuna.study.Study.trials"]], "trials_dataframe() (optuna.study.study method)": [[85, "optuna.study.Study.trials_dataframe"]], "user_attrs (optuna.study.study property)": [[85, "optuna.study.Study.user_attrs"]], "maximize (optuna.study.studydirection attribute)": [[86, "optuna.study.StudyDirection.MAXIMIZE"]], "minimize (optuna.study.studydirection attribute)": [[86, "optuna.study.StudyDirection.MINIMIZE"]], "not_set (optuna.study.studydirection attribute)": [[86, "optuna.study.StudyDirection.NOT_SET"]], "studydirection (class in optuna.study)": [[86, "optuna.study.StudyDirection"]], "studysummary (class in optuna.study)": [[87, "optuna.study.StudySummary"]], "best_trial (optuna.study.studysummary attribute)": [[87, "optuna.study.StudySummary.best_trial"]], "datetime_start (optuna.study.studysummary attribute)": [[87, "optuna.study.StudySummary.datetime_start"]], "direction (optuna.study.studysummary attribute)": [[87, "optuna.study.StudySummary.direction"]], "directions (optuna.study.studysummary attribute)": [[87, "optuna.study.StudySummary.directions"]], "n_trials (optuna.study.studysummary attribute)": [[87, "optuna.study.StudySummary.n_trials"]], "study_name (optuna.study.studysummary attribute)": [[87, "optuna.study.StudySummary.study_name"]], "system_attrs (optuna.study.studysummary attribute)": [[87, "optuna.study.StudySummary.system_attrs"]], "user_attrs (optuna.study.studysummary attribute)": [[87, "optuna.study.StudySummary.user_attrs"]], "copy_study() (in module optuna.study)": [[88, "optuna.study.copy_study"]], "create_study() (in module optuna.study)": [[89, "optuna.study.create_study"]], "delete_study() (in module optuna.study)": [[90, "optuna.study.delete_study"]], "get_all_study_summaries() (in module optuna.study)": [[91, "optuna.study.get_all_study_summaries"]], "load_study() (in module optuna.study)": [[92, "optuna.study.load_study"]], "baseerrorevaluator (class in optuna.terminator)": [[93, "optuna.terminator.BaseErrorEvaluator"]], "baseimprovementevaluator (class in optuna.terminator)": [[94, "optuna.terminator.BaseImprovementEvaluator"]], "baseterminator (class in optuna.terminator)": [[95, "optuna.terminator.BaseTerminator"]], "crossvalidationerrorevaluator (class in optuna.terminator)": [[96, "optuna.terminator.CrossValidationErrorEvaluator"]], "evaluate() (optuna.terminator.crossvalidationerrorevaluator method)": [[96, "optuna.terminator.CrossValidationErrorEvaluator.evaluate"]], "regretboundevaluator (class in optuna.terminator)": [[97, "optuna.terminator.RegretBoundEvaluator"]], "staticerrorevaluator (class in optuna.terminator)": [[98, "optuna.terminator.StaticErrorEvaluator"]], "terminator (class in optuna.terminator)": [[99, "optuna.terminator.Terminator"]], "should_terminate() (optuna.terminator.terminator method)": [[99, "optuna.terminator.Terminator.should_terminate"]], "terminatorcallback (class in optuna.terminator)": [[100, "optuna.terminator.TerminatorCallback"]], "report_cross_validation_scores() (in module optuna.terminator)": [[101, "optuna.terminator.report_cross_validation_scores"]], "fixedtrial (class in optuna.trial)": [[102, "optuna.trial.FixedTrial"]], "set_system_attr() (optuna.trial.fixedtrial method)": [[102, "optuna.trial.FixedTrial.set_system_attr"]], "suggest_discrete_uniform() (optuna.trial.fixedtrial method)": [[102, "optuna.trial.FixedTrial.suggest_discrete_uniform"]], "suggest_loguniform() (optuna.trial.fixedtrial method)": [[102, "optuna.trial.FixedTrial.suggest_loguniform"]], "suggest_uniform() (optuna.trial.fixedtrial method)": [[102, "optuna.trial.FixedTrial.suggest_uniform"]], "frozentrial (class in optuna.trial)": [[103, "optuna.trial.FrozenTrial"]], "datetime_complete (optuna.trial.frozentrial attribute)": [[103, "optuna.trial.FrozenTrial.datetime_complete"]], "datetime_start (optuna.trial.frozentrial attribute)": [[103, "optuna.trial.FrozenTrial.datetime_start"]], "distributions (optuna.trial.frozentrial attribute)": [[103, "optuna.trial.FrozenTrial.distributions"]], "duration (optuna.trial.frozentrial property)": [[103, "optuna.trial.FrozenTrial.duration"]], "intermediate_values (optuna.trial.frozentrial attribute)": [[103, "optuna.trial.FrozenTrial.intermediate_values"]], "last_step (optuna.trial.frozentrial property)": [[103, "optuna.trial.FrozenTrial.last_step"]], "number (optuna.trial.frozentrial attribute)": [[103, "optuna.trial.FrozenTrial.number"]], "params (optuna.trial.frozentrial attribute)": [[103, "optuna.trial.FrozenTrial.params"]], "report() (optuna.trial.frozentrial method)": [[103, "optuna.trial.FrozenTrial.report"]], "set_system_attr() (optuna.trial.frozentrial method)": [[103, "optuna.trial.FrozenTrial.set_system_attr"]], "should_prune() (optuna.trial.frozentrial method)": [[103, "optuna.trial.FrozenTrial.should_prune"]], "state (optuna.trial.frozentrial attribute)": [[103, "optuna.trial.FrozenTrial.state"]], "suggest_discrete_uniform() (optuna.trial.frozentrial method)": [[103, "optuna.trial.FrozenTrial.suggest_discrete_uniform"]], "suggest_loguniform() (optuna.trial.frozentrial method)": [[103, "optuna.trial.FrozenTrial.suggest_loguniform"]], "suggest_uniform() (optuna.trial.frozentrial method)": [[103, "optuna.trial.FrozenTrial.suggest_uniform"]], "system_attrs (optuna.trial.frozentrial attribute)": [[103, "optuna.trial.FrozenTrial.system_attrs"]], "user_attrs (optuna.trial.frozentrial attribute)": [[103, "optuna.trial.FrozenTrial.user_attrs"]], "value (optuna.trial.frozentrial attribute)": [[103, "optuna.trial.FrozenTrial.value"]], "values (optuna.trial.frozentrial attribute)": [[103, "optuna.trial.FrozenTrial.values"]], "trial (class in optuna.trial)": [[104, "optuna.trial.Trial"]], "datetime_start (optuna.trial.trial property)": [[104, "optuna.trial.Trial.datetime_start"]], "distributions (optuna.trial.trial property)": [[104, "optuna.trial.Trial.distributions"]], "number (optuna.trial.trial property)": [[104, "optuna.trial.Trial.number"]], "params (optuna.trial.trial property)": [[104, "optuna.trial.Trial.params"]], "report() (optuna.trial.trial method)": [[104, "optuna.trial.Trial.report"]], "set_system_attr() (optuna.trial.trial method)": [[104, "optuna.trial.Trial.set_system_attr"]], "set_user_attr() (optuna.trial.trial method)": [[104, "optuna.trial.Trial.set_user_attr"]], "should_prune() (optuna.trial.trial method)": [[104, "optuna.trial.Trial.should_prune"]], "suggest_categorical() (optuna.trial.trial method)": [[104, "optuna.trial.Trial.suggest_categorical"]], "suggest_discrete_uniform() (optuna.trial.trial method)": [[104, "optuna.trial.Trial.suggest_discrete_uniform"]], "suggest_float() (optuna.trial.trial method)": [[104, "optuna.trial.Trial.suggest_float"]], "suggest_int() (optuna.trial.trial method)": [[104, "optuna.trial.Trial.suggest_int"]], "suggest_loguniform() (optuna.trial.trial method)": [[104, "optuna.trial.Trial.suggest_loguniform"]], "suggest_uniform() (optuna.trial.trial method)": [[104, "optuna.trial.Trial.suggest_uniform"]], "system_attrs (optuna.trial.trial property)": [[104, "optuna.trial.Trial.system_attrs"]], "user_attrs (optuna.trial.trial property)": [[104, "optuna.trial.Trial.user_attrs"]], "complete (optuna.trial.trialstate attribute)": [[105, "optuna.trial.TrialState.COMPLETE"]], "fail (optuna.trial.trialstate attribute)": [[105, "optuna.trial.TrialState.FAIL"]], "pruned (optuna.trial.trialstate attribute)": [[105, "optuna.trial.TrialState.PRUNED"]], "running (optuna.trial.trialstate attribute)": [[105, "optuna.trial.TrialState.RUNNING"]], "trialstate (class in optuna.trial)": [[105, "optuna.trial.TrialState"]], "waiting (optuna.trial.trialstate attribute)": [[105, "optuna.trial.TrialState.WAITING"]], "is_finished() (optuna.trial.trialstate method)": [[105, "optuna.trial.TrialState.is_finished"]], "create_trial() (in module optuna.trial)": [[106, "optuna.trial.create_trial"]], "optuna.importance": [[107, "module-optuna.importance"]], "optuna.integration": [[109, "module-optuna.integration"]], "optuna.logging": [[110, "module-optuna.logging"]], "optuna": [[111, "module-optuna"]], "optuna.pruners": [[112, "module-optuna.pruners"]], "basesampler (class in optuna.samplers)": [[113, "optuna.samplers.BaseSampler"]], "after_trial() (optuna.samplers.basesampler method)": [[113, "optuna.samplers.BaseSampler.after_trial"]], "infer_relative_search_space() (optuna.samplers.basesampler method)": [[113, "optuna.samplers.BaseSampler.infer_relative_search_space"]], "reseed_rng() (optuna.samplers.basesampler method)": [[113, "optuna.samplers.BaseSampler.reseed_rng"]], "sample_independent() (optuna.samplers.basesampler method)": [[113, "optuna.samplers.BaseSampler.sample_independent"]], "sample_relative() (optuna.samplers.basesampler method)": [[113, "optuna.samplers.BaseSampler.sample_relative"]], "bruteforcesampler (class in optuna.samplers)": [[114, "optuna.samplers.BruteForceSampler"]], "after_trial() (optuna.samplers.bruteforcesampler method)": [[114, "optuna.samplers.BruteForceSampler.after_trial"]], "infer_relative_search_space() (optuna.samplers.bruteforcesampler method)": [[114, "optuna.samplers.BruteForceSampler.infer_relative_search_space"]], "reseed_rng() (optuna.samplers.bruteforcesampler method)": [[114, "optuna.samplers.BruteForceSampler.reseed_rng"]], "sample_independent() (optuna.samplers.bruteforcesampler method)": [[114, "optuna.samplers.BruteForceSampler.sample_independent"]], "sample_relative() (optuna.samplers.bruteforcesampler method)": [[114, "optuna.samplers.BruteForceSampler.sample_relative"]], "cmaessampler (class in optuna.samplers)": [[115, "optuna.samplers.CmaEsSampler"]], "after_trial() (optuna.samplers.cmaessampler method)": [[115, "optuna.samplers.CmaEsSampler.after_trial"]], "infer_relative_search_space() (optuna.samplers.cmaessampler method)": [[115, "optuna.samplers.CmaEsSampler.infer_relative_search_space"]], "reseed_rng() (optuna.samplers.cmaessampler method)": [[115, "optuna.samplers.CmaEsSampler.reseed_rng"]], "sample_independent() (optuna.samplers.cmaessampler method)": [[115, "optuna.samplers.CmaEsSampler.sample_independent"]], "sample_relative() (optuna.samplers.cmaessampler method)": [[115, "optuna.samplers.CmaEsSampler.sample_relative"]], "gridsampler (class in optuna.samplers)": [[116, "optuna.samplers.GridSampler"]], "after_trial() (optuna.samplers.gridsampler method)": [[116, "optuna.samplers.GridSampler.after_trial"]], "infer_relative_search_space() (optuna.samplers.gridsampler method)": [[116, "optuna.samplers.GridSampler.infer_relative_search_space"]], "reseed_rng() (optuna.samplers.gridsampler method)": [[116, "optuna.samplers.GridSampler.reseed_rng"]], "sample_independent() (optuna.samplers.gridsampler method)": [[116, "optuna.samplers.GridSampler.sample_independent"]], "sample_relative() (optuna.samplers.gridsampler method)": [[116, "optuna.samplers.GridSampler.sample_relative"]], "intersectionsearchspace (class in optuna.samplers)": [[117, "optuna.samplers.IntersectionSearchSpace"]], "calculate() (optuna.samplers.intersectionsearchspace method)": [[117, "optuna.samplers.IntersectionSearchSpace.calculate"]], "motpesampler (class in optuna.samplers)": [[118, "optuna.samplers.MOTPESampler"]], "after_trial() (optuna.samplers.motpesampler method)": [[118, "optuna.samplers.MOTPESampler.after_trial"]], "hyperopt_parameters() (optuna.samplers.motpesampler static method)": [[118, "optuna.samplers.MOTPESampler.hyperopt_parameters"]], "infer_relative_search_space() (optuna.samplers.motpesampler method)": [[118, "optuna.samplers.MOTPESampler.infer_relative_search_space"]], "reseed_rng() (optuna.samplers.motpesampler method)": [[118, "optuna.samplers.MOTPESampler.reseed_rng"]], "sample_independent() (optuna.samplers.motpesampler method)": [[118, "optuna.samplers.MOTPESampler.sample_independent"]], "sample_relative() (optuna.samplers.motpesampler method)": [[118, "optuna.samplers.MOTPESampler.sample_relative"]], "nsgaiiisampler (class in optuna.samplers)": [[119, "optuna.samplers.NSGAIIISampler"]], "after_trial() (optuna.samplers.nsgaiiisampler method)": [[119, "optuna.samplers.NSGAIIISampler.after_trial"]], "infer_relative_search_space() (optuna.samplers.nsgaiiisampler method)": [[119, "optuna.samplers.NSGAIIISampler.infer_relative_search_space"]], "reseed_rng() (optuna.samplers.nsgaiiisampler method)": [[119, "optuna.samplers.NSGAIIISampler.reseed_rng"]], "sample_independent() (optuna.samplers.nsgaiiisampler method)": [[119, "optuna.samplers.NSGAIIISampler.sample_independent"]], "sample_relative() (optuna.samplers.nsgaiiisampler method)": [[119, "optuna.samplers.NSGAIIISampler.sample_relative"]], "nsgaiisampler (class in optuna.samplers)": [[120, "optuna.samplers.NSGAIISampler"]], "after_trial() (optuna.samplers.nsgaiisampler method)": [[120, "optuna.samplers.NSGAIISampler.after_trial"]], "infer_relative_search_space() (optuna.samplers.nsgaiisampler method)": [[120, "optuna.samplers.NSGAIISampler.infer_relative_search_space"]], "reseed_rng() (optuna.samplers.nsgaiisampler method)": [[120, "optuna.samplers.NSGAIISampler.reseed_rng"]], "sample_independent() (optuna.samplers.nsgaiisampler method)": [[120, "optuna.samplers.NSGAIISampler.sample_independent"]], "sample_relative() (optuna.samplers.nsgaiisampler method)": [[120, "optuna.samplers.NSGAIISampler.sample_relative"]], "partialfixedsampler (class in optuna.samplers)": [[121, "optuna.samplers.PartialFixedSampler"]], "after_trial() (optuna.samplers.partialfixedsampler method)": [[121, "optuna.samplers.PartialFixedSampler.after_trial"]], "infer_relative_search_space() (optuna.samplers.partialfixedsampler method)": [[121, "optuna.samplers.PartialFixedSampler.infer_relative_search_space"]], "reseed_rng() (optuna.samplers.partialfixedsampler method)": [[121, "optuna.samplers.PartialFixedSampler.reseed_rng"]], "sample_independent() (optuna.samplers.partialfixedsampler method)": [[121, "optuna.samplers.PartialFixedSampler.sample_independent"]], "sample_relative() (optuna.samplers.partialfixedsampler method)": [[121, "optuna.samplers.PartialFixedSampler.sample_relative"]], "qmcsampler (class in optuna.samplers)": [[122, "optuna.samplers.QMCSampler"]], "after_trial() (optuna.samplers.qmcsampler method)": [[122, "optuna.samplers.QMCSampler.after_trial"]], "infer_relative_search_space() (optuna.samplers.qmcsampler method)": [[122, "optuna.samplers.QMCSampler.infer_relative_search_space"]], "reseed_rng() (optuna.samplers.qmcsampler method)": [[122, "optuna.samplers.QMCSampler.reseed_rng"]], "sample_independent() (optuna.samplers.qmcsampler method)": [[122, "optuna.samplers.QMCSampler.sample_independent"]], "sample_relative() (optuna.samplers.qmcsampler method)": [[122, "optuna.samplers.QMCSampler.sample_relative"]], "randomsampler (class in optuna.samplers)": [[123, "optuna.samplers.RandomSampler"]], "after_trial() (optuna.samplers.randomsampler method)": [[123, "optuna.samplers.RandomSampler.after_trial"]], "infer_relative_search_space() (optuna.samplers.randomsampler method)": [[123, "optuna.samplers.RandomSampler.infer_relative_search_space"]], "reseed_rng() (optuna.samplers.randomsampler method)": [[123, "optuna.samplers.RandomSampler.reseed_rng"]], "sample_independent() (optuna.samplers.randomsampler method)": [[123, "optuna.samplers.RandomSampler.sample_independent"]], "sample_relative() (optuna.samplers.randomsampler method)": [[123, "optuna.samplers.RandomSampler.sample_relative"]], "tpesampler (class in optuna.samplers)": [[124, "optuna.samplers.TPESampler"]], "after_trial() (optuna.samplers.tpesampler method)": [[124, "optuna.samplers.TPESampler.after_trial"]], "hyperopt_parameters() (optuna.samplers.tpesampler static method)": [[124, "optuna.samplers.TPESampler.hyperopt_parameters"]], "infer_relative_search_space() (optuna.samplers.tpesampler method)": [[124, "optuna.samplers.TPESampler.infer_relative_search_space"]], "reseed_rng() (optuna.samplers.tpesampler method)": [[124, "optuna.samplers.TPESampler.reseed_rng"]], "sample_independent() (optuna.samplers.tpesampler method)": [[124, "optuna.samplers.TPESampler.sample_independent"]], "sample_relative() (optuna.samplers.tpesampler method)": [[124, "optuna.samplers.TPESampler.sample_relative"]], "intersection_search_space() (in module optuna.samplers)": [[125, "optuna.samplers.intersection_search_space"]], "blxalphacrossover (class in optuna.samplers.nsgaii)": [[126, "optuna.samplers.nsgaii.BLXAlphaCrossover"]], "crossover() (optuna.samplers.nsgaii.blxalphacrossover method)": [[126, "optuna.samplers.nsgaii.BLXAlphaCrossover.crossover"]], "basecrossover (class in optuna.samplers.nsgaii)": [[127, "optuna.samplers.nsgaii.BaseCrossover"]], "crossover() (optuna.samplers.nsgaii.basecrossover method)": [[127, "optuna.samplers.nsgaii.BaseCrossover.crossover"]], "n_parents (optuna.samplers.nsgaii.basecrossover property)": [[127, "optuna.samplers.nsgaii.BaseCrossover.n_parents"]], "sbxcrossover (class in optuna.samplers.nsgaii)": [[128, "optuna.samplers.nsgaii.SBXCrossover"]], "crossover() (optuna.samplers.nsgaii.sbxcrossover method)": [[128, "optuna.samplers.nsgaii.SBXCrossover.crossover"]], "spxcrossover (class in optuna.samplers.nsgaii)": [[129, "optuna.samplers.nsgaii.SPXCrossover"]], "crossover() (optuna.samplers.nsgaii.spxcrossover method)": [[129, "optuna.samplers.nsgaii.SPXCrossover.crossover"]], "undxcrossover (class in optuna.samplers.nsgaii)": [[130, "optuna.samplers.nsgaii.UNDXCrossover"]], "crossover() (optuna.samplers.nsgaii.undxcrossover method)": [[130, "optuna.samplers.nsgaii.UNDXCrossover.crossover"]], "uniformcrossover (class in optuna.samplers.nsgaii)": [[131, "optuna.samplers.nsgaii.UniformCrossover"]], "crossover() (optuna.samplers.nsgaii.uniformcrossover method)": [[131, "optuna.samplers.nsgaii.UniformCrossover.crossover"]], "vsbxcrossover (class in optuna.samplers.nsgaii)": [[132, "optuna.samplers.nsgaii.VSBXCrossover"]], "crossover() (optuna.samplers.nsgaii.vsbxcrossover method)": [[132, "optuna.samplers.nsgaii.VSBXCrossover.crossover"]], "optuna.samplers": [[133, "module-optuna.samplers"]], "optuna.samplers.nsgaii": [[134, "module-optuna.samplers.nsgaii"]], "optuna.search_space": [[135, "module-optuna.search_space"]], "optuna.storages": [[136, "module-optuna.storages"]], "optuna.study": [[137, "module-optuna.study"]], "optuna.terminator": [[138, "module-optuna.terminator"]], "optuna.trial": [[139, "module-optuna.trial"]], "is_available() (in module optuna.visualization)": [[140, "optuna.visualization.is_available"]], "is_available() (in module optuna.visualization.matplotlib)": [[141, "optuna.visualization.matplotlib.is_available"]], "plot_contour() (in module optuna.visualization.matplotlib)": [[142, "optuna.visualization.matplotlib.plot_contour"]], "plot_edf() (in module optuna.visualization.matplotlib)": [[143, "optuna.visualization.matplotlib.plot_edf"]], "plot_intermediate_values() (in module optuna.visualization.matplotlib)": [[144, "optuna.visualization.matplotlib.plot_intermediate_values"]], "plot_optimization_history() (in module optuna.visualization.matplotlib)": [[145, "optuna.visualization.matplotlib.plot_optimization_history"]], "plot_parallel_coordinate() (in module optuna.visualization.matplotlib)": [[146, "optuna.visualization.matplotlib.plot_parallel_coordinate"]], "plot_param_importances() (in module optuna.visualization.matplotlib)": [[147, "optuna.visualization.matplotlib.plot_param_importances"]], "plot_pareto_front() (in module optuna.visualization.matplotlib)": [[148, "optuna.visualization.matplotlib.plot_pareto_front"]], "plot_rank() (in module optuna.visualization.matplotlib)": [[149, "optuna.visualization.matplotlib.plot_rank"]], "plot_slice() (in module optuna.visualization.matplotlib)": [[150, "optuna.visualization.matplotlib.plot_slice"]], "plot_terminator_improvement() (in module optuna.visualization.matplotlib)": [[151, "optuna.visualization.matplotlib.plot_terminator_improvement"]], "plot_timeline() (in module optuna.visualization.matplotlib)": [[152, "optuna.visualization.matplotlib.plot_timeline"]], "plot_contour() (in module optuna.visualization)": [[153, "optuna.visualization.plot_contour"]], "plot_edf() (in module optuna.visualization)": [[154, "optuna.visualization.plot_edf"]], "plot_intermediate_values() (in module optuna.visualization)": [[155, "optuna.visualization.plot_intermediate_values"]], "plot_optimization_history() (in module optuna.visualization)": [[156, "optuna.visualization.plot_optimization_history"]], "plot_parallel_coordinate() (in module optuna.visualization)": [[157, "optuna.visualization.plot_parallel_coordinate"]], "plot_param_importances() (in module optuna.visualization)": [[158, "optuna.visualization.plot_param_importances"]], "plot_pareto_front() (in module optuna.visualization)": [[159, "optuna.visualization.plot_pareto_front"]], "plot_rank() (in module optuna.visualization)": [[160, "optuna.visualization.plot_rank"]], "plot_slice() (in module optuna.visualization)": [[161, "optuna.visualization.plot_slice"]], "plot_terminator_improvement() (in module optuna.visualization)": [[162, "optuna.visualization.plot_terminator_improvement"]], "plot_timeline() (in module optuna.visualization)": [[163, "optuna.visualization.plot_timeline"]], "optuna.visualization": [[164, "module-optuna.visualization"]], "optuna.visualization.matplotlib": [[165, "module-optuna.visualization.matplotlib"]]}})