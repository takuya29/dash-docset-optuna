Search.setIndex({"docnames": ["faq", "index", "installation", "privacy", "reference/cli", "reference/distributions", "reference/exceptions", "reference/generated/optuna.TrialPruned", "reference/generated/optuna.copy_study", "reference/generated/optuna.create_study", "reference/generated/optuna.delete_study", "reference/generated/optuna.distributions.CategoricalDistribution", "reference/generated/optuna.distributions.DiscreteUniformDistribution", "reference/generated/optuna.distributions.FloatDistribution", "reference/generated/optuna.distributions.IntDistribution", "reference/generated/optuna.distributions.IntLogUniformDistribution", "reference/generated/optuna.distributions.IntUniformDistribution", "reference/generated/optuna.distributions.LogUniformDistribution", "reference/generated/optuna.distributions.UniformDistribution", "reference/generated/optuna.distributions.check_distribution_compatibility", "reference/generated/optuna.distributions.distribution_to_json", "reference/generated/optuna.distributions.json_to_distribution", "reference/generated/optuna.exceptions.CLIUsageError", "reference/generated/optuna.exceptions.DuplicatedStudyError", "reference/generated/optuna.exceptions.OptunaError", "reference/generated/optuna.exceptions.StorageInternalError", "reference/generated/optuna.exceptions.TrialPruned", "reference/generated/optuna.get_all_study_summaries", "reference/generated/optuna.importance.FanovaImportanceEvaluator", "reference/generated/optuna.importance.MeanDecreaseImpurityImportanceEvaluator", "reference/generated/optuna.importance.get_param_importances", "reference/generated/optuna.integration.AllenNLPExecutor", "reference/generated/optuna.integration.AllenNLPPruningCallback", "reference/generated/optuna.integration.BoTorchSampler", "reference/generated/optuna.integration.CatBoostPruningCallback", "reference/generated/optuna.integration.CatalystPruningCallback", "reference/generated/optuna.integration.ChainerMNStudy", "reference/generated/optuna.integration.ChainerPruningExtension", "reference/generated/optuna.integration.CmaEsSampler", "reference/generated/optuna.integration.FastAIPruningCallback", "reference/generated/optuna.integration.FastAIV1PruningCallback", "reference/generated/optuna.integration.FastAIV2PruningCallback", "reference/generated/optuna.integration.KerasPruningCallback", "reference/generated/optuna.integration.LightGBMPruningCallback", "reference/generated/optuna.integration.MLflowCallback", "reference/generated/optuna.integration.MXNetPruningCallback", "reference/generated/optuna.integration.OptunaSearchCV", "reference/generated/optuna.integration.PyCmaSampler", "reference/generated/optuna.integration.PyTorchIgnitePruningHandler", "reference/generated/optuna.integration.PyTorchLightningPruningCallback", "reference/generated/optuna.integration.ShapleyImportanceEvaluator", "reference/generated/optuna.integration.SkoptSampler", "reference/generated/optuna.integration.SkorchPruningCallback", "reference/generated/optuna.integration.TFKerasPruningCallback", "reference/generated/optuna.integration.TensorBoardCallback", "reference/generated/optuna.integration.TensorFlowPruningHook", "reference/generated/optuna.integration.TorchDistributedTrial", "reference/generated/optuna.integration.WeightsAndBiasesCallback", "reference/generated/optuna.integration.XGBoostPruningCallback", "reference/generated/optuna.integration.allennlp.dump_best_config", "reference/generated/optuna.integration.botorch.qehvi_candidates_func", "reference/generated/optuna.integration.botorch.qei_candidates_func", "reference/generated/optuna.integration.botorch.qparego_candidates_func", "reference/generated/optuna.integration.lightgbm.LightGBMTuner", "reference/generated/optuna.integration.lightgbm.LightGBMTunerCV", "reference/generated/optuna.integration.lightgbm.train", "reference/generated/optuna.load_study", "reference/generated/optuna.logging.disable_default_handler", "reference/generated/optuna.logging.disable_propagation", "reference/generated/optuna.logging.enable_default_handler", "reference/generated/optuna.logging.enable_propagation", "reference/generated/optuna.logging.get_verbosity", "reference/generated/optuna.logging.set_verbosity", "reference/generated/optuna.pruners.BasePruner", "reference/generated/optuna.pruners.HyperbandPruner", "reference/generated/optuna.pruners.MedianPruner", "reference/generated/optuna.pruners.NopPruner", "reference/generated/optuna.pruners.PatientPruner", "reference/generated/optuna.pruners.PercentilePruner", "reference/generated/optuna.pruners.SuccessiveHalvingPruner", "reference/generated/optuna.pruners.ThresholdPruner", "reference/generated/optuna.storages.RDBStorage", "reference/generated/optuna.storages.RedisStorage", "reference/generated/optuna.storages.RetryFailedTrialCallback", "reference/generated/optuna.storages.fail_stale_trials", "reference/generated/optuna.study.MaxTrialsCallback", "reference/generated/optuna.study.Study", "reference/generated/optuna.study.StudyDirection", "reference/generated/optuna.study.StudySummary", "reference/generated/optuna.study.copy_study", "reference/generated/optuna.study.create_study", "reference/generated/optuna.study.delete_study", "reference/generated/optuna.study.get_all_study_summaries", "reference/generated/optuna.study.load_study", "reference/generated/optuna.trial.FixedTrial", "reference/generated/optuna.trial.FrozenTrial", "reference/generated/optuna.trial.Trial", "reference/generated/optuna.trial.TrialState", "reference/generated/optuna.trial.create_trial", "reference/importance", "reference/index", "reference/integration", "reference/logging", "reference/multi_objective/generated/optuna.multi_objective.samplers.BaseMultiObjectiveSampler", "reference/multi_objective/generated/optuna.multi_objective.samplers.MOTPEMultiObjectiveSampler", "reference/multi_objective/generated/optuna.multi_objective.samplers.NSGAIIMultiObjectiveSampler", "reference/multi_objective/generated/optuna.multi_objective.samplers.RandomMultiObjectiveSampler", "reference/multi_objective/generated/optuna.multi_objective.study.MultiObjectiveStudy", "reference/multi_objective/generated/optuna.multi_objective.study.create_study", "reference/multi_objective/generated/optuna.multi_objective.study.load_study", "reference/multi_objective/generated/optuna.multi_objective.trial.FrozenMultiObjectiveTrial", "reference/multi_objective/generated/optuna.multi_objective.trial.MultiObjectiveTrial", "reference/multi_objective/generated/optuna.multi_objective.visualization.plot_pareto_front", "reference/multi_objective/index", "reference/multi_objective/samplers", "reference/multi_objective/study", "reference/multi_objective/trial", "reference/multi_objective/visualization", "reference/optuna", "reference/pruners", "reference/samplers/generated/optuna.samplers.BaseSampler", "reference/samplers/generated/optuna.samplers.CmaEsSampler", "reference/samplers/generated/optuna.samplers.GridSampler", "reference/samplers/generated/optuna.samplers.IntersectionSearchSpace", "reference/samplers/generated/optuna.samplers.MOTPESampler", "reference/samplers/generated/optuna.samplers.NSGAIISampler", "reference/samplers/generated/optuna.samplers.PartialFixedSampler", "reference/samplers/generated/optuna.samplers.QMCSampler", "reference/samplers/generated/optuna.samplers.RandomSampler", "reference/samplers/generated/optuna.samplers.TPESampler", "reference/samplers/generated/optuna.samplers.intersection_search_space", "reference/samplers/generated/optuna.samplers.nsgaii.BLXAlphaCrossover", "reference/samplers/generated/optuna.samplers.nsgaii.BaseCrossover", "reference/samplers/generated/optuna.samplers.nsgaii.SBXCrossover", "reference/samplers/generated/optuna.samplers.nsgaii.SPXCrossover", "reference/samplers/generated/optuna.samplers.nsgaii.UNDXCrossover", "reference/samplers/generated/optuna.samplers.nsgaii.UniformCrossover", "reference/samplers/generated/optuna.samplers.nsgaii.VSBXCrossover", "reference/samplers/index", "reference/samplers/nsgaii", "reference/storages", "reference/study", "reference/trial", "reference/visualization/generated/optuna.visualization.is_available", "reference/visualization/generated/optuna.visualization.matplotlib.is_available", "reference/visualization/generated/optuna.visualization.matplotlib.plot_contour", "reference/visualization/generated/optuna.visualization.matplotlib.plot_edf", "reference/visualization/generated/optuna.visualization.matplotlib.plot_intermediate_values", "reference/visualization/generated/optuna.visualization.matplotlib.plot_optimization_history", "reference/visualization/generated/optuna.visualization.matplotlib.plot_parallel_coordinate", "reference/visualization/generated/optuna.visualization.matplotlib.plot_param_importances", "reference/visualization/generated/optuna.visualization.matplotlib.plot_pareto_front", "reference/visualization/generated/optuna.visualization.matplotlib.plot_slice", "reference/visualization/generated/optuna.visualization.plot_contour", "reference/visualization/generated/optuna.visualization.plot_edf", "reference/visualization/generated/optuna.visualization.plot_intermediate_values", "reference/visualization/generated/optuna.visualization.plot_optimization_history", "reference/visualization/generated/optuna.visualization.plot_parallel_coordinate", "reference/visualization/generated/optuna.visualization.plot_param_importances", "reference/visualization/generated/optuna.visualization.plot_pareto_front", "reference/visualization/generated/optuna.visualization.plot_slice", "reference/visualization/index", "reference/visualization/matplotlib", "tutorial/10_key_features/001_first", "tutorial/10_key_features/002_configurations", "tutorial/10_key_features/003_efficient_optimization_algorithms", "tutorial/10_key_features/004_distributed", "tutorial/10_key_features/005_visualization", "tutorial/10_key_features/index", "tutorial/10_key_features/sg_execution_times", "tutorial/20_recipes/001_rdb", "tutorial/20_recipes/002_multi_objective", "tutorial/20_recipes/003_attributes", "tutorial/20_recipes/004_cli", "tutorial/20_recipes/005_user_defined_sampler", "tutorial/20_recipes/006_user_defined_pruner", "tutorial/20_recipes/007_optuna_callback", "tutorial/20_recipes/008_specify_params", "tutorial/20_recipes/009_ask_and_tell", "tutorial/20_recipes/010_reuse_best_trial", "tutorial/20_recipes/index", "tutorial/20_recipes/sg_execution_times", "tutorial/index"], "filenames": ["faq.rst", "index.rst", "installation.rst", "privacy.rst", "reference/cli.rst", "reference/distributions.rst", "reference/exceptions.rst", "reference/generated/optuna.TrialPruned.rst", "reference/generated/optuna.copy_study.rst", "reference/generated/optuna.create_study.rst", "reference/generated/optuna.delete_study.rst", "reference/generated/optuna.distributions.CategoricalDistribution.rst", "reference/generated/optuna.distributions.DiscreteUniformDistribution.rst", "reference/generated/optuna.distributions.FloatDistribution.rst", "reference/generated/optuna.distributions.IntDistribution.rst", "reference/generated/optuna.distributions.IntLogUniformDistribution.rst", "reference/generated/optuna.distributions.IntUniformDistribution.rst", "reference/generated/optuna.distributions.LogUniformDistribution.rst", "reference/generated/optuna.distributions.UniformDistribution.rst", "reference/generated/optuna.distributions.check_distribution_compatibility.rst", "reference/generated/optuna.distributions.distribution_to_json.rst", "reference/generated/optuna.distributions.json_to_distribution.rst", "reference/generated/optuna.exceptions.CLIUsageError.rst", "reference/generated/optuna.exceptions.DuplicatedStudyError.rst", "reference/generated/optuna.exceptions.OptunaError.rst", "reference/generated/optuna.exceptions.StorageInternalError.rst", "reference/generated/optuna.exceptions.TrialPruned.rst", "reference/generated/optuna.get_all_study_summaries.rst", "reference/generated/optuna.importance.FanovaImportanceEvaluator.rst", "reference/generated/optuna.importance.MeanDecreaseImpurityImportanceEvaluator.rst", "reference/generated/optuna.importance.get_param_importances.rst", "reference/generated/optuna.integration.AllenNLPExecutor.rst", "reference/generated/optuna.integration.AllenNLPPruningCallback.rst", "reference/generated/optuna.integration.BoTorchSampler.rst", "reference/generated/optuna.integration.CatBoostPruningCallback.rst", "reference/generated/optuna.integration.CatalystPruningCallback.rst", "reference/generated/optuna.integration.ChainerMNStudy.rst", "reference/generated/optuna.integration.ChainerPruningExtension.rst", "reference/generated/optuna.integration.CmaEsSampler.rst", "reference/generated/optuna.integration.FastAIPruningCallback.rst", "reference/generated/optuna.integration.FastAIV1PruningCallback.rst", "reference/generated/optuna.integration.FastAIV2PruningCallback.rst", "reference/generated/optuna.integration.KerasPruningCallback.rst", "reference/generated/optuna.integration.LightGBMPruningCallback.rst", "reference/generated/optuna.integration.MLflowCallback.rst", "reference/generated/optuna.integration.MXNetPruningCallback.rst", "reference/generated/optuna.integration.OptunaSearchCV.rst", "reference/generated/optuna.integration.PyCmaSampler.rst", "reference/generated/optuna.integration.PyTorchIgnitePruningHandler.rst", "reference/generated/optuna.integration.PyTorchLightningPruningCallback.rst", "reference/generated/optuna.integration.ShapleyImportanceEvaluator.rst", "reference/generated/optuna.integration.SkoptSampler.rst", "reference/generated/optuna.integration.SkorchPruningCallback.rst", "reference/generated/optuna.integration.TFKerasPruningCallback.rst", "reference/generated/optuna.integration.TensorBoardCallback.rst", "reference/generated/optuna.integration.TensorFlowPruningHook.rst", "reference/generated/optuna.integration.TorchDistributedTrial.rst", "reference/generated/optuna.integration.WeightsAndBiasesCallback.rst", "reference/generated/optuna.integration.XGBoostPruningCallback.rst", "reference/generated/optuna.integration.allennlp.dump_best_config.rst", "reference/generated/optuna.integration.botorch.qehvi_candidates_func.rst", "reference/generated/optuna.integration.botorch.qei_candidates_func.rst", "reference/generated/optuna.integration.botorch.qparego_candidates_func.rst", "reference/generated/optuna.integration.lightgbm.LightGBMTuner.rst", "reference/generated/optuna.integration.lightgbm.LightGBMTunerCV.rst", "reference/generated/optuna.integration.lightgbm.train.rst", "reference/generated/optuna.load_study.rst", "reference/generated/optuna.logging.disable_default_handler.rst", "reference/generated/optuna.logging.disable_propagation.rst", "reference/generated/optuna.logging.enable_default_handler.rst", "reference/generated/optuna.logging.enable_propagation.rst", "reference/generated/optuna.logging.get_verbosity.rst", "reference/generated/optuna.logging.set_verbosity.rst", "reference/generated/optuna.pruners.BasePruner.rst", "reference/generated/optuna.pruners.HyperbandPruner.rst", "reference/generated/optuna.pruners.MedianPruner.rst", "reference/generated/optuna.pruners.NopPruner.rst", "reference/generated/optuna.pruners.PatientPruner.rst", "reference/generated/optuna.pruners.PercentilePruner.rst", "reference/generated/optuna.pruners.SuccessiveHalvingPruner.rst", "reference/generated/optuna.pruners.ThresholdPruner.rst", "reference/generated/optuna.storages.RDBStorage.rst", "reference/generated/optuna.storages.RedisStorage.rst", "reference/generated/optuna.storages.RetryFailedTrialCallback.rst", "reference/generated/optuna.storages.fail_stale_trials.rst", "reference/generated/optuna.study.MaxTrialsCallback.rst", "reference/generated/optuna.study.Study.rst", "reference/generated/optuna.study.StudyDirection.rst", "reference/generated/optuna.study.StudySummary.rst", "reference/generated/optuna.study.copy_study.rst", "reference/generated/optuna.study.create_study.rst", "reference/generated/optuna.study.delete_study.rst", "reference/generated/optuna.study.get_all_study_summaries.rst", "reference/generated/optuna.study.load_study.rst", "reference/generated/optuna.trial.FixedTrial.rst", "reference/generated/optuna.trial.FrozenTrial.rst", "reference/generated/optuna.trial.Trial.rst", "reference/generated/optuna.trial.TrialState.rst", "reference/generated/optuna.trial.create_trial.rst", "reference/importance.rst", "reference/index.rst", "reference/integration.rst", "reference/logging.rst", "reference/multi_objective/generated/optuna.multi_objective.samplers.BaseMultiObjectiveSampler.rst", "reference/multi_objective/generated/optuna.multi_objective.samplers.MOTPEMultiObjectiveSampler.rst", "reference/multi_objective/generated/optuna.multi_objective.samplers.NSGAIIMultiObjectiveSampler.rst", "reference/multi_objective/generated/optuna.multi_objective.samplers.RandomMultiObjectiveSampler.rst", "reference/multi_objective/generated/optuna.multi_objective.study.MultiObjectiveStudy.rst", "reference/multi_objective/generated/optuna.multi_objective.study.create_study.rst", "reference/multi_objective/generated/optuna.multi_objective.study.load_study.rst", "reference/multi_objective/generated/optuna.multi_objective.trial.FrozenMultiObjectiveTrial.rst", "reference/multi_objective/generated/optuna.multi_objective.trial.MultiObjectiveTrial.rst", "reference/multi_objective/generated/optuna.multi_objective.visualization.plot_pareto_front.rst", "reference/multi_objective/index.rst", "reference/multi_objective/samplers.rst", "reference/multi_objective/study.rst", "reference/multi_objective/trial.rst", "reference/multi_objective/visualization.rst", "reference/optuna.rst", "reference/pruners.rst", "reference/samplers/generated/optuna.samplers.BaseSampler.rst", "reference/samplers/generated/optuna.samplers.CmaEsSampler.rst", "reference/samplers/generated/optuna.samplers.GridSampler.rst", "reference/samplers/generated/optuna.samplers.IntersectionSearchSpace.rst", "reference/samplers/generated/optuna.samplers.MOTPESampler.rst", "reference/samplers/generated/optuna.samplers.NSGAIISampler.rst", "reference/samplers/generated/optuna.samplers.PartialFixedSampler.rst", "reference/samplers/generated/optuna.samplers.QMCSampler.rst", "reference/samplers/generated/optuna.samplers.RandomSampler.rst", "reference/samplers/generated/optuna.samplers.TPESampler.rst", "reference/samplers/generated/optuna.samplers.intersection_search_space.rst", "reference/samplers/generated/optuna.samplers.nsgaii.BLXAlphaCrossover.rst", "reference/samplers/generated/optuna.samplers.nsgaii.BaseCrossover.rst", "reference/samplers/generated/optuna.samplers.nsgaii.SBXCrossover.rst", "reference/samplers/generated/optuna.samplers.nsgaii.SPXCrossover.rst", "reference/samplers/generated/optuna.samplers.nsgaii.UNDXCrossover.rst", "reference/samplers/generated/optuna.samplers.nsgaii.UniformCrossover.rst", "reference/samplers/generated/optuna.samplers.nsgaii.VSBXCrossover.rst", "reference/samplers/index.rst", "reference/samplers/nsgaii.rst", "reference/storages.rst", "reference/study.rst", "reference/trial.rst", "reference/visualization/generated/optuna.visualization.is_available.rst", "reference/visualization/generated/optuna.visualization.matplotlib.is_available.rst", "reference/visualization/generated/optuna.visualization.matplotlib.plot_contour.rst", "reference/visualization/generated/optuna.visualization.matplotlib.plot_edf.rst", "reference/visualization/generated/optuna.visualization.matplotlib.plot_intermediate_values.rst", "reference/visualization/generated/optuna.visualization.matplotlib.plot_optimization_history.rst", "reference/visualization/generated/optuna.visualization.matplotlib.plot_parallel_coordinate.rst", "reference/visualization/generated/optuna.visualization.matplotlib.plot_param_importances.rst", "reference/visualization/generated/optuna.visualization.matplotlib.plot_pareto_front.rst", "reference/visualization/generated/optuna.visualization.matplotlib.plot_slice.rst", "reference/visualization/generated/optuna.visualization.plot_contour.rst", "reference/visualization/generated/optuna.visualization.plot_edf.rst", "reference/visualization/generated/optuna.visualization.plot_intermediate_values.rst", "reference/visualization/generated/optuna.visualization.plot_optimization_history.rst", "reference/visualization/generated/optuna.visualization.plot_parallel_coordinate.rst", "reference/visualization/generated/optuna.visualization.plot_param_importances.rst", "reference/visualization/generated/optuna.visualization.plot_pareto_front.rst", "reference/visualization/generated/optuna.visualization.plot_slice.rst", "reference/visualization/index.rst", "reference/visualization/matplotlib.rst", "tutorial/10_key_features/001_first.rst", "tutorial/10_key_features/002_configurations.rst", "tutorial/10_key_features/003_efficient_optimization_algorithms.rst", "tutorial/10_key_features/004_distributed.rst", "tutorial/10_key_features/005_visualization.rst", "tutorial/10_key_features/index.rst", "tutorial/10_key_features/sg_execution_times.rst", "tutorial/20_recipes/001_rdb.rst", "tutorial/20_recipes/002_multi_objective.rst", "tutorial/20_recipes/003_attributes.rst", "tutorial/20_recipes/004_cli.rst", "tutorial/20_recipes/005_user_defined_sampler.rst", "tutorial/20_recipes/006_user_defined_pruner.rst", "tutorial/20_recipes/007_optuna_callback.rst", "tutorial/20_recipes/008_specify_params.rst", "tutorial/20_recipes/009_ask_and_tell.rst", "tutorial/20_recipes/010_reuse_best_trial.rst", "tutorial/20_recipes/index.rst", "tutorial/20_recipes/sg_execution_times.rst", "tutorial/index.rst"], "titles": ["FAQ", "Optuna: A hyperparameter optimization framework", "Installation", "Privacy Policy", "optuna.cli", "optuna.distributions", "optuna.exceptions", "optuna.TrialPruned", "optuna.copy_study", "optuna.create_study", "optuna.delete_study", "optuna.distributions.CategoricalDistribution", "optuna.distributions.DiscreteUniformDistribution", "optuna.distributions.FloatDistribution", "optuna.distributions.IntDistribution", "optuna.distributions.IntLogUniformDistribution", "optuna.distributions.IntUniformDistribution", "optuna.distributions.LogUniformDistribution", "optuna.distributions.UniformDistribution", "optuna.distributions.check_distribution_compatibility", "optuna.distributions.distribution_to_json", "optuna.distributions.json_to_distribution", "optuna.exceptions.CLIUsageError", "optuna.exceptions.DuplicatedStudyError", "optuna.exceptions.OptunaError", "optuna.exceptions.StorageInternalError", "optuna.exceptions.TrialPruned", "optuna.get_all_study_summaries", "optuna.importance.FanovaImportanceEvaluator", "optuna.importance.MeanDecreaseImpurityImportanceEvaluator", "optuna.importance.get_param_importances", "optuna.integration.AllenNLPExecutor", "optuna.integration.AllenNLPPruningCallback", "optuna.integration.BoTorchSampler", "optuna.integration.CatBoostPruningCallback", "optuna.integration.CatalystPruningCallback", "optuna.integration.ChainerMNStudy", "optuna.integration.ChainerPruningExtension", "optuna.integration.CmaEsSampler", "optuna.integration.FastAIPruningCallback", "optuna.integration.FastAIV1PruningCallback", "optuna.integration.FastAIV2PruningCallback", "optuna.integration.KerasPruningCallback", "optuna.integration.LightGBMPruningCallback", "optuna.integration.MLflowCallback", "optuna.integration.MXNetPruningCallback", "optuna.integration.OptunaSearchCV", "optuna.integration.PyCmaSampler", "optuna.integration.PyTorchIgnitePruningHandler", "optuna.integration.PyTorchLightningPruningCallback", "optuna.integration.ShapleyImportanceEvaluator", "optuna.integration.SkoptSampler", "optuna.integration.SkorchPruningCallback", "optuna.integration.TFKerasPruningCallback", "optuna.integration.TensorBoardCallback", "optuna.integration.TensorFlowPruningHook", "optuna.integration.TorchDistributedTrial", "optuna.integration.WeightsAndBiasesCallback", "optuna.integration.XGBoostPruningCallback", "optuna.integration.allennlp.dump_best_config", "optuna.integration.botorch.qehvi_candidates_func", "optuna.integration.botorch.qei_candidates_func", "optuna.integration.botorch.qparego_candidates_func", "optuna.integration.lightgbm.LightGBMTuner", "optuna.integration.lightgbm.LightGBMTunerCV", "optuna.integration.lightgbm.train", "optuna.load_study", "optuna.logging.disable_default_handler", "optuna.logging.disable_propagation", "optuna.logging.enable_default_handler", "optuna.logging.enable_propagation", "optuna.logging.get_verbosity", "optuna.logging.set_verbosity", "optuna.pruners.BasePruner", "optuna.pruners.HyperbandPruner", "optuna.pruners.MedianPruner", "optuna.pruners.NopPruner", "optuna.pruners.PatientPruner", "optuna.pruners.PercentilePruner", "optuna.pruners.SuccessiveHalvingPruner", "optuna.pruners.ThresholdPruner", "optuna.storages.RDBStorage", "optuna.storages.RedisStorage", "optuna.storages.RetryFailedTrialCallback", "optuna.storages.fail_stale_trials", "optuna.study.MaxTrialsCallback", "optuna.study.Study", "optuna.study.StudyDirection", "optuna.study.StudySummary", "optuna.study.copy_study", "optuna.study.create_study", "optuna.study.delete_study", "optuna.study.get_all_study_summaries", "optuna.study.load_study", "optuna.trial.FixedTrial", "optuna.trial.FrozenTrial", "optuna.trial.Trial", "optuna.trial.TrialState", "optuna.trial.create_trial", "optuna.importance", "API Reference", "optuna.integration", "optuna.logging", "optuna.multi_objective.samplers.BaseMultiObjectiveSampler", "optuna.multi_objective.samplers.MOTPEMultiObjectiveSampler", "optuna.multi_objective.samplers.NSGAIIMultiObjectiveSampler", "optuna.multi_objective.samplers.RandomMultiObjectiveSampler", "optuna.multi_objective.study.MultiObjectiveStudy", "optuna.multi_objective.study.create_study", "optuna.multi_objective.study.load_study", "optuna.multi_objective.trial.FrozenMultiObjectiveTrial", "optuna.multi_objective.trial.MultiObjectiveTrial", "optuna.multi_objective.visualization.plot_pareto_front", "optuna.multi_objective", "optuna.multi_objective.samplers", "optuna.multi_objective.study", "optuna.multi_objective.trial", "optuna.multi_objective.visualization", "optuna", "optuna.pruners", "optuna.samplers.BaseSampler", "optuna.samplers.CmaEsSampler", "optuna.samplers.GridSampler", "optuna.samplers.IntersectionSearchSpace", "optuna.samplers.MOTPESampler", "optuna.samplers.NSGAIISampler", "optuna.samplers.PartialFixedSampler", "optuna.samplers.QMCSampler", "optuna.samplers.RandomSampler", "optuna.samplers.TPESampler", "optuna.samplers.intersection_search_space", "optuna.samplers.nsgaii.BLXAlphaCrossover", "optuna.samplers.nsgaii.BaseCrossover", "optuna.samplers.nsgaii.SBXCrossover", "optuna.samplers.nsgaii.SPXCrossover", "optuna.samplers.nsgaii.UNDXCrossover", "optuna.samplers.nsgaii.UniformCrossover", "optuna.samplers.nsgaii.VSBXCrossover", "optuna.samplers", "optuna.samplers.nsgaii", "optuna.storages", "optuna.study", "optuna.trial", "optuna.visualization.is_available", "optuna.visualization.matplotlib.is_available", "optuna.visualization.matplotlib.plot_contour", "optuna.visualization.matplotlib.plot_edf", "optuna.visualization.matplotlib.plot_intermediate_values", "optuna.visualization.matplotlib.plot_optimization_history", "optuna.visualization.matplotlib.plot_parallel_coordinate", "optuna.visualization.matplotlib.plot_param_importances", "optuna.visualization.matplotlib.plot_pareto_front", "optuna.visualization.matplotlib.plot_slice", "optuna.visualization.plot_contour", "optuna.visualization.plot_edf", "optuna.visualization.plot_intermediate_values", "optuna.visualization.plot_optimization_history", "optuna.visualization.plot_parallel_coordinate", "optuna.visualization.plot_param_importances", "optuna.visualization.plot_pareto_front", "optuna.visualization.plot_slice", "optuna.visualization", "optuna.visualization.matplotlib", "1. Lightweight, versatile, and platform agnostic architecture", "2. Pythonic Search Space", "3. Efficient Optimization Algorithms", "4. Easy Parallelization", "5. Quick Visualization for Hyperparameter Optimization Analysis", "Key Features", "Computation times", "Saving/Resuming Study with RDB Backend", "Multi-objective Optimization with Optuna", "User Attributes", "Command-Line Interface", "User-Defined Sampler", "User-Defined Pruner", "Callback for Study.optimize", "Specify Hyperparameters Manually", "Ask-and-Tell Interface", "Re-use the best trial", "Recipes", "Computation times", "Tutorial"], "terms": {"compat": [0, 11, 19, 38, 53, 81], "most": [0, 74, 98, 101, 127, 165, 171, 179], "": [0, 3, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 32, 33, 34, 35, 38, 44, 45, 46, 47, 51, 55, 61, 63, 64, 66, 67, 69, 70, 71, 72, 74, 75, 79, 81, 86, 89, 90, 91, 93, 96, 99, 101, 103, 104, 105, 106, 107, 108, 109, 111, 112, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 135, 142, 145, 146, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 163, 165, 166, 168, 170, 171, 175, 177, 178, 179, 182], "easi": [0, 1, 138, 163, 168, 169, 170, 182], "those": [0, 44, 57, 84, 145, 146, 148, 154, 156, 174, 177], "pleas": [0, 1, 4, 8, 9, 10, 27, 28, 29, 31, 33, 34, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 56, 57, 58, 63, 64, 66, 69, 70, 74, 79, 81, 82, 86, 89, 90, 91, 92, 93, 94, 95, 96, 98, 103, 104, 105, 106, 107, 108, 109, 111, 117, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 134, 136, 138, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 159, 161, 166, 167, 170, 173, 174, 175], "refer": [0, 9, 28, 29, 31, 33, 34, 36, 37, 38, 40, 41, 42, 43, 44, 45, 47, 48, 50, 51, 56, 57, 58, 65, 69, 74, 79, 81, 86, 90, 94, 95, 96, 99, 103, 104, 105, 106, 107, 108, 111, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 134, 136, 145, 146, 147, 148, 149, 150, 151, 152, 159, 167, 170, 174, 175], "exampl": [0, 4, 7, 8, 9, 10, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 98, 104, 106, 107, 108, 109, 112, 119, 121, 122, 124, 126, 127, 128, 129, 138, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 170, 171, 172, 173, 176, 177, 178, 179, 182], "There": [0, 42, 67, 71, 72], "wai": [0, 130, 174, 179], "realiz": [0, 129], "first": [0, 28, 29, 30, 43, 47, 50, 51, 61, 68, 74, 79, 83, 86, 96, 121, 127, 150, 158, 163, 174, 176, 179], "callabl": [0, 28, 29, 30, 32, 33, 36, 46, 50, 63, 64, 81, 82, 86, 104, 107, 124, 125, 129, 145, 146, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160], "class": [0, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 17, 18, 24, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 94, 95, 96, 97, 101, 103, 104, 105, 106, 107, 110, 111, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 165, 170, 174, 175, 176, 178], "purpos": [0, 175], "follow": [0, 1, 7, 26, 46, 63, 64, 71, 72, 81, 82, 86, 98, 104, 105, 112, 117, 120, 121, 122, 124, 125, 127, 129, 131, 134, 136, 138, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 173, 174, 178, 179], "import": [0, 1, 6, 7, 8, 9, 10, 26, 27, 44, 46, 47, 50, 51, 57, 65, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 98, 100, 104, 106, 107, 108, 109, 112, 121, 122, 124, 126, 127, 128, 129, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179], "def": [0, 1, 7, 8, 9, 10, 26, 27, 44, 47, 51, 57, 66, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 104, 106, 107, 108, 109, 112, 121, 122, 124, 126, 127, 128, 129, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179], "__init__": [0, 63, 64, 174, 175, 176], "self": [0, 46, 63, 64, 86, 107, 174, 175, 176], "min_x": 0, "max_x": 0, "hold": [0, 84], "thi": [0, 3, 4, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 25, 26, 28, 29, 30, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 56, 57, 61, 63, 64, 65, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 88, 90, 94, 95, 96, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 163, 165, 166, 167, 170, 171, 172, 174, 175, 176, 177, 178, 179], "implement": [0, 4, 9, 28, 29, 33, 38, 46, 47, 50, 51, 66, 73, 74, 75, 76, 77, 78, 79, 80, 86, 90, 93, 99, 101, 102, 103, 104, 105, 106, 108, 109, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 132, 138, 141, 165, 171, 176], "specif": [0, 5, 6, 24, 86, 96, 101, 120, 125, 138, 151, 159, 171, 174, 177], "field": [0, 86, 95, 107, 110], "__call__": [0, 176], "calcul": [0, 50, 104, 123, 124, 129, 174, 178, 179], "an": [0, 1, 5, 7, 9, 10, 12, 13, 14, 16, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 66, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 90, 91, 92, 93, 94, 95, 96, 97, 101, 103, 104, 105, 106, 107, 109, 111, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 158, 159, 163, 165, 166, 170, 172, 179], "extra": 0, "suggest_float": [0, 1, 7, 8, 9, 10, 12, 13, 17, 18, 26, 27, 44, 47, 51, 56, 57, 66, 74, 75, 76, 77, 78, 79, 81, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 104, 106, 107, 108, 109, 111, 112, 121, 122, 124, 126, 127, 128, 129, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179], "execut": [0, 1, 33, 37, 38, 46, 47, 51, 79, 81, 82, 103, 104, 105, 106, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 143, 144, 163, 166, 169, 174, 181], "instanc": [0, 33, 37, 38, 46, 47, 51, 59, 63, 64, 81, 82, 95, 103, 104, 105, 106, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 142, 154], "create_studi": [0, 1, 7, 8, 10, 26, 27, 44, 47, 51, 57, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 89, 91, 92, 93, 95, 96, 104, 106, 107, 109, 112, 121, 122, 124, 126, 127, 128, 129, 141, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179], "100": [0, 1, 7, 26, 74, 75, 76, 77, 78, 79, 80, 81, 94, 96, 122, 138, 145, 148, 149, 150, 152, 153, 156, 157, 158, 160, 163, 164, 165, 166, 167, 173, 174, 175, 177, 178], "n_trial": [0, 1, 4, 7, 8, 9, 10, 26, 27, 36, 44, 46, 47, 51, 57, 61, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 85, 86, 88, 89, 90, 91, 92, 93, 95, 96, 104, 106, 107, 108, 109, 112, 121, 122, 124, 126, 127, 128, 129, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179], "second": [0, 4, 28, 46, 61, 63, 64, 68, 81, 82, 86, 96, 127, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 178, 179], "you": [0, 1, 2, 3, 9, 28, 31, 32, 34, 36, 37, 40, 41, 42, 43, 45, 48, 49, 53, 54, 55, 56, 57, 58, 63, 64, 68, 74, 81, 82, 85, 86, 90, 107, 108, 119, 121, 126, 130, 138, 146, 148, 154, 156, 163, 164, 165, 166, 167, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 182], "lambda": [0, 28, 29, 30, 50, 146, 150, 154, 158, 167, 171], "functool": 0, "partial": [0, 126, 165, 179], "creat": [0, 1, 8, 9, 33, 44, 46, 57, 63, 64, 68, 70, 71, 81, 82, 86, 89, 90, 98, 105, 107, 108, 117, 124, 125, 127, 129, 131, 132, 141, 161, 163, 165, 170, 173, 174, 176, 177, 178], "closur": 0, "below": [0, 1, 63, 64, 140, 165, 166, 175, 182], "take": [0, 27, 28, 33, 38, 47, 51, 73, 74, 75, 76, 77, 78, 79, 80, 92, 99, 103, 104, 107, 120, 121, 122, 124, 125, 126, 127, 128, 129, 133, 137, 151, 159, 161, 164, 175, 176, 177, 178], "three": [0, 33, 60, 62, 120, 135, 151, 159, 174, 178], "abov": [0, 120, 127, 163, 166, 173, 174, 176, 178, 179], "wrap": [0, 77, 174], "also": [0, 2, 8, 9, 10, 27, 28, 29, 31, 32, 46, 50, 66, 86, 88, 89, 90, 91, 92, 93, 106, 108, 109, 121, 128, 129, 164, 165, 166, 170, 172, 177], "sklearn_addtitional_arg": 0, "py": [0, 79, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181], "reus": 0, "dataset": [0, 1, 7, 26, 34, 46, 63, 64, 74, 75, 76, 77, 78, 79, 96, 165, 167, 171, 172, 175, 177, 178, 179], "instead": [0, 4, 5, 9, 12, 15, 16, 17, 18, 33, 42, 43, 47, 56, 63, 64, 65, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 90, 94, 95, 96, 104, 108, 112, 121, 122, 124, 129, 141, 151, 159, 167, 170, 173, 177, 178], "load": [0, 32, 66, 86, 93, 107, 109, 141], "each": [0, 4, 29, 33, 34, 38, 44, 46, 47, 50, 51, 57, 61, 63, 64, 66, 74, 79, 81, 82, 86, 93, 94, 95, 101, 103, 104, 105, 106, 107, 108, 109, 110, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 163, 165, 166, 171, 174, 178, 179], "ye": [0, 165], "possibl": [0, 4, 46, 74, 79, 127, 129, 130, 177], "In": [0, 1, 9, 28, 31, 33, 38, 44, 47, 49, 51, 57, 74, 90, 94, 95, 98, 103, 104, 105, 106, 108, 120, 121, 122, 124, 125, 126, 127, 128, 129, 136, 143, 144, 161, 163, 164, 170, 174, 175, 177, 178, 179], "simplest": 0, "form": [0, 46, 86, 104, 107, 124, 129, 165], "work": [0, 3, 8, 28, 46, 81, 82, 86, 89, 138, 166, 176, 177, 179], "storag": [0, 1, 8, 9, 10, 11, 19, 23, 25, 27, 32, 49, 66, 86, 89, 90, 91, 92, 93, 100, 108, 109, 129, 166, 170, 172, 173], "If": [0, 4, 8, 9, 12, 13, 14, 16, 19, 28, 29, 30, 31, 33, 34, 43, 44, 45, 46, 47, 50, 51, 57, 61, 63, 64, 66, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 89, 90, 93, 96, 105, 107, 108, 109, 111, 112, 121, 123, 125, 127, 129, 130, 133, 134, 135, 137, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 165, 166, 171, 174, 178, 182], "want": [0, 9, 32, 34, 36, 37, 40, 41, 42, 43, 45, 48, 49, 53, 55, 56, 57, 58, 63, 64, 81, 85, 90, 108, 119, 130, 138, 146, 148, 154, 156, 165, 166, 171, 178, 179, 182], "handi": 0, "sqlite": [0, 4, 8, 10, 27, 66, 81, 83, 89, 91, 92, 93, 109, 166, 170, 172, 173], "local": [0, 121, 170], "study_nam": [0, 4, 8, 9, 10, 27, 44, 66, 74, 81, 82, 86, 88, 89, 90, 91, 92, 93, 108, 109, 146, 154, 166, 170, 173], "foo_studi": 0, "db": [0, 4, 8, 10, 25, 27, 66, 81, 82, 89, 91, 92, 93, 109, 170, 172, 173], "The": [0, 1, 4, 5, 6, 8, 9, 12, 15, 16, 17, 18, 28, 29, 30, 31, 32, 33, 34, 35, 38, 40, 42, 43, 44, 46, 47, 49, 50, 51, 52, 54, 56, 57, 60, 61, 62, 63, 64, 68, 71, 74, 77, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 170, 174, 175, 176, 178], "state": [0, 1, 4, 33, 38, 46, 47, 51, 81, 82, 84, 85, 86, 95, 96, 97, 98, 103, 104, 105, 106, 107, 110, 111, 120, 121, 122, 124, 125, 126, 127, 128, 129, 142, 163, 165, 170, 174, 175, 176, 178], "persist": [0, 9, 90, 108, 170], "file": [0, 4, 31, 55, 59, 68, 70, 86, 169, 170, 173, 181], "see": [0, 1, 8, 9, 10, 12, 15, 16, 17, 18, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 60, 61, 62, 64, 65, 66, 74, 77, 82, 83, 84, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 137, 138, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 159, 163, 164, 165, 166, 167, 170, 174, 176, 177], "backend": [0, 9, 25, 47, 51, 56, 81, 82, 90, 121, 140, 161, 162, 173, 180, 181, 182], "more": [0, 3, 28, 30, 31, 44, 46, 57, 74, 81, 82, 86, 96, 104, 106, 120, 124, 125, 128, 129, 138, 164, 165, 175, 178, 179], "detail": [0, 8, 9, 10, 27, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 47, 48, 56, 57, 58, 63, 66, 74, 79, 81, 86, 89, 90, 91, 92, 93, 94, 95, 96, 104, 106, 107, 108, 109, 111, 121, 124, 127, 128, 129, 138, 165, 167, 174], "depend": [0, 27, 28, 49, 52, 86, 92, 94, 95, 138, 143, 144, 163, 164], "default": [0, 4, 9, 30, 42, 43, 44, 45, 46, 47, 51, 57, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 74, 79, 81, 82, 83, 85, 86, 90, 93, 94, 99, 104, 108, 109, 112, 117, 121, 124, 125, 127, 129, 133, 134, 135, 137, 140, 145, 149, 150, 151, 152, 153, 157, 158, 159, 160, 161, 165, 177], "databas": [0, 8, 9, 10, 27, 66, 82, 89, 90, 91, 92, 93, 108, 109, 140, 166], "like": [0, 28, 29, 31, 37, 45, 50, 57, 96, 111, 138, 166, 170, 173, 179], "usual": [0, 61, 163], "python": [0, 1, 2, 4, 28, 29, 32, 46, 50, 82, 86, 96, 102, 138, 161, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182], "pickl": 0, "joblib": 0, "For": [0, 28, 29, 30, 31, 33, 34, 45, 46, 49, 50, 57, 74, 81, 95, 96, 101, 104, 105, 121, 124, 125, 127, 129, 131, 134, 136, 138, 150, 154, 158, 164, 165, 166, 167, 170, 171, 174, 175, 178, 179], "dump": [0, 172], "pkl": [0, 63, 64], "And": [0, 51], "print": [0, 31, 71, 163, 165, 170, 171, 173, 174, 175, 179], "until": [0, 46, 47, 51, 74, 75, 77, 78, 79, 80, 85, 86, 104, 121, 122, 124, 129], "now": [0, 42, 95, 173], "best_trial": [0, 86, 88, 95, 96, 163, 170, 171, 174], "param": [0, 4, 28, 29, 30, 46, 50, 63, 64, 86, 94, 95, 96, 98, 105, 107, 110, 111, 125, 145, 149, 150, 152, 153, 157, 158, 160, 161, 163, 165, 167, 170, 171, 173, 174, 177, 178], "kei": [0, 4, 28, 29, 30, 31, 44, 46, 50, 81, 82, 86, 96, 107, 111, 122, 123, 130, 171, 172], "item": [0, 83, 171, 174], "f": [0, 4, 68, 70, 86, 104, 124, 147, 155, 165, 171, 175], "note": [0, 19, 43, 44, 47, 51, 59, 63, 64, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 95, 96, 98, 107, 110, 111, 121, 122, 123, 127, 138, 145, 146, 149, 153, 154, 157, 160, 165, 172, 173, 175, 178], "doe": [0, 30, 46, 63, 64, 79, 86, 94, 95, 96, 121, 122, 151, 159, 165, 176, 179], "support": [0, 2, 32, 34, 46, 74, 96, 101, 104, 121, 124, 138, 143, 144, 174, 177, 178], "reload": 0, "across": [0, 86, 101, 166], "differ": [0, 33, 38, 46, 47, 51, 74, 95, 101, 103, 104, 105, 106, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 138, 145, 151, 159, 163, 165, 178], "version": [0, 2, 4, 30, 31, 32, 33, 34, 38, 44, 46, 47, 49, 50, 51, 52, 54, 56, 57, 60, 61, 62, 77, 79, 81, 82, 83, 84, 96, 103, 104, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 137, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 159], "To": [0, 3, 30, 33, 38, 47, 51, 57, 63, 64, 65, 83, 86, 96, 103, 104, 105, 106, 107, 120, 121, 122, 124, 125, 126, 127, 128, 129, 163, 165, 166, 170, 174, 178], "upgrad": [0, 42, 81, 173], "schema": [0, 4, 81, 173], "necessari": [0, 28, 57, 164], "By": [0, 28, 30, 42, 43, 46, 47, 63, 64, 81, 121, 163, 165, 173], "show": [0, 4, 63, 64, 70, 74, 86, 112, 117, 138, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 165, 170, 171, 173, 174, 176, 177, 178, 179], "info": [0, 34, 68, 70, 71, 72, 102], "level": [0, 46, 63, 64, 71, 72, 98, 101, 102], "chang": [0, 1, 12, 15, 16, 17, 18, 30, 31, 32, 33, 34, 35, 38, 40, 42, 44, 46, 47, 50, 51, 54, 56, 57, 60, 61, 62, 63, 64, 74, 77, 79, 82, 83, 84, 94, 95, 96, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 137, 144, 145, 146, 147, 148, 149, 150, 151, 152, 159, 165], "set_verbos": [0, 63, 64, 102], "stop": [0, 4, 9, 34, 66, 67, 68, 70, 74, 75, 77, 79, 85, 86, 90, 93, 122, 165, 175], "warn": [0, 4, 47, 51, 63, 71, 72, 96, 102, 121, 127, 129], "2020": [0, 67, 165, 166], "07": [0, 163, 166], "21": [0, 163, 166, 177], "13": [0, 127, 163, 165, 166, 175, 177], "41": [0, 163, 177], "45": [0, 163, 166, 170, 177], "627": 0, "0": [0, 1, 4, 7, 9, 12, 13, 15, 16, 17, 18, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 40, 41, 42, 44, 46, 47, 49, 50, 51, 52, 54, 56, 57, 60, 61, 62, 63, 64, 66, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 86, 90, 92, 93, 94, 95, 96, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 137, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181], "finish": [0, 4, 8, 33, 38, 47, 51, 57, 67, 71, 72, 75, 78, 81, 82, 86, 89, 95, 97, 104, 110, 120, 121, 122, 124, 125, 126, 127, 128, 129, 138, 165, 166, 170, 171, 173, 176, 177, 178], "disabl": [0, 4, 63, 64, 67, 68, 70, 75, 77, 78, 80, 86], "further": [0, 8, 9, 10, 19, 27, 34, 36, 37, 40, 41, 42, 43, 45, 47, 48, 56, 58, 66, 89, 90, 91, 92, 93, 104, 105, 107, 108, 109, 111, 121, 124, 125, 127, 129, 131, 134, 136, 174], "hyperparamet": [0, 5, 28, 29, 30, 31, 46, 50, 57, 59, 63, 64, 65, 74, 86, 96, 99, 121, 127, 129, 150, 158, 161, 163, 164, 165, 168, 169, 171, 175, 178, 179, 180, 181, 182], "its": [0, 12, 30, 33, 37, 38, 47, 51, 74, 99, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 175], "correspond": [0, 9, 31, 32, 34, 37, 40, 41, 42, 43, 45, 46, 48, 49, 52, 53, 55, 58, 61, 74, 81, 82, 86, 90, 101, 107, 122, 163, 174], "discard": 0, "intermedi": [0, 43, 74, 75, 77, 78, 79, 80, 81, 82, 95, 96, 98, 101, 110, 111, 119, 147, 155, 165, 175], "neural": [0, 36, 56, 74, 81, 82, 95, 96, 111], "network": [0, 36, 56, 74, 81, 82, 95, 96, 111, 154], "weight": [0, 31, 57, 104, 124, 129], "featur": [0, 12, 15, 16, 17, 18, 29, 30, 31, 32, 33, 34, 35, 38, 40, 42, 44, 46, 47, 50, 51, 54, 56, 57, 60, 61, 62, 63, 64, 65, 75, 77, 78, 82, 83, 84, 86, 94, 95, 96, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 137, 138, 144, 145, 146, 147, 148, 149, 150, 151, 152, 159, 164, 165, 167, 170, 171, 172, 174, 175], "we": [0, 1, 2, 3, 28, 74, 75, 79, 81, 82, 96, 127, 138, 163, 164, 165, 166, 170, 171, 172, 173, 175, 176, 177, 179, 182], "recommend": [0, 2, 11, 28, 46, 74, 81, 86, 96, 104, 107, 111, 121, 122, 124, 127, 129, 138, 141, 164, 165, 166, 182], "number": [0, 4, 27, 28, 29, 30, 32, 33, 38, 44, 46, 47, 50, 51, 54, 57, 58, 60, 61, 62, 63, 64, 74, 75, 78, 79, 80, 81, 82, 83, 85, 86, 88, 92, 94, 95, 96, 101, 103, 104, 105, 106, 107, 110, 111, 120, 121, 122, 124, 125, 126, 127, 128, 129, 132, 138, 163, 165, 166, 170, 171, 175, 176, 177, 178], "order": [0, 28, 30, 44, 46, 57, 63, 64, 70, 81, 82, 83, 86, 107, 112, 122, 151, 159], "identifi": [0, 66, 79, 83, 93, 109, 170], "svm": [0, 1, 46, 96, 164, 172], "svc_c": [0, 164, 172], "1e": [0, 1, 46, 86, 96, 147, 155, 164, 165, 171, 172, 177, 178, 179], "10": [0, 1, 8, 9, 10, 27, 33, 44, 46, 51, 57, 66, 67, 68, 70, 71, 72, 74, 75, 78, 80, 81, 85, 86, 89, 90, 91, 92, 93, 98, 104, 106, 124, 126, 128, 129, 138, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 160, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179], "1e10": [0, 1, 46, 164, 172], "true": [0, 1, 6, 7, 11, 12, 13, 14, 15, 16, 17, 18, 26, 27, 30, 31, 32, 38, 44, 46, 47, 51, 57, 63, 64, 74, 75, 76, 77, 78, 79, 81, 82, 86, 92, 96, 104, 107, 121, 123, 124, 125, 127, 129, 130, 143, 144, 147, 151, 155, 159, 164, 165, 167, 170, 171, 172, 175, 177, 178, 179], "clf": [0, 7, 26, 46, 74, 75, 76, 77, 78, 79, 96, 165, 172, 175, 178, 179], "sklearn": [0, 1, 7, 26, 28, 29, 46, 50, 74, 75, 76, 77, 78, 79, 96, 164, 165, 167, 172, 175, 177, 178, 179], "svc": [0, 46, 96, 164, 172], "c": [0, 1, 2, 46, 86, 164, 172, 178, 179], "fit": [0, 1, 28, 29, 40, 41, 46, 50, 96, 129, 178, 179], "x_train": [0, 1, 7, 26, 74, 75, 76, 77, 78, 79, 96, 175, 178, 179], "y_train": [0, 1, 7, 26, 74, 75, 76, 77, 78, 79, 96, 175, 178, 179], "open": [0, 68, 70], "format": [0, 4, 20, 21, 49, 52, 99, 163, 164, 165, 170, 171, 173], "wb": 0, "fout": 0, "accuracy_scor": [0, 167, 177, 179], "y_valid": [0, 7, 26, 74, 75, 76, 77, 78, 79, 96, 175, 178], "predict": [0, 1, 28, 29, 46, 50, 167, 177, 179], "x_valid": [0, 7, 26, 74, 75, 76, 77, 78, 79, 96, 175, 178], "rb": 0, "fin": 0, "best_clf": 0, "paramet": [0, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 165, 166, 167, 170, 171, 173, 174, 176, 177], "specifi": [0, 4, 9, 23, 27, 28, 29, 30, 31, 33, 37, 38, 43, 46, 47, 50, 51, 63, 64, 66, 74, 78, 79, 81, 82, 83, 86, 90, 92, 93, 95, 96, 98, 103, 104, 105, 106, 108, 109, 112, 120, 121, 122, 124, 125, 126, 127, 128, 129, 133, 134, 135, 137, 145, 146, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 165, 171, 173, 176, 180, 181, 182], "fix": [0, 74, 86, 94, 96, 107, 122, 126, 165], "random": [0, 28, 29, 33, 38, 46, 47, 50, 51, 63, 64, 103, 104, 105, 106, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 165, 167, 174], "seed": [0, 28, 29, 33, 38, 46, 47, 50, 51, 63, 64, 74, 103, 104, 105, 106, 120, 121, 122, 124, 125, 126, 127, 128, 129, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 160, 167], "via": [0, 2, 30, 34, 44, 47, 51, 96, 121, 127, 167, 170, 172, 177], "sampler": [0, 1, 4, 9, 11, 12, 13, 14, 15, 16, 17, 18, 28, 33, 38, 47, 51, 66, 74, 86, 90, 93, 100, 107, 108, 109, 113, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 160, 167, 178, 180, 181, 182], "tpesampl": [0, 9, 47, 51, 63, 64, 66, 74, 86, 90, 93, 104, 121, 124, 127, 138, 145, 147, 148, 149, 152, 153, 155, 156, 157, 160, 165, 167], "behav": [0, 179], "determinist": [0, 28, 63, 64], "prune": [0, 1, 4, 6, 7, 26, 32, 34, 35, 37, 40, 41, 42, 43, 45, 46, 48, 49, 51, 52, 53, 55, 58, 73, 74, 75, 76, 77, 78, 79, 80, 86, 95, 96, 97, 101, 111, 118, 119, 121, 123, 125, 129, 130, 138, 167, 177, 178, 179], "hyperbandprun": [0, 121, 165, 178], "hash": [0, 74], "howev": [0, 33, 46, 104, 121, 124, 163, 165, 173], "caveat": 0, "mode": [0, 57, 68, 70], "inher": 0, "non": [0, 9, 30, 77, 90, 108, 122, 151, 159, 165], "determin": [0, 33, 47, 51, 74, 79, 80, 86, 94, 96, 111, 119, 120, 121, 123, 127, 130, 151, 159, 174, 175], "thu": [0, 33, 38, 47, 49, 51, 52, 74, 86, 96, 111, 120, 121, 122, 124, 125, 126, 127, 128, 129, 178], "veri": 0, "difficult": 0, "same": [0, 9, 19, 32, 33, 36, 38, 44, 47, 51, 56, 57, 64, 75, 78, 79, 81, 82, 86, 90, 94, 95, 96, 98, 103, 104, 105, 106, 107, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 151, 159, 166, 174, 175, 177, 179], "condit": [0, 1, 30, 33, 83, 125, 138, 164, 165], "sequenti": [0, 81, 82, 164, 171], "would": [0, 32, 145, 163, 165], "e": [0, 1, 4, 32, 33, 34, 37, 38, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 52, 53, 55, 57, 58, 63, 64, 65, 71, 72, 74, 78, 79, 81, 82, 86, 95, 96, 103, 104, 105, 106, 107, 111, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 134, 146, 154, 165, 166, 167, 170, 174, 175], "even": [0, 8, 83, 86, 89, 173, 175], "were": [0, 165], "cannot": [0, 34, 63, 64, 96, 117, 121, 122, 127, 151, 159, 161, 174], "deal": 0, "problem": [0, 46, 81, 82, 95, 98, 104, 121, 124, 129, 171, 179], "set": [0, 1, 9, 31, 32, 34, 44, 46, 47, 51, 56, 57, 61, 63, 64, 72, 74, 81, 82, 83, 85, 86, 87, 88, 90, 95, 96, 102, 107, 108, 110, 111, 121, 122, 127, 129, 142, 163, 165, 170, 171, 172, 173, 175, 176, 177], "option": [0, 8, 9, 28, 29, 30, 31, 32, 33, 34, 36, 38, 43, 44, 46, 47, 50, 51, 56, 57, 60, 61, 62, 63, 64, 66, 77, 80, 81, 82, 83, 85, 86, 88, 89, 90, 93, 95, 96, 98, 99, 103, 104, 105, 106, 107, 108, 109, 111, 112, 120, 121, 122, 124, 125, 126, 127, 128, 129, 133, 134, 135, 137, 138, 145, 146, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 164, 175], "g": [0, 1, 4, 32, 34, 37, 40, 41, 42, 43, 44, 45, 48, 49, 52, 53, 55, 57, 58, 63, 64, 65, 71, 72, 74, 78, 79, 81, 82, 95, 96, 111, 120, 122, 129, 170, 174], "behavior": [0, 9, 28, 74, 86, 90, 107, 108, 125, 129, 174], "target": [0, 28, 29, 30, 33, 34, 38, 43, 46, 47, 50, 51, 73, 74, 75, 76, 77, 78, 79, 80, 103, 104, 105, 106, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 145, 146, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 165, 167, 171, 172, 175, 177], "provid": [0, 4, 5, 9, 36, 44, 45, 46, 47, 51, 56, 57, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 90, 96, 99, 107, 111, 121, 127, 130, 140, 142, 161, 163, 164, 165, 167, 170, 172, 173, 174, 177, 178, 179], "rais": [0, 6, 7, 8, 9, 22, 23, 25, 26, 30, 34, 44, 46, 63, 64, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 89, 90, 96, 101, 108, 111, 118, 123, 147, 155, 165, 174, 175, 176], "catch": [0, 36, 86, 107], "treat": 0, "failur": [0, 81, 83, 84, 96], "statu": [0, 31, 95, 110], "all": [0, 11, 27, 28, 29, 30, 33, 42, 44, 46, 50, 56, 57, 70, 74, 75, 78, 79, 81, 82, 85, 86, 92, 94, 96, 107, 111, 112, 122, 125, 127, 129, 138, 145, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 163, 165, 166, 170, 175, 176, 178, 182], "trialprun": [0, 6, 34, 74, 75, 76, 77, 78, 79, 80, 86, 96, 97, 101, 118, 147, 155, 165, 175, 176], "propag": [0, 68, 70], "caller": [0, 174], "other": [0, 4, 15, 28, 29, 32, 34, 50, 51, 56, 81, 83, 86, 118, 121, 125, 138, 140, 170, 174, 175, 178, 179], "word": 0, "abort": 0, "It": [0, 1, 7, 8, 11, 19, 26, 27, 28, 33, 46, 63, 64, 65, 81, 82, 86, 89, 92, 107, 121, 125, 129, 151, 159, 166, 173, 175, 177], "might": [0, 86, 180, 182], "desir": [0, 9, 90, 108, 177], "continu": [0, 15, 33, 34, 46, 85, 86, 96, 111, 131, 132, 133, 134, 135, 136, 137, 163, 165], "remain": [0, 119, 129, 138], "so": [0, 46, 47, 51, 54, 66, 74, 93, 120, 121, 123, 127, 130, 142, 163, 164, 171, 173, 176, 177, 178, 179], "type": [0, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 44, 46, 47, 50, 51, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 103, 104, 105, 106, 107, 108, 109, 111, 112, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 174], "caught": 0, "insid": [0, 57, 79, 86, 98, 163, 172, 174], "find": [0, 1, 3, 63, 96, 137, 163, 177], "w": [0, 57, 68, 70], "2018": [0, 173], "12": [0, 163, 165, 170, 177], "16": [0, 72, 147, 155, 163, 165, 170, 177], "38": [0, 163, 177], "36": [0, 163, 171, 177], "889": 0, "trialstat": [0, 33, 38, 47, 51, 81, 82, 83, 85, 86, 95, 98, 107, 110, 120, 121, 122, 124, 125, 126, 127, 128, 129, 163, 170, 175, 176, 178], "becaus": [0, 34, 47, 51, 74, 166, 174, 179], "error": [0, 1, 4, 7, 23, 24, 25, 26, 30, 46, 58, 63, 64, 71, 72, 81, 82, 86, 96, 97, 102, 138, 148, 156, 165, 172, 175], "valueerror": [0, 63, 64, 81, 82, 123], "A": [0, 4, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 53, 55, 56, 58, 61, 63, 64, 66, 68, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 88, 90, 93, 94, 95, 96, 103, 104, 105, 106, 107, 108, 109, 111, 112, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 165, 166, 170, 172, 174, 176, 177], "sampl": [0, 1, 33, 38, 46, 47, 51, 63, 64, 81, 82, 86, 95, 96, 103, 104, 105, 106, 107, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 134, 138, 164, 174, 177, 178], "check": [0, 19, 32, 42, 43, 66, 68, 75, 77, 78, 80, 81, 82, 84, 93, 95, 96, 138, 163, 166, 171, 175], "trials_datafram": [0, 46, 86, 170], "system_attr": [0, 86, 88, 95, 96, 98, 107, 111, 163, 170], "complet": [0, 4, 28, 29, 30, 50, 74, 75, 78, 79, 81, 82, 85, 86, 95, 97, 98, 99, 123, 129, 130, 138, 146, 150, 151, 154, 158, 159, 163, 165, 170, 174, 175, 177], "1269": 0, "float": [0, 11, 12, 13, 14, 15, 16, 17, 18, 28, 29, 30, 31, 33, 36, 38, 46, 47, 50, 51, 56, 63, 64, 77, 78, 80, 81, 82, 86, 94, 95, 96, 98, 104, 105, 107, 111, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 137, 138, 145, 146, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 164, 175], "shown": [0, 7, 26, 69, 151, 159, 173], "59": [0, 72, 163, 171, 177], "000": [0, 166, 169], "sinc": [0, 4, 44, 54, 61, 63, 64, 95, 122], "call": [0, 19, 28, 29, 31, 33, 34, 38, 43, 46, 47, 50, 51, 56, 57, 59, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 96, 101, 103, 104, 105, 106, 107, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 163, 165, 170, 174, 175, 176, 178], "api": [0, 1, 42, 44, 57, 58, 65, 98, 101, 127, 163, 174, 177, 178], "suggest_int": [0, 1, 5, 14, 15, 16, 47, 51, 96, 111, 121, 122, 126, 127, 129, 150, 158, 164, 167, 171, 177], "rang": [0, 7, 11, 12, 13, 14, 15, 16, 17, 18, 26, 28, 47, 74, 75, 76, 77, 78, 79, 86, 96, 104, 121, 123, 124, 130, 147, 155, 163, 164, 165, 171, 175, 178], "individu": [0, 77, 105, 125, 131, 132, 133, 134, 135, 136, 137, 167], "discuss": 0, "about": [0, 3, 74, 79, 96, 104, 105, 111, 121, 124, 125, 127, 129, 131, 134, 136, 173, 175], "tpe": [0, 33, 38, 47, 51, 86, 120, 121, 122, 124, 125, 126, 127, 128, 129, 165], "http": [0, 2, 3, 12, 15, 16, 17, 18, 28, 30, 31, 32, 33, 34, 35, 38, 40, 42, 44, 46, 47, 50, 51, 54, 56, 57, 60, 61, 62, 77, 82, 83, 84, 94, 95, 96, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 137, 144, 145, 146, 147, 148, 149, 150, 151, 152, 159, 166, 171], "github": [0, 1, 2, 12, 15, 16, 17, 18, 28, 30, 31, 32, 33, 34, 35, 38, 40, 42, 44, 46, 47, 50, 51, 54, 56, 57, 60, 61, 62, 77, 82, 83, 84, 94, 95, 96, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 137, 144, 145, 146, 147, 148, 149, 150, 151, 152, 159], "com": [0, 2, 3, 12, 15, 16, 17, 18, 30, 31, 32, 33, 34, 35, 38, 40, 42, 44, 46, 47, 50, 51, 54, 56, 57, 60, 61, 62, 77, 82, 83, 84, 94, 95, 96, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 137, 144, 145, 146, 147, 148, 149, 150, 151, 152, 159, 171], "issu": [0, 1, 33, 34, 38, 47, 51, 103, 104, 105, 106, 120, 121, 122, 124, 125, 126, 127, 128, 129, 166], "822": 0, "cuda": [0, 56, 171], "acceler": [0, 1, 28], "script": [0, 4, 32, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179], "main": [0, 37, 178], "easiest": 0, "cuda_visible_devic": 0, "environ": [0, 31, 32, 59, 63, 64, 81, 83, 143, 144, 170], "On": [0, 32, 51, 121, 129], "termin": [0, 46, 86, 129, 165, 166, 175], "export": [0, 86], "anoth": [0, 8, 77, 86, 89, 107, 129, 138, 166, 179], "program": [0, 4], "guid": [0, 1, 31, 32, 99, 117, 161], "mai": [0, 15, 27, 30, 31, 32, 33, 34, 38, 42, 44, 46, 47, 50, 51, 54, 56, 57, 60, 61, 62, 63, 64, 74, 77, 79, 82, 83, 84, 85, 86, 92, 96, 102, 103, 104, 105, 106, 107, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 137, 138, 144, 145, 146, 147, 148, 149, 150, 151, 152, 159, 166, 175, 179], "prefer": 0, "ones": [0, 103], "case": [0, 4, 9, 33, 38, 44, 46, 47, 51, 57, 74, 81, 86, 90, 103, 104, 105, 106, 108, 120, 121, 122, 124, 125, 126, 127, 128, 129, 143, 144, 154, 161, 177, 178, 179], "fixedtri": 0, "base": [0, 1, 6, 24, 28, 29, 30, 33, 44, 46, 50, 57, 60, 61, 62, 73, 74, 75, 76, 77, 78, 79, 80, 86, 95, 96, 99, 103, 106, 110, 119, 120, 128, 129, 132, 138, 145, 150, 158, 165, 166, 174], "given": [0, 4, 20, 28, 29, 30, 33, 38, 46, 47, 50, 51, 57, 63, 64, 74, 75, 78, 80, 81, 82, 86, 94, 96, 99, 103, 104, 105, 106, 107, 111, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 151, 159, 166], "dictionari": [0, 30, 31, 32, 33, 38, 46, 47, 49, 51, 52, 63, 64, 81, 82, 86, 88, 94, 95, 96, 98, 103, 104, 105, 106, 107, 110, 111, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 163, 175], "input": [0, 46, 59, 99, 171], "arbitrari": 0, "y": [0, 1, 7, 26, 46, 47, 51, 74, 75, 76, 77, 78, 79, 80, 86, 94, 96, 98, 106, 107, 108, 109, 112, 121, 122, 125, 126, 127, 129, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 172, 174, 178, 179], "5": [0, 34, 46, 49, 64, 71, 75, 78, 80, 86, 96, 98, 105, 106, 107, 108, 109, 112, 122, 125, 128, 131, 135, 136, 146, 147, 150, 151, 154, 155, 158, 159, 161, 163, 164, 165, 168, 169, 170, 171, 173, 174, 175, 176, 177, 182], "4": [0, 31, 33, 38, 40, 42, 44, 47, 51, 60, 61, 62, 74, 79, 82, 86, 96, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 120, 121, 122, 124, 125, 126, 127, 128, 129, 138, 143, 146, 147, 150, 151, 154, 155, 158, 159, 163, 164, 165, 167, 168, 169, 170, 171, 174, 175, 176, 177, 182], "write": [0, 140, 166, 173], "unit": [0, 37], "pytest": 0, "test_object": 0, "assert": [0, 27, 66, 68, 70, 76, 86, 92, 93, 94, 95, 96, 98, 109], "footprint": 0, "increas": [0, 4, 27, 42, 51, 86, 92, 121, 122, 164], "try": [0, 74, 86, 170, 177, 178], "period": [0, 81, 82, 86, 165], "garbag": [0, 81, 86], "collector": [0, 81], "gc_after_tri": [0, 86, 107], "gc": [0, 86], "collect": [0, 3, 28, 29, 30, 50, 74, 86, 123, 130, 138], "callback": [0, 32, 34, 35, 40, 41, 42, 43, 44, 45, 46, 49, 52, 53, 54, 57, 58, 63, 64, 81, 82, 83, 84, 85, 86, 101, 107, 165, 167, 177, 180, 181, 182], "less": [0, 12, 13, 14, 15, 16, 17, 18, 60, 75, 78, 80, 95, 96], "ident": [0, 61, 83], "perform": [0, 28, 42, 43, 46, 47, 59, 63, 64, 77, 86, 104, 121, 124, 127, 131, 132, 133, 134, 135, 136, 137, 166, 174], "trade": [0, 46, 74], "off": [0, 46, 74, 81, 96, 165], "could": [0, 119, 138, 175], "neglig": 0, "fast": [0, 28, 105, 125], "otherwis": [0, 9, 11, 12, 13, 14, 15, 16, 17, 18, 33, 34, 46, 63, 64, 79, 81, 82, 86, 90, 96, 107, 108, 127, 143, 144, 175], "therefor": [0, 81, 122], "fals": [0, 9, 11, 12, 13, 14, 15, 16, 17, 18, 31, 34, 44, 46, 51, 57, 63, 64, 76, 81, 82, 83, 86, 90, 95, 96, 107, 108, 111, 112, 121, 123, 127, 129, 130, 143, 144, 148, 156, 163, 167, 170, 171, 174, 175, 177, 178, 179], "similar": [0, 121, 129, 134, 179], "fact": 0, "includ": [0, 1, 4, 12, 13, 14, 15, 16, 17, 18, 27, 31, 33, 38, 46, 47, 51, 58, 61, 81, 82, 83, 86, 92, 96, 101, 103, 104, 105, 106, 107, 112, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 138, 146, 151, 154, 159, 164, 175], "chainermnstudi": 0, "current": [0, 7, 12, 15, 16, 17, 18, 26, 31, 32, 34, 35, 37, 38, 40, 41, 42, 43, 45, 48, 49, 52, 53, 55, 56, 58, 63, 64, 71, 74, 75, 78, 81, 82, 86, 94, 95, 96, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 118, 124, 151, 159, 173, 174, 179], "nor": [0, 33, 151, 159], "here": [0, 125, 151, 159, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179], "replac": [0, 12, 13, 14, 16, 65, 86, 146, 167], "pass": [0, 9, 11, 12, 13, 14, 15, 16, 17, 18, 31, 33, 38, 44, 46, 47, 51, 57, 63, 64, 65, 81, 82, 86, 90, 96, 98, 99, 103, 104, 105, 106, 107, 108, 111, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 142, 146, 148, 154, 156, 161, 163, 167, 170, 174, 177, 178, 179], "turn": [0, 81, 165], "logging_callback": 0, "frozen_tri": 0, "previous_best_valu": 0, "user_attr": [0, 4, 44, 86, 88, 95, 96, 98, 107, 110, 111, 163, 170, 172], "get": [0, 4, 8, 27, 28, 29, 30, 46, 50, 71, 81, 82, 83, 86, 89, 92, 96, 107, 111, 142, 150, 158, 163, 166, 170, 175, 177], "none": [0, 8, 9, 10, 11, 13, 14, 19, 28, 29, 30, 31, 32, 33, 34, 36, 38, 44, 46, 47, 50, 51, 56, 57, 59, 61, 63, 64, 66, 67, 68, 69, 70, 72, 77, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 93, 95, 96, 98, 103, 104, 105, 106, 107, 108, 109, 111, 112, 120, 121, 122, 124, 125, 126, 127, 128, 129, 133, 134, 135, 137, 145, 146, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 163, 170, 174, 175, 176], "best_valu": [0, 86, 95, 163, 170, 173], "set_user_attr": [0, 46, 86, 88, 95, 96, 107, 110, 111, 172], "incorrect": 0, "n_job": [0, 4, 33, 36, 38, 46, 47, 51, 57, 86, 103, 104, 105, 106, 107, 120, 121, 122, 124, 125, 126, 127, 128, 129], "due": [0, 83, 96, 97, 121, 175], "read": [0, 68, 81, 82, 140], "prone": 0, "race": 0, "n": [0, 4, 42, 43, 51, 68, 70, 74, 121, 127, 132, 133, 137, 138, 173], "p": [0, 138, 171], "satisfi": [0, 129], "le": [0, 96], "k": [0, 4, 12, 13, 14, 16, 96, 133, 165], "ani": [0, 1, 4, 12, 13, 17, 18, 32, 33, 34, 38, 44, 46, 47, 51, 57, 63, 64, 65, 74, 79, 81, 82, 83, 86, 88, 94, 95, 96, 97, 98, 103, 104, 105, 106, 107, 111, 120, 121, 122, 124, 125, 126, 127, 128, 129, 137, 151, 159, 172], "interpol": 0, "loss": [0, 34, 37, 40, 41, 48, 55, 64, 65, 163, 175], "These": 0, "flat": 0, "numpi": [0, 7, 26, 46, 74, 75, 76, 77, 78, 79, 96, 111, 131, 132, 133, 134, 135, 136, 137, 167, 174, 175, 177, 178], "np": [0, 7, 26, 74, 75, 76, 77, 78, 79, 96, 167, 174, 175, 177, 178], "matplotlib": [0, 161, 167], "pyplot": [0, 146, 147, 148], "plt": [0, 148], "append": [0, 104, 124, 164, 171, 178], "x_": 0, "sum": [0, 30, 171], "p_": 0, "randomsampl": [0, 28, 47, 51, 74, 121, 127, 138, 146, 150, 154, 158, 165, 174], "1000": [0, 28, 46, 63, 64, 138], "ax": [0, 145, 146, 147, 148, 149, 150, 151, 152], "subplot": 0, "figsiz": 0, "20": [0, 7, 26, 47, 71, 74, 75, 76, 77, 78, 79, 81, 121, 133, 137, 146, 154, 163, 165, 177, 178], "j": [0, 131, 137], "scatter": 0, "marker": 0, "set_xlim": 0, "set_ylim": 0, "set_xlabel": 0, "set_ylabel": 0, "savefig": [0, 148], "sampled_p": 0, "png": 0, "method": [0, 1, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 28, 29, 31, 32, 33, 34, 36, 38, 40, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 55, 56, 57, 63, 64, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 94, 95, 96, 97, 103, 104, 105, 106, 107, 111, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 163, 165, 170, 172, 173, 174, 175, 178], "justifi": 0, "appli": [0, 42, 86, 96, 107, 111, 125, 127], "transform": [0, 33, 46, 131, 132, 133, 134, 135, 136, 137, 171], "u": [0, 3, 82, 143, 144, 163, 166, 173, 178], "uniform": [0, 12, 15, 16, 17, 18, 132, 136, 154, 174], "uni": 0, "interv": [0, 37, 42, 43, 55, 75, 78, 80, 81, 82, 131], "exponenti": [0, 164], "exp": [0, 146, 154, 174], "scale": [0, 1, 13, 14, 33, 38, 47, 51, 96, 103, 104, 105, 106, 120, 121, 122, 124, 125, 126, 127, 128, 129, 166], "furthermor": [0, 121], "independ": [0, 33, 47, 51, 106, 120, 121, 127, 128, 129, 174], "normal": [0, 30, 61, 121, 135], "sum_i": 0, "vector": [0, 178], "dir": [0, 171], "alpha": [0, 7, 26, 74, 75, 76, 77, 78, 79, 131, 165, 175, 178], "verifi": 0, "element": [0, 11, 81, 82], "jacobian": 0, "nsgaiisampl": [0, 9, 90, 131, 132, 133, 134, 135, 136, 137, 138, 139, 151, 159, 165], "botorchsampl": [0, 60, 61, 62, 138], "benchmark": [0, 63, 74, 121, 165], "binh": [0, 107, 108, 109], "korn": [0, 107, 108, 109], "one": [0, 8, 9, 11, 33, 34, 42, 44, 57, 61, 74, 79, 81, 82, 83, 86, 89, 90, 95, 96, 102, 108, 122, 123, 125, 127, 129, 138, 140, 166, 170, 174], "ha": [0, 1, 32, 63, 64, 66, 70, 71, 72, 74, 75, 78, 80, 81, 82, 84, 87, 93, 94, 95, 97, 109, 125, 127, 129, 138, 163, 174, 175, 177, 178], "c_0": 0, "25": [0, 78, 163, 165, 167, 173, 177], "c_1": 0, "8": [0, 34, 77, 83, 96, 127, 129, 151, 163, 165, 166, 177], "7": [0, 34, 35, 96, 163, 165, 167, 170, 171, 175, 176, 177, 178, 179], "solut": [0, 46, 133, 137, 140], "15": [0, 163, 165, 167, 173, 177], "30": [0, 75, 78, 86, 145, 153, 163, 171, 177, 178], "consid": [0, 30, 33, 51, 74, 79, 120, 121, 122, 125, 129, 130, 146, 151, 154, 159, 166, 174, 175, 178, 179], "feasibl": [0, 33, 125, 129, 151, 159], "than": [0, 12, 13, 14, 15, 16, 17, 18, 28, 33, 49, 51, 61, 62, 74, 75, 78, 80, 81, 82, 86, 95, 96, 98, 125, 127, 129, 140, 151, 159, 175, 178], "equal": [0, 12, 13, 14, 15, 16, 17, 18, 33, 49, 96, 125, 129, 136, 151, 159], "zero": [0, 75, 78, 95, 96, 110], "region": [0, 137], "basic": [0, 88, 118, 142, 165], "intersect": [0, 123, 129, 130], "circl": 0, "center": 0, "complement": 0, "c0": 0, "c1": 0, "store": [0, 27, 33, 38, 47, 51, 54, 57, 63, 64, 81, 92, 96, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 178], "user": [0, 1, 5, 6, 8, 15, 19, 28, 29, 31, 34, 44, 46, 50, 57, 63, 64, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 89, 94, 95, 96, 98, 99, 102, 107, 111, 119, 138, 140, 141, 142, 173, 180, 181, 182], "attribut": [0, 4, 8, 12, 28, 29, 44, 46, 50, 56, 63, 64, 81, 82, 86, 87, 88, 89, 94, 95, 96, 97, 98, 107, 110, 111, 131, 132, 133, 134, 135, 136, 137, 142, 173, 180, 181, 182], "restor": [0, 32], "after": [0, 4, 7, 26, 31, 33, 34, 38, 42, 43, 44, 47, 51, 68, 81, 82, 86, 120, 121, 122, 124, 125, 126, 127, 128, 129, 165, 175, 178, 179], "v0": [0, 46, 86, 107, 108, 109, 112, 124, 129, 151, 159], "v1": [0, 31, 44, 49, 53, 82, 86, 107, 108, 109, 112, 151, 159], "constraints_func": [0, 33, 125, 129, 151, 159], "direct": [0, 4, 7, 8, 9, 26, 46, 74, 75, 76, 77, 78, 79, 81, 82, 86, 87, 88, 89, 90, 96, 107, 108, 109, 111, 124, 141, 145, 149, 151, 153, 157, 159, 167, 171, 175, 177, 178, 179], "minim": [0, 1, 4, 9, 46, 74, 75, 79, 81, 82, 87, 90, 104, 106, 107, 108, 109, 112, 119, 124, 145, 149, 151, 153, 157, 159, 163, 171, 172], "32": [0, 1, 163, 164, 177], "timeout": [0, 4, 36, 46, 74, 81, 86, 107, 167, 171, 177], "600": [0, 167, 177], "len": [0, 27, 47, 66, 86, 92, 93, 105, 109, 125, 134, 135, 163, 171, 175], "pareto": [0, 4, 86, 107, 112, 151, 159, 171, 173, 179], "front": [0, 4, 86, 107, 112, 151, 159, 171, 173, 179], "sort": [0, 105, 123, 125, 130, 165, 175], "t": [0, 28, 29, 30, 34, 50, 77, 86, 107, 120, 125, 129, 143, 144, 145, 146, 149, 150, 153, 154, 157, 158, 163, 167, 171, 173, 174, 175], "interest": [0, 102, 163, 174], "exmapl": 0, "code": [0, 1, 96, 112, 118, 122, 131, 134, 135, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182], "kind": [0, 19], "constrain": [0, 62, 121, 125, 138], "soft": 0, "hard": 0, "penal": [0, 129], "unsatisfi": 0, "hand": [0, 32, 51, 121], "must": [0, 9, 11, 12, 13, 14, 15, 16, 17, 18, 30, 33, 34, 44, 46, 57, 58, 59, 63, 64, 78, 80, 81, 82, 83, 85, 86, 90, 95, 96, 98, 99, 112, 122, 123, 125, 127, 129, 151, 159], "adopt": [0, 1, 165], "NOT": [0, 166], "built": [0, 33, 47, 51, 121, 127, 132, 174, 175], "variat": 0, "achiev": [0, 121, 174], "faster": [0, 33, 42, 51, 74, 130, 171, 178], "gil": [0, 46, 86], "while": [0, 46, 64, 85, 137], "limit": [0, 46, 79, 85, 86, 104, 124, 129, 165], "situat": [0, 179], "wait": [0, 83, 97], "request": [0, 1], "etc": [0, 57, 178], "inform": [0, 3, 31, 44, 54, 57, 104, 105, 121, 124, 125, 127, 129, 131, 134, 136], "apirefer": 0, "client": 0, "postgresql": [0, 166, 170], "mysql": [0, 81, 166, 170], "instal": [0, 1, 82, 117, 143, 144, 161], "realli": 0, "receiv": [0, 22, 46, 86], "lot": 0, "tutorialeasyparallel": 0, "heartbeat": [0, 81, 82, 84], "mechan": [0, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 95, 96, 165], "experiment": [0, 30, 31, 32, 33, 34, 38, 44, 46, 47, 50, 51, 54, 56, 57, 60, 61, 62, 77, 82, 83, 84, 86, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 137, 144, 145, 146, 147, 148, 149, 150, 151, 152, 159], "futur": [0, 12, 15, 16, 17, 18, 35, 38, 40, 42, 56, 63, 64, 94, 95, 96, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 124, 125, 129, 151, 159, 167, 177], "typic": [0, 79], "job": [0, 4, 46, 86], "schedul": [0, 12, 15, 16, 17, 18, 35, 38, 40, 42, 56, 63, 64, 94, 95, 96, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 124, 151, 159], "cluster": [0, 81], "left": [0, 44, 57], "remov": [0, 12, 15, 16, 17, 18, 35, 38, 40, 42, 56, 63, 64, 81, 94, 95, 96, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 124, 151, 159, 167, 177], "manual": [0, 34, 74, 79, 86, 127, 166, 180, 181, 182], "wa": [0, 4, 7, 26, 46, 54, 127, 173, 177], "time": [0, 9, 13, 14, 16, 46, 56, 63, 64, 74, 75, 78, 79, 80, 81, 83, 84, 86, 90, 95, 96, 98, 121, 130, 138, 151, 159, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179], "consum": [0, 74], "comput": [0, 29, 33, 46, 50, 74, 121, 125, 129, 135, 151, 159, 165], "record": [0, 19, 81, 82, 129, 165, 170], "everi": [0, 42, 43, 81, 82, 176], "60": [0, 83, 163, 177], "120": [0, 83], "last": [0, 74, 79, 81, 82, 83, 163, 175], "rdbstorag": [0, 9, 83, 84, 90, 108, 129], "url": [0, 4, 8, 9, 10, 27, 66, 81, 82, 83, 89, 90, 91, 92, 93, 108, 109, 170], "heartbeat_interv": [0, 81, 82, 83, 129], "grace_period": [0, 81, 82, 83], "suppos": [0, 7, 19, 26, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 123, 172, 179], "ask": [0, 81, 82, 86, 173, 180, 181, 182], "tell": [0, 7, 26, 81, 82, 86, 173, 180, 181, 182], "explicitli": [0, 81, 86, 178], "retri": [0, 81, 83], "retryfailedtrialcallback": [0, 81], "invok": [0, 1, 46, 56, 63, 64, 81, 82, 86, 120, 122, 173, 174], "begin": [0, 33, 38, 47, 51, 103, 104, 105, 106, 120, 121, 122, 124, 125, 126, 127, 128, 129, 174, 175], "mean": [0, 8, 29, 30, 33, 46, 47, 50, 89, 121, 125, 129, 138, 151, 159, 163, 172, 175], "new": [0, 1, 4, 9, 33, 38, 44, 46, 47, 51, 52, 57, 68, 70, 71, 81, 82, 86, 90, 96, 98, 105, 107, 108, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 165, 166, 173, 174, 176, 177, 182], "start": [0, 4, 63, 64, 70, 75, 78, 88, 95, 96, 110, 111, 121, 163, 166, 173, 176], "failed_trial_callback": [0, 81, 82, 83], "max_retri": [0, 83], "i": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179], "automat": [1, 9, 33, 47, 51, 74, 81, 86, 90, 96, 104, 108, 122, 124, 165, 170], "softwar": 1, "particularli": [1, 81], "design": [1, 127, 154], "machin": [1, 101, 127, 163, 165], "learn": [1, 34, 40, 41, 46, 58, 96, 121, 127, 134, 161, 163, 165, 167, 171, 177], "imper": 1, "defin": [1, 5, 6, 15, 31, 34, 81, 82, 86, 94, 96, 103, 107, 111, 119, 138, 139, 140, 142, 167, 171, 172, 177, 179, 180, 181, 182], "run": [1, 4, 31, 42, 44, 46, 47, 57, 63, 64, 74, 75, 78, 79, 81, 82, 83, 84, 85, 86, 97, 107, 122, 129, 163, 164, 165, 166, 167, 170, 172, 173, 174, 175, 176, 177, 179], "style": [1, 146, 147], "thank": [1, 174], "our": [1, 3, 31, 32, 163, 173], "written": [1, 36, 56, 138, 163, 165], "enjoi": 1, "high": [1, 5, 12, 13, 14, 15, 16, 17, 18, 28, 47, 56, 94, 95, 96, 111, 121, 129, 146, 149, 154, 157, 163, 167, 170, 174, 175], "modular": 1, "can": [1, 2, 3, 4, 9, 28, 29, 30, 31, 32, 37, 42, 44, 46, 50, 54, 57, 63, 64, 65, 74, 75, 78, 81, 82, 83, 86, 90, 94, 96, 98, 107, 108, 120, 121, 124, 126, 129, 142, 146, 148, 154, 156, 163, 164, 165, 166, 167, 170, 172, 173, 174, 175, 176, 178, 179], "dynam": [1, 123, 130], "construct": [1, 94, 96, 129, 131, 132, 133, 134, 135, 136, 137, 175, 177], "search": [1, 4, 28, 31, 33, 38, 46, 47, 51, 61, 74, 96, 103, 104, 105, 106, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 146, 154, 163, 165, 168, 169, 174, 182], "space": [1, 4, 28, 31, 33, 38, 47, 51, 61, 74, 96, 103, 104, 105, 106, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 146, 154, 165, 168, 169, 174, 182], "modern": 1, "function": [1, 4, 5, 19, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 63, 64, 65, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 94, 95, 96, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 111, 113, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 133, 137, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 170, 171, 172, 173, 174, 175, 177, 178, 179], "lightweight": [1, 168, 169, 170, 182], "versatil": [1, 168, 169, 170, 182], "platform": [1, 168, 169, 170, 182], "agnost": [1, 168, 169, 170, 182], "architectur": [1, 129, 168, 169, 170, 182], "handl": [1, 9, 90, 108, 125, 138, 165], "wide": [1, 28], "varieti": 1, "task": [1, 46, 86, 107, 121, 165, 170, 174], "simpl": [1, 46, 47, 51, 64, 65, 121, 127, 163, 170, 175, 178], "few": [1, 28, 163], "requir": [1, 28, 29, 46, 50, 66, 74, 79, 93, 98, 132, 161, 178], "us": [1, 3, 4, 5, 8, 9, 12, 15, 16, 17, 18, 28, 29, 30, 31, 32, 33, 34, 38, 42, 43, 44, 45, 46, 47, 50, 51, 54, 55, 56, 57, 58, 59, 63, 64, 65, 66, 68, 74, 75, 78, 79, 81, 82, 83, 86, 89, 90, 93, 94, 95, 96, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 170, 171, 173, 174, 175, 176, 177, 178, 180, 181, 182], "familiar": [1, 164], "syntax": [1, 164, 178], "loop": [1, 86, 164], "effici": [1, 28, 119, 129, 138, 168, 169, 182], "algorithm": [1, 9, 28, 30, 33, 38, 47, 51, 63, 66, 74, 79, 90, 93, 95, 96, 103, 104, 105, 106, 108, 109, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 135, 136, 137, 138, 150, 158, 168, 169, 174, 182], "art": [1, 165], "unpromis": [1, 9, 32, 34, 35, 37, 40, 41, 42, 43, 45, 48, 49, 52, 53, 55, 58, 66, 90, 93, 165], "trial": [1, 5, 6, 7, 8, 9, 10, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 63, 64, 66, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 112, 113, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 138, 140, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 170, 171, 173, 174, 175, 177, 178, 180, 181, 182], "parallel": [1, 4, 33, 38, 46, 47, 49, 51, 56, 57, 63, 64, 65, 74, 86, 103, 104, 105, 106, 120, 121, 122, 124, 125, 126, 127, 128, 129, 138, 165, 168, 169, 170, 182], "studi": [1, 7, 8, 9, 10, 23, 26, 27, 28, 29, 30, 32, 33, 36, 38, 44, 46, 47, 49, 50, 51, 57, 59, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 111, 112, 113, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 165, 167, 171, 173, 174, 175, 177, 178, 179, 180, 181, 182], "ten": 1, "hundr": [1, 129], "worker": [1, 56, 122, 127, 129], "littl": 1, "quick": [1, 161, 168, 169, 182], "visual": [1, 100, 113, 168, 169, 171, 182], "inspect": 1, "histori": [1, 27, 34, 86, 92, 107, 140, 148, 156, 166, 167], "from": [1, 2, 4, 5, 6, 7, 8, 26, 30, 31, 33, 44, 46, 49, 52, 57, 68, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 89, 95, 96, 98, 99, 106, 118, 119, 120, 121, 124, 125, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 145, 163, 165, 166, 167, 174, 175, 177, 178, 179], "plot": [1, 30, 57, 112, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161], "term": [1, 3, 86, 138], "object": [1, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "singl": [1, 9, 11, 12, 13, 14, 15, 16, 17, 18, 28, 29, 30, 44, 50, 57, 61, 66, 81, 82, 86, 88, 90, 93, 120, 129, 133, 134, 137, 138, 145, 146, 148, 149, 150, 152, 153, 154, 156, 157, 158, 160, 163, 172, 178], "goal": [1, 163], "out": [1, 3, 86, 177], "valu": [1, 4, 5, 9, 11, 12, 13, 14, 15, 16, 17, 18, 28, 29, 30, 31, 33, 34, 38, 43, 44, 46, 47, 50, 51, 57, 60, 61, 62, 66, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 90, 93, 94, 95, 96, 97, 98, 99, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 137, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179], "classifi": [1, 46, 151, 159, 164, 175, 178], "svm_c": 1, "through": [1, 121, 123, 142, 167, 175, 177], "multipl": [1, 4, 34, 57, 66, 74, 79, 86, 93, 96, 120, 123, 127, 129, 130, 137, 146, 148, 154, 156], "autom": [1, 165], "suggest": [1, 4, 5, 9, 31, 33, 38, 47, 51, 57, 66, 86, 90, 93, 94, 95, 96, 98, 103, 104, 105, 106, 108, 109, 110, 111, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 142, 163, 165, 166, 173, 174, 178], "gener": [1, 9, 11, 12, 13, 14, 15, 16, 17, 18, 33, 38, 46, 47, 51, 57, 63, 64, 81, 82, 86, 90, 96, 98, 103, 104, 105, 106, 108, 120, 121, 122, 124, 125, 126, 127, 128, 129, 133, 135, 137, 146, 147, 161, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182], "regressor_nam": 1, "suggest_categor": [1, 11, 94, 96, 111, 129, 145, 148, 149, 152, 153, 156, 157, 160, 164, 175, 178], "svr": 1, "randomforest": [1, 164], "svr_c": 1, "log": [1, 4, 13, 14, 15, 17, 31, 44, 46, 54, 57, 63, 64, 65, 86, 96, 100, 111, 138, 147, 155, 163, 164, 165, 170, 171, 172, 174, 175, 176, 177, 178, 179], "regressor_obj": 1, "els": [1, 86, 129, 164, 171, 174, 176, 178], "rf_max_depth": [1, 164], "2": [1, 4, 8, 9, 10, 27, 34, 40, 41, 42, 44, 47, 51, 52, 57, 61, 66, 72, 80, 81, 82, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 104, 106, 107, 108, 109, 112, 118, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 165, 166, 168, 169, 170, 171, 173, 174, 176, 177, 178, 182], "ensembl": [1, 29, 50, 96, 164], "randomforestregressor": 1, "max_depth": [1, 28, 29, 50, 164], "x": [1, 7, 8, 9, 10, 26, 27, 44, 46, 47, 51, 57, 66, 74, 75, 76, 77, 78, 79, 81, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 98, 104, 106, 107, 108, 109, 112, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 166, 170, 172, 173, 174, 176, 178, 179], "fetch_california_h": 1, "return_x_i": [1, 7, 26, 46, 74, 75, 76, 77, 78, 79, 96, 167, 177, 178], "x_val": 1, "y_val": 1, "model_select": [1, 7, 26, 46, 74, 75, 76, 77, 78, 79, 96, 165, 167, 172, 175, 177, 178, 179], "train_test_split": [1, 7, 26, 74, 75, 76, 77, 78, 79, 96, 165, 167, 175, 177, 178, 179], "random_st": [1, 46, 96, 165, 175, 179], "y_pred": [1, 46], "metric": [1, 31, 32, 34, 37, 40, 41, 42, 43, 44, 45, 48, 49, 52, 53, 54, 55, 57, 58, 64, 80, 167, 177, 179], "mean_squared_error": 1, "return": [1, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 44, 46, 47, 49, 50, 51, 52, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 103, 104, 105, 106, 107, 108, 109, 111, 112, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179], "link": 1, "bug": 1, "report": [1, 7, 26, 34, 37, 43, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 95, 96, 101, 110, 111, 119, 129, 134, 147, 155, 165, 175, 178], "question": 1, "gitter": 1, "interact": 1, "chat": 1, "develop": [1, 2], "stack": 1, "overflow": 1, "ar": [1, 3, 4, 8, 9, 11, 19, 28, 29, 30, 31, 32, 33, 38, 43, 44, 46, 47, 49, 50, 51, 52, 56, 57, 61, 63, 64, 66, 67, 68, 71, 72, 74, 75, 78, 81, 82, 86, 89, 90, 93, 95, 96, 98, 103, 104, 105, 106, 107, 111, 112, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 135, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 165, 167, 171, 172, 173, 174, 175, 177, 178, 182], "welcom": 1, "when": [1, 4, 9, 13, 14, 22, 23, 25, 28, 32, 33, 34, 38, 44, 47, 51, 57, 58, 60, 62, 63, 64, 68, 74, 77, 78, 79, 81, 82, 83, 85, 86, 90, 96, 98, 99, 104, 105, 108, 118, 120, 121, 122, 124, 125, 126, 127, 128, 129, 145, 146, 149, 151, 153, 154, 157, 159, 163, 164, 166, 174, 175, 178], "send": 1, "pull": 1, "mit": 1, "takuya": 1, "akiba": [1, 86, 172], "shotaro": 1, "sano": [1, 86, 172], "toshihiko": 1, "yanas": 1, "takeru": 1, "ohta": 1, "masanori": 1, "koyama": 1, "2019": 1, "next": [1, 33, 61, 79, 86, 107, 174], "kdd": 1, "arxiv": [1, 121], "tutori": [1, 4, 9, 31, 32, 46, 81, 86, 90, 96, 119, 121, 138, 159, 161, 167, 171, 176, 178, 179], "recip": [1, 86, 96], "cli": [1, 22, 31, 100], "distribut": [1, 33, 38, 46, 47, 49, 51, 56, 63, 64, 81, 82, 86, 95, 96, 98, 100, 103, 104, 105, 106, 110, 111, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 146, 154, 163, 166, 167, 170, 174, 177, 178], "except": [1, 4, 7, 32, 36, 46, 64, 81, 82, 86, 100, 103, 107, 118, 138, 176], "integr": [1, 100, 121, 167, 174, 177], "multi_object": [1, 100], "pruner": [1, 9, 32, 43, 66, 86, 90, 93, 95, 96, 100, 111, 167, 177, 178, 180, 181, 182], "faq": [1, 166], "where": [1, 4, 9, 12, 13, 14, 16, 28, 29, 30, 46, 47, 50, 57, 79, 83, 88, 90, 95, 96, 105, 108, 110, 111, 121, 122, 125, 146], "your": [1, 9, 33, 81, 86, 90, 107, 108, 119, 121, 138, 143, 144, 171, 174, 175, 178], "favorit": 1, "ml": [1, 101], "librari": [1, 5, 6, 19, 28, 29, 33, 47, 50, 68, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 96, 102, 111, 121, 140, 141, 165, 174], "how": [1, 3, 28, 29, 33, 46, 49, 50, 52, 86, 98, 112, 120, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 165, 166, 170, 174, 175, 176, 177, 178, 179], "have": [1, 11, 31, 46, 59, 74, 79, 81, 82, 85, 86, 96, 98, 122, 123, 127, 129, 130, 175, 178, 179], "own": [1, 33, 119, 138, 174, 175, 178], "argument": [1, 4, 9, 12, 15, 28, 29, 30, 33, 36, 43, 44, 47, 50, 51, 57, 60, 61, 62, 63, 64, 65, 74, 81, 82, 85, 86, 90, 96, 103, 104, 107, 108, 121, 124, 125, 127, 129, 145, 146, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 164, 166, 167, 170, 175, 176, 177, 178, 179], "without": [1, 4, 30, 31, 32, 33, 34, 38, 44, 46, 47, 50, 51, 54, 56, 57, 60, 61, 62, 75, 77, 78, 82, 83, 84, 86, 97, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 137, 144, 145, 146, 147, 148, 149, 150, 151, 152, 159, 165, 178], "remot": 1, "rdb": [1, 9, 49, 81, 90, 166, 173, 180, 181, 182], "server": [1, 44, 166], "save": [1, 9, 31, 59, 63, 64, 68, 70, 86, 90, 96, 107, 173, 180, 181, 182], "resum": [1, 9, 63, 64, 65, 67, 90, 173, 180, 181, 182], "suppress": [1, 4, 63, 64, 72], "messag": [1, 46, 47, 51, 63, 64, 81, 82, 86, 96, 107, 121, 127, 129, 165, 170, 175, 176, 177], "model": [1, 28, 29, 31, 34, 43, 46, 50, 58, 63, 64, 101, 121, 129, 163, 167, 171, 178], "train": [1, 31, 32, 33, 34, 36, 43, 46, 49, 56, 63, 64, 74, 81, 82, 95, 96, 101, 111, 165, 167, 171, 175, 177, 178, 179], "obtain": [1, 28, 49, 52, 163], "reproduc": [1, 63, 64, 74, 179], "result": [1, 33, 38, 47, 51, 56, 63, 64, 74, 75, 78, 86, 88, 94, 95, 101, 110, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 158, 163, 165, 167, 173, 174, 175, 177, 179], "nan": [1, 33, 46, 80], "what": 1, "happen": [1, 81, 82, 86, 107], "alter": 1, "two": [1, 19, 33, 34, 44, 46, 57, 63, 64, 81, 82, 86, 99, 118, 120, 127, 131, 133, 136, 174, 176, 177, 178], "gpu": [1, 34], "evalu": [1, 28, 29, 30, 31, 32, 33, 34, 37, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 58, 86, 94, 95, 96, 99, 103, 104, 105, 106, 107, 111, 120, 121, 122, 124, 125, 126, 127, 128, 129, 142, 150, 158, 163, 165, 171, 174, 175, 176, 178, 179], "simultan": [1, 86, 120], "test": [1, 11, 12, 13, 14, 15, 16, 17, 18, 42, 53], "my": [1, 44, 57], "do": [1, 33, 38, 47, 51, 86, 96, 103, 104, 105, 106, 111, 120, 121, 122, 124, 125, 126, 127, 128, 129, 166, 175, 178], "avoid": [1, 44, 86, 129, 166], "memori": [1, 9, 81, 83, 86, 90, 108, 140, 165, 176, 177], "oom": [1, 86], "output": [1, 4, 31, 59, 68, 70, 145, 163], "onli": [1, 30, 33, 34, 38, 42, 46, 47, 51, 53, 57, 63, 64, 68, 79, 81, 82, 83, 86, 88, 95, 96, 101, 103, 104, 105, 106, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 142, 146, 154, 173, 174], "best": [1, 27, 46, 59, 63, 64, 75, 78, 79, 81, 82, 86, 88, 92, 129, 151, 159, 163, 165, 166, 170, 173, 174, 176, 177, 180, 181, 182], "updat": [1, 46, 81, 82, 84, 86, 95, 121, 163], "variabl": [1, 31, 32, 46, 59, 104, 124, 163], "which": [1, 4, 30, 31, 32, 34, 37, 40, 41, 42, 43, 45, 46, 48, 49, 53, 55, 57, 58, 64, 65, 76, 77, 78, 80, 81, 83, 86, 94, 96, 105, 107, 111, 119, 120, 121, 125, 126, 127, 129, 135, 138, 140, 150, 158, 163, 167, 170, 171, 172, 173, 175, 176, 177, 178, 179], "repres": [1, 5, 30, 73, 74, 75, 76, 77, 78, 79, 80, 86, 97, 119, 131, 132, 133, 134, 135, 136, 137, 138, 142], "proport": [1, 46], "accord": [1, 43, 74, 81, 96, 101, 133, 154], "dirichlet": 1, "some": [1, 42, 74, 121, 174, 177, 179], "constraint": [1, 33, 61, 125, 129, 151, 159], "monitor": [1, 32, 40, 41, 42, 49, 52, 53, 165], "make": [1, 63, 64, 74, 82, 96, 129, 178], "them": [1, 32, 70, 81, 82, 86, 104, 117, 124, 129, 161, 174, 177], "fail": [1, 4, 25, 33, 38, 47, 51, 81, 82, 83, 84, 85, 86, 96, 97, 111, 120, 121, 122, 124, 125, 126, 127, 128, 129], "thei": [1, 33, 38, 47, 51, 56, 103, 104, 105, 106, 120, 121, 122, 124, 125, 126, 127, 128, 129, 165, 166], "kill": [1, 81], "unexpectedli": [1, 81], "index": [1, 34, 58, 133, 137], "modul": [1, 4, 5, 6, 46, 47, 51, 99, 101, 102, 113, 117, 118, 119, 121, 127, 138, 139, 140, 141, 142, 143, 144, 161, 167], "page": [1, 81, 121], "optuna": [2, 100, 163, 164, 165, 166, 167, 168, 170, 172, 173, 174, 175, 176, 179, 180, 181, 182], "3": [2, 8, 9, 10, 27, 44, 51, 66, 74, 83, 86, 89, 90, 91, 92, 93, 95, 96, 107, 108, 109, 112, 119, 125, 138, 144, 146, 147, 150, 151, 154, 155, 158, 159, 163, 164, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 182], "6": [2, 34, 47, 56, 74, 96, 121, 163, 165, 166, 170, 171, 176, 177], "newer": [2, 30, 31, 32, 33, 34, 38, 44, 46, 47, 50, 51, 54, 56, 57, 60, 61, 62, 77, 82, 83, 84, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 137, 144, 145, 146, 147, 148, 149, 150, 151, 152, 159], "pip": [2, 82, 143, 144], "master": 2, "branch": [2, 164], "git": 2, "repositori": 2, "conda": 2, "forg": 2, "visitor": 3, "websit": [3, 171], "improv": [3, 33, 60, 61, 77, 104, 121, 124, 129, 154, 163], "servic": 3, "www": [3, 166], "html": [3, 28, 46, 125, 166], "hl": 3, "en": [3, 125], "opt": [3, 167, 177], "add": [3, 32, 34, 37, 40, 41, 42, 43, 44, 45, 48, 49, 53, 54, 55, 57, 58, 81, 82, 86, 164, 165, 167, 170, 176, 177], "tool": 3, "dlpage": 3, "gaoptout": 3, "command": [4, 166, 172, 180, 181, 182], "line": [4, 31, 172, 180, 181, 182], "cliff": 4, "framework": [4, 101, 165], "interfac": [4, 30, 31, 32, 33, 34, 36, 38, 44, 46, 47, 50, 51, 54, 56, 57, 60, 61, 62, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 86, 95, 96, 107, 111, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 137, 138, 140, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 159, 172, 179, 180, 181, 182], "v": [4, 46], "q": [4, 12, 56, 94, 95, 96, 111], "log_fil": 4, "debug": [4, 71, 72, 102], "exit": [4, 86], "verbos": [4, 46, 63, 64, 71, 72, 102, 167, 171, 177], "repeat": [4, 79], "quiet": 4, "traceback": 4, "name": [4, 8, 9, 10, 23, 28, 29, 30, 32, 33, 38, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 66, 81, 82, 86, 88, 89, 90, 91, 93, 94, 95, 96, 103, 104, 105, 106, 108, 109, 111, 112, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 145, 146, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 163, 165, 166, 170, 173, 174, 176, 177], "maxim": [4, 7, 9, 26, 33, 46, 74, 75, 76, 77, 78, 79, 81, 82, 87, 90, 96, 108, 129, 167, 171, 174, 175, 177, 178, 179], "kwarg": [4, 32, 35, 65, 103], "sampler_kwarg": 4, "search_spac": [4, 33, 38, 47, 51, 103, 104, 105, 106, 120, 121, 122, 124, 125, 126, 127, 128, 129, 134, 135, 174], "json": [4, 20, 21, 59, 63, 64, 81, 82, 86, 96, 107, 172], "tabl": [4, 81, 138, 165, 173], "yaml": 4, "flatten": [4, 86], "deprec": [4, 12, 15, 16, 17, 18, 35, 38, 40, 42, 47, 56, 63, 64, 94, 95, 96, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 124, 151, 159, 167, 177], "advanc": 4, "initi": [4, 5, 33, 44, 47, 57, 86, 99, 104, 121, 124, 127, 170, 177], "keyword": [4, 51, 63, 64, 65, 81], "distribution_to_json": 4, "nest": [4, 44, 46, 86], "column": [4, 86], "plugin": 4, "list": [4, 27, 28, 29, 30, 31, 44, 46, 50, 57, 63, 64, 81, 82, 83, 86, 92, 107, 108, 112, 121, 125, 145, 149, 150, 151, 152, 153, 157, 158, 159, 160, 161, 165, 171, 173, 179], "locat": [4, 86, 107, 173], "skip": [4, 9, 81, 86, 90, 108], "exist": [4, 8, 9, 23, 27, 31, 44, 63, 64, 66, 81, 82, 89, 90, 92, 93, 98, 108, 109, 166, 170], "human": 4, "readabl": 4, "distinguish": 4, "creation": [4, 9, 81, 90, 108], "duplic": [4, 23, 86, 122], "put": [4, 166], "whitespac": 4, "between": [4, 19, 33, 38, 47, 51, 57, 74, 75, 78, 80, 103, 104, 105, 106, 120, 121, 122, 124, 125, 126, 127, 128, 129], "should": [4, 5, 6, 28, 29, 30, 31, 33, 42, 43, 44, 49, 50, 57, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 95, 96, 98, 99, 107, 111, 119, 123, 127, 130, 140, 141, 175], "either": [4, 31, 33, 46, 81, 82, 97, 99, 104, 122, 124, 127, 129, 151, 159, 178], "mani": [4, 83, 86, 138, 166], "1": [4, 7, 14, 15, 16, 26, 27, 28, 30, 31, 33, 34, 37, 38, 42, 43, 46, 47, 51, 52, 57, 68, 71, 72, 74, 75, 76, 77, 78, 79, 80, 85, 86, 92, 94, 95, 96, 98, 103, 104, 105, 106, 107, 111, 118, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 160, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182], "cpu": [4, 46, 86, 171], "count": [4, 46, 81, 82, 85, 86], "resid": 4, "trial_numb": [4, 63, 64, 81, 82, 178], "alreadyfinish": 4, "variou": [5, 86, 164, 167], "probabl": [5, 105, 125, 133, 136, 174], "mainli": [5, 81], "optim": [5, 7, 8, 9, 10, 26, 27, 28, 29, 30, 33, 34, 36, 44, 46, 47, 50, 51, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 104, 106, 107, 108, 109, 111, 112, 119, 121, 122, 124, 126, 127, 128, 129, 137, 138, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 166, 168, 169, 170, 172, 173, 174, 175, 177, 179, 180, 181, 182], "inherit": [5, 83, 119, 174, 175], "intern": [5, 9, 11, 12, 13, 14, 15, 16, 17, 18, 32, 34, 81, 82, 86, 88, 90, 96, 107, 108, 111, 121, 122, 136, 140, 163, 174, 175], "basedistribut": [5, 19, 20, 21, 33, 38, 46, 47, 51, 81, 82, 86, 95, 96, 98, 103, 104, 105, 106, 111, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "low": [5, 12, 13, 14, 15, 16, 17, 18, 47, 56, 94, 95, 96, 98, 104, 111, 121, 124, 127, 129, 146, 154, 163, 165, 170, 174], "endpoint": [5, 12, 13, 14, 15, 16, 17, 18, 96, 104, 124, 129], "intdistribut": [5, 15, 16, 104, 121, 124, 129, 177], "directli": [5, 46, 81, 82, 165], "util": [5, 86, 99, 161, 170, 171], "deriv": [6, 99, 138], "optunaerror": 6, "Of": [6, 166], "special": 6, "should_prun": [6, 7, 26, 73, 74, 75, 76, 77, 78, 79, 80, 86, 95, 96, 101, 147, 155, 165, 175, 178, 179], "sourc": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182], "trainer": [7, 26, 32, 37, 48], "alia": [7, 9, 10, 26, 27, 35, 39, 66, 90, 91, 92, 93, 118], "load_iri": [7, 26, 46, 74, 75, 76, 77, 78, 79, 96, 165, 172, 175, 178], "linear_model": [7, 26, 74, 75, 76, 77, 78, 79, 96, 165, 175, 178, 179], "sgdclassifi": [7, 26, 74, 75, 76, 77, 78, 79, 96, 165, 175, 178], "uniqu": [7, 9, 26, 66, 74, 75, 76, 77, 78, 79, 81, 82, 90, 93, 95, 96, 108, 109, 110, 111, 170, 175, 178], "n_train_it": [7, 26, 74, 75, 76, 77, 78, 79, 178], "step": [7, 12, 13, 14, 15, 16, 26, 46, 57, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 95, 96, 101, 111, 121, 122, 126, 147, 155, 163, 164, 165, 170, 171, 174, 175, 178], "partial_fit": [7, 26, 46, 74, 75, 76, 77, 78, 79, 96, 165, 175, 178], "intermediate_valu": [7, 26, 74, 75, 76, 77, 78, 79, 81, 82, 83, 95, 96, 98, 110, 163, 165, 170, 175, 178], "score": [7, 26, 44, 46, 63, 64, 74, 75, 76, 77, 78, 79, 96, 101, 165, 175, 178, 179], "from_study_nam": [8, 89], "from_storag": [8, 89], "to_storag": [8, 89], "to_study_nam": [8, 89], "copi": [8, 33, 38, 47, 51, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 89, 95, 107, 120, 121, 122, 124, 125, 126, 127, 128, 129], "system": [8, 81, 82, 86, 89, 96, 98, 107, 111], "contain": [8, 11, 12, 13, 14, 15, 16, 17, 18, 28, 30, 31, 33, 34, 38, 46, 47, 51, 66, 81, 82, 85, 86, 88, 89, 93, 94, 95, 96, 101, 103, 104, 105, 106, 107, 110, 111, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 142, 145, 149, 151, 153, 157, 159, 160, 166, 172, 173, 178], "example_copi": [8, 89], "load_studi": [8, 86, 89, 107, 141, 166], "str": [8, 9, 10, 11, 20, 21, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 66, 74, 79, 81, 82, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 103, 104, 105, 106, 107, 108, 109, 111, 112, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 145, 146, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 172], "union": [8, 9, 10, 11, 13, 27, 31, 37, 44, 46, 57, 63, 64, 66, 74, 79, 81, 82, 86, 89, 90, 91, 92, 93, 96, 98, 108, 109, 111, 122, 146, 148, 154, 156], "basestorag": [8, 9, 10, 27, 66, 86, 89, 90, 91, 92, 93, 108, 109, 140], "document": [8, 9, 10, 27, 31, 35, 44, 57, 66, 86, 89, 90, 91, 92, 93, 107, 108, 109, 111, 125, 138, 140, 170, 174, 175], "destin": [8, 89], "omit": [8, 33, 43, 89, 138], "duplicatedstudyerror": [8, 9, 81, 82, 89, 90, 108], "conflict": [8, 9, 89, 90, 108], "alreadi": [8, 9, 23, 61, 79, 81, 82, 86, 89, 90, 108, 122, 178], "load_if_exist": [9, 90, 108, 170], "sqlalchemi": [9, 81, 90, 108, 170], "engin": [9, 48, 81, 90, 108, 166, 167, 177], "instanti": [9, 11, 12, 13, 14, 15, 16, 17, 18, 32, 49, 81, 82, 90, 96, 108, 111, 124, 129, 163, 170], "basesampl": [9, 33, 38, 47, 51, 66, 86, 90, 93, 103, 121, 126, 127, 128, 129, 138, 165, 174], "background": [9, 66, 90, 93, 108, 109], "dure": [9, 15, 33, 46, 81, 82, 86, 88, 90, 105, 120, 122, 125, 129, 136, 163, 174], "multi": [9, 28, 29, 30, 44, 50, 57, 60, 62, 81, 86, 90, 95, 96, 98, 103, 104, 105, 106, 107, 124, 125, 129, 133, 135, 137, 138, 145, 146, 148, 149, 150, 152, 153, 154, 156, 157, 158, 159, 160, 167, 170, 179, 180, 181, 182], "baseprun": [9, 66, 77, 86, 90, 93, 96, 111, 119, 175], "decid": [9, 66, 90, 93, 165, 177], "earli": [9, 66, 74, 77, 79, 90, 93, 165], "medianprun": [9, 66, 77, 90, 93, 95, 96, 121, 165, 167, 177], "studydirect": [9, 81, 82, 86, 88, 90, 107], "bool": [9, 11, 12, 13, 14, 15, 16, 17, 18, 27, 30, 31, 32, 34, 38, 44, 46, 47, 51, 57, 63, 64, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 90, 92, 95, 96, 97, 104, 107, 108, 111, 112, 121, 122, 123, 124, 127, 129, 130, 143, 144, 148, 151, 156, 159, 175], "flag": [9, 32, 44, 51, 63, 64, 81, 86, 90, 96, 107, 108, 112, 121, 123, 129, 130, 148, 151, 156, 159], "control": [9, 28, 74, 86, 90, 107, 108], "sequenc": [9, 11, 33, 38, 44, 47, 51, 57, 81, 82, 86, 88, 90, 95, 96, 98, 107, 111, 120, 121, 122, 124, 125, 126, 127, 128, 129, 146, 148, 151, 154, 156, 159], "concret": [9, 28, 29, 50, 90, 132, 138], "delet": [10, 33, 38, 47, 51, 81, 82, 91, 120, 121, 122, 124, 125, 126, 127, 128, 129, 173], "choic": [11, 19, 47, 86, 96, 111], "categor": [11, 33, 47, 61, 96, 111, 121, 132, 138, 164, 165], "int": [11, 14, 15, 16, 28, 29, 32, 33, 34, 36, 37, 38, 42, 43, 46, 47, 50, 51, 55, 63, 64, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 88, 94, 95, 96, 98, 104, 105, 106, 107, 110, 111, 112, 121, 122, 124, 125, 127, 128, 129, 132, 151, 159, 176], "candid": [11, 33, 46, 61, 96, 104, 122, 124, 129], "least": [11, 74, 78, 80, 165], "Not": 11, "guarante": [11, 33, 38, 47, 51, 74, 120, 121, 122, 124, 125, 126, 127, 128, 129], "restrict": 11, "whether": [11, 12, 13, 14, 15, 16, 17, 18, 19, 30, 44, 66, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 93, 95, 96, 97, 107, 111, 119, 123, 130, 143, 144, 151, 159], "just": [11, 12, 13, 14, 15, 16, 17, 18, 31, 54, 81, 82, 96, 122, 166], "to_external_repr": [11, 12, 13, 14, 15, 16, 17, 18], "param_value_in_internal_repr": [11, 12, 13, 14, 15, 16, 17, 18], "convert": [11, 12, 13, 14, 15, 16, 17, 18, 96, 111], "represent": [11, 12, 13, 14, 15, 16, 17, 18, 33, 81, 82], "extern": [11, 12, 13, 14, 15, 16, 17, 18, 83, 101], "to_internal_repr": [11, 12, 13, 14, 15, 16, 17, 18], "param_value_in_external_repr": [11, 12, 13, 14, 15, 16, 17, 18], "discret": [12, 13, 14, 15, 16, 96, 111, 122, 164], "linear": [12, 18, 96, 121, 164, 171], "domain": [12, 13, 14, 15, 17, 18, 96, 104, 121, 124, 129], "mathsf": [12, 13, 14, 16, 79, 96], "divis": [12, 13, 14, 16, 96], "maximum": [12, 13, 14, 16, 28, 29, 46, 50, 74, 79, 80, 83, 85, 95], "integ": [12, 13, 14, 15, 16, 31, 46, 81, 82, 83, 85, 96, 111, 122, 127, 138, 164, 175], "lower": [12, 13, 14, 15, 16, 17, 18, 61, 80, 96, 127, 175], "upper": [12, 13, 14, 15, 16, 17, 18, 61, 80, 96], "greater": [12, 13, 14, 15, 16, 17, 18, 86, 95, 96, 98, 125], "larger": [12, 13, 14, 15, 17, 33, 61, 62, 74, 80, 96, 125, 129, 151, 159, 177], "v3": [12, 15, 16, 17, 18, 30, 34, 44, 50, 56, 57, 83, 94, 95, 96, 127, 129, 131, 133, 134, 135, 137, 151, 159], "v6": [12, 15, 16, 17, 18, 56, 94, 95, 96], "subject": [12, 15, 16, 17, 18, 35, 38, 40, 42, 56, 63, 64, 94, 95, 96, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 124, 125, 129, 151, 159], "releas": [12, 15, 16, 17, 18, 30, 31, 32, 33, 34, 35, 38, 40, 42, 44, 46, 47, 50, 51, 54, 56, 57, 60, 61, 62, 77, 82, 83, 84, 94, 95, 96, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 137, 144, 145, 146, 147, 148, 149, 150, 151, 152, 159, 167, 177], "tag": [12, 15, 16, 17, 18, 30, 31, 32, 33, 34, 35, 38, 40, 42, 44, 46, 47, 50, 51, 54, 56, 57, 60, 61, 62, 77, 82, 83, 84, 94, 95, 96, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 137, 144, 145, 146, 147, 148, 149, 150, 151, 152, 159], "floatdistribut": [12, 17, 18, 46, 86, 98, 104, 121, 124, 129, 163, 170, 174, 177, 178], "properti": [12, 46, 63, 64, 86, 94, 95, 96, 107, 111, 127, 132, 137, 163, 170, 172], "subtyp": 12, "proxi": 12, "posit": [14, 15, 16, 81, 82, 96, 127], "v2": [15, 31, 32, 33, 35, 38, 40, 42, 44, 47, 51, 53, 54, 56, 57, 60, 61, 62, 63, 64, 77, 83, 84, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 120, 121, 122, 124, 125, 126, 127, 128, 129, 144, 145, 146, 147, 148, 149, 150, 151, 152], "v4": [15, 35, 38, 40, 42, 63, 64, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 124], "compon": [15, 46], "reli": 15, "ignor": [15, 33, 38, 43, 47, 51, 96, 120, 121, 122, 124, 125, 126, 127, 128, 129, 151, 159], "assum": [15, 33, 46, 75, 78, 95, 96, 138, 154, 166, 171, 173, 177], "alwai": [15, 46, 47, 51, 76, 95, 121, 125, 179], "besid": 15, "dist_old": 19, "dist_new": 19, "categoricaldistribut": [19, 86, 96, 98, 104, 121, 124, 125, 129, 178], "previous": [19, 61, 86, 96, 119], "newli": 19, "ad": [19, 30, 31, 32, 33, 34, 38, 44, 46, 47, 50, 51, 54, 56, 57, 60, 61, 62, 77, 82, 83, 84, 86, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 137, 144, 145, 146, 147, 148, 149, 150, 151, 152, 159, 177], "dist": 20, "serial": [20, 21, 63, 64], "string": [20, 46, 86, 96, 107], "json_str": 21, "deseri": 21, "invalid": 22, "configur": [22, 28, 29, 31, 33, 50, 61, 70, 74, 79, 81, 96, 122, 129], "oper": [25, 131, 132, 133, 134, 136, 137, 138, 139, 165, 178], "include_best_tri": [27, 92], "study_summari": [27, 92, 172], "potenti": [27, 92], "queri": [27, 92], "longer": [27, 51, 81, 92], "fetch": [27, 92, 171], "summari": [27, 55, 92], "summar": [27, 92], "studysummari": [27, 92, 172], "n_tree": [28, 29, 50], "64": [28, 29, 50, 163, 175, 177], "fanova": 28, "approach": [28, 64], "assess": [28, 29, 30, 50, 150, 158], "forest": [28, 29, 50], "regress": [28, 29, 50], "accur": 28, "reliabl": 28, "over": [28, 74, 79, 86, 154, 178], "minut": [28, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179], "publish": [28, 136], "cython": 28, "within": [28, 44, 57, 81, 82, 121, 134, 163], "packag": [28, 29, 31, 42, 50, 102, 161, 167, 177], "underli": [28, 46], "cover": 28, "explor": 28, "orient": 28, "cite": 28, "origin": [28, 74, 83, 96, 104, 124, 129, 178], "automl": 28, "io": [28, 125], "tree": [28, 29, 50, 96, 104, 124, 129, 165], "depth": [28, 29, 50], "meant": [28, 29, 50], "get_param_import": [28, 29, 50, 99, 158], "present": [28, 29, 30, 46, 50, 150, 158], "frozentri": [28, 29, 30, 33, 38, 46, 47, 50, 51, 63, 64, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 88, 98, 110, 120, 121, 122, 124, 125, 126, 127, 128, 129, 145, 146, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 163, 170, 175, 176, 178, 179], "being": [28, 29, 30, 50, 75, 78, 83, 86, 145, 146, 148, 149, 150, 152, 153, 154, 156, 157, 158, 160], "durat": [28, 29, 50, 86, 95, 129, 167], "total_second": [28, 29, 50, 167], "ordereddict": [28, 29, 30, 50, 123, 130], "dict": [28, 29, 30, 32, 33, 38, 44, 46, 47, 50, 51, 57, 63, 64, 81, 82, 86, 88, 94, 95, 96, 98, 103, 104, 105, 106, 107, 111, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "decreas": [29, 174, 175], "impur": 29, "mdi": 29, "sklean": 29, "randomforestclassifi": [29, 50, 96, 164], "feature_importances_": 29, "consist": 30, "neg": [30, 77], "point": [30, 31, 42, 79, 96, 111, 122, 146, 154, 164, 174], "higher": [30, 46, 49, 96, 143, 144], "descend": 30, "impli": [30, 174], "exclud": [30, 123, 130, 137], "found": [30, 46, 63, 64, 163, 179], "empti": [30, 83, 86, 129], "plot_param_import": [30, 161, 167, 171], "baseimportanceevalu": [30, 99, 150, 158], "fanovaimportanceevalu": [30, 99, 150, 158], "boolean": [30, 34, 73, 74, 75, 76, 77, 78, 79, 80, 96, 119, 123, 130, 175], "prior": [30, 31, 32, 33, 34, 38, 44, 46, 47, 50, 51, 54, 56, 57, 60, 61, 62, 77, 82, 83, 84, 103, 104, 105, 106, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 137, 144, 145, 146, 147, 148, 149, 150, 151, 152, 159], "notic": [30, 31, 32, 33, 34, 38, 44, 46, 47, 50, 51, 54, 56, 57, 60, 61, 62, 77, 82, 83, 84, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 137, 144, 145, 146, 147, 148, 149, 150, 151, 152, 159], "config_fil": 31, "serialization_dir": 31, "best_validation_accuraci": 31, "include_packag": 31, "forc": 31, "file_friendly_log": 31, "allennlp": [31, 32], "extens": [31, 37, 44, 135, 138], "jsonnet": [31, 59], "config": [31, 59], "cast": 31, "std": 31, "parseint": 31, "parsejson": 31, "both": [31, 44, 64, 74, 125, 178], "executor": 31, "mask": 31, "extvar": 31, "path": 31, "gradientdescrenttrain": 31, "access": [31, 63, 64, 81, 82, 86, 96, 101, 107, 170, 172, 175], "overwrit": [31, 81, 82], "directori": [31, 54, 63, 64], "tqdm": 31, "separ": [31, 121], "slow": 31, "refresh": 31, "rate": [31, 79, 96, 121, 134, 177], "addit": [31, 44, 49, 57, 86, 170, 178], "observ": [32, 34, 37, 42, 43, 45, 48, 49, 53, 58, 61, 74, 163], "mandatori": 32, "allennlpexecutor": [32, 59], "id": [32, 74, 81, 82, 96], "Then": [32, 120, 166, 174, 177, 178], "build": [32, 33, 38, 47, 51, 120, 121, 122, 124, 125, 126, 127, 128, 129, 175], "patientprun": [32, 165], "validation_loss": 32, "validation_accuraci": 32, "on_epoch": 32, "epoch": [32, 37, 42, 46, 74, 79, 81, 82, 95, 96, 111, 171], "is_primari": 32, "_": [32, 79, 86, 171, 178], "reach": [32, 79, 80, 86], "satur": 32, "gradientdescenttrain": 32, "classmethod": 32, "regist": [32, 40, 41, 81, 82, 172, 177], "arg": [32, 35, 65, 103, 106], "stub": 32, "trainercallback": 32, "signatur": 32, "registr": 32, "candidates_func": [33, 60, 61, 62], "n_startup_tri": [33, 38, 47, 51, 75, 78, 104, 121, 124, 129], "independent_sampl": [33, 38, 47, 51, 121, 127, 174], "botorch": 33, "bayesian": 33, "top": [33, 78, 79], "pytorch": [33, 48, 49, 56, 171], "allow": [33, 46, 77, 81, 85, 86, 133, 137, 138, 175], "back": [33, 101], "hot": [33, 61], "encod": [33, 61], "homepag": 33, "reason": [33, 96], "keep": [33, 78, 81], "torch": [33, 56, 60, 61, 62, 164, 171], "tensor": [33, 60, 61, 62], "data": [33, 46, 49, 56, 101, 165, 167, 171, 172, 175, 177], "bound": [33, 46, 47, 60, 61, 62, 86, 131, 132, 133, 134, 135, 136, 137], "quasi": [33, 60, 61, 62, 127, 165], "mc": [33, 60, 61, 62], "batch": [33, 60, 61, 138], "expect": [33, 56, 60, 61, 104, 124, 129, 132, 176], "qei": [33, 61], "hypervolum": [33, 60, 104, 124, 129], "qehvi": [33, 60], "extend": [33, 62], "parego": [33, 62], "qparego": [33, 62], "qei_candidates_func": [33, 60, 62], "strictli": [33, 46, 61, 125, 129, 151, 159, 174], "violat": [33, 61, 125, 129, 151, 159], "smaller": [33, 74, 80, 125, 129, 151, 159], "taken": [33, 77, 95], "account": [33, 104, 124, 129, 177], "resort": 33, "after_tri": [33, 38, 47, 51, 120, 121, 122, 124, 125, 126, 127, 128, 129], "post": [33, 38, 47, 51, 120, 121, 122, 124, 125, 126, 127, 128, 129], "process": [33, 38, 46, 47, 51, 56, 57, 83, 86, 96, 111, 120, 121, 122, 124, 125, 126, 127, 128, 129, 142, 161], "right": [33, 38, 47, 51, 83, 103, 104, 105, 106, 120, 121, 122, 124, 125, 126, 127, 128, 129], "befor": [33, 38, 42, 47, 51, 57, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 103, 104, 105, 106, 120, 121, 122, 124, 125, 126, 127, 128, 129, 165, 177, 178], "modifi": [33, 38, 47, 51, 73, 74, 75, 76, 77, 78, 79, 80, 86, 96, 120, 121, 122, 124, 125, 126, 127, 128, 129, 137], "succeed": [33, 38, 47, 51, 120, 121, 122, 124, 125, 126, 127, 128, 129], "infer_relative_search_spac": [33, 38, 47, 51, 103, 104, 105, 106, 120, 121, 122, 124, 125, 126, 127, 128, 129, 174], "infer": [33, 38, 47, 51, 103, 104, 105, 106, 120, 121, 122, 124, 125, 126, 127, 128, 129, 174], "rel": [33, 38, 47, 51, 103, 104, 105, 106, 120, 121, 122, 124, 125, 126, 127, 128, 129, 174], "sample_rel": [33, 38, 47, 51, 103, 104, 105, 106, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 174], "sample_independ": [33, 38, 47, 51, 103, 104, 105, 106, 120, 121, 122, 124, 125, 126, 127, 128, 129, 174], "intersection_search_spac": [33, 38, 47, 51, 103, 104, 105, 106, 120, 121, 122, 124, 125, 126, 127, 128, 129, 174], "reseed_rng": [33, 38, 47, 51, 103, 104, 105, 106, 120, 121, 122, 124, 125, 126, 127, 128, 129], "rese": [33, 38, 47, 51, 103, 104, 105, 106, 120, 121, 122, 124, 125, 126, 127, 128, 129], "replic": [33, 38, 47, 51, 103, 104, 105, 106, 120, 121, 122, 124, 125, 126, 127, 128, 129], "prevent": [33, 38, 47, 51, 63, 64, 70, 81, 86, 103, 104, 105, 106, 120, 121, 122, 124, 125, 126, 127, 128, 129], "assign": [33, 38, 44, 46, 47, 51, 56, 57, 103, 104, 105, 106, 120, 121, 122, 124, 125, 126, 127, 128, 129], "param_nam": [33, 38, 47, 51, 81, 82, 103, 104, 105, 106, 120, 121, 122, 124, 125, 126, 127, 128, 129, 174], "param_distribut": [33, 38, 46, 47, 51, 103, 104, 105, 106, 120, 121, 122, 124, 125, 126, 127, 128, 129, 174], "suitabl": [33, 38, 47, 51, 86, 103, 104, 105, 106, 120, 121, 122, 124, 125, 126, 127, 128, 129], "relationship": [33, 38, 47, 51, 103, 104, 105, 106, 120, 121, 122, 124, 125, 126, 127, 128, 129, 145, 149, 152, 153, 157, 160, 167], "regard": [33, 38, 47, 51, 118, 120, 121, 122, 124, 125, 126, 127, 128, 129, 164], "perspect": [33, 38, 47, 51, 120, 121, 122, 124, 125, 126, 127, 128, 129, 138], "onc": [33, 38, 47, 51, 56, 103, 104, 105, 106, 120, 121, 122, 124, 125, 126, 127, 128, 129, 163, 176], "gaussian": [33, 38, 47, 51, 104, 120, 121, 122, 124, 125, 126, 127, 128, 129], "cma": [33, 38, 47, 51, 120, 121, 122, 124, 125, 126, 127, 128, 129, 165], "eval_set_index": 34, "catboost": 34, "valid": [34, 37, 40, 41, 42, 43, 46, 48, 53, 58, 64, 65, 81, 82, 86, 165, 171, 178], "accuraci": [34, 37, 40, 41, 42, 43, 45, 48, 49, 53, 54, 55, 58, 163, 167, 171, 172, 177, 178], "after_iter": 34, "check_prun": 34, "unlik": [34, 86], "doesn": [34, 77, 146, 154, 174], "logloss": 34, "auc": [34, 54, 167, 177], "eval_set": [34, 58], "iter": [34, 43, 46, 63, 64, 74, 86, 165, 177], "simplenamespac": 34, "iteraion": 34, "validation_nam": 34, "metric_nam": [34, 44, 45, 54, 57], "9": [34, 44, 57, 84, 104, 105, 124, 125, 133, 136, 163, 165, 171, 174, 177], "logic": [34, 165, 175], "catalyst": 35, "optunapruningcallback": 35, "descript": [35, 60, 62, 79, 173], "comm": 36, "wrapper": [36, 38, 56, 65], "incorpor": [36, 56], "chainermn": 36, "communicatorbas": 36, "commun": [36, 56], "func": [36, 46, 86], "absenc": 36, "chainermntri": 36, "tupl": [36, 37, 64, 81, 82, 85, 86, 107, 151], "observation_kei": [37, 58], "pruner_trigg": 37, "chainer": 37, "intervaltrigg": 37, "manualscheduletrigg": 37, "trigger": 37, "length": [37, 95, 98], "x0": [38, 47, 121], "sigma0": [38, 47, 121], "cma_std": [38, 47], "cma_opt": [38, 47], "warn_independent_sampl": [38, 47, 51, 121, 127, 129], "pycmasampl": [38, 121], "backward": [38, 171], "renam": [38, 47], "fastaiv2pruningcallback": 39, "fastai": [40, 41], "learner": [40, 41], "fit_one_cycl": [40, 41], "n_epoch": [40, 41], "fastaipruningcallback": [40, 41], "valid_loss": [40, 41], "cyc_len": 40, "max_lr": 40, "basic_train": 40, "trackercallback": [40, 41], "cnn_learner": 41, "dl": 41, "resnet18": 41, "error_r": 41, "cb": 41, "lr_max": 41, "kera": [42, 53], "val_loss": [42, 49, 52, 53], "val_accuraci": [42, 178], "th": [42, 43], "sever": [42, 74, 86, 126, 165], "recent": 42, "simpli": [42, 95, 96, 167], "redirect": 42, "standalon": 42, "tf": [42, 53, 55], "break": [42, 86, 178], "workflow": 42, "ref": 42, "team": 42, "altern": [42, 86, 166], "tfkeraspruningcallback": 42, "valid_nam": [43, 63], "valid_0": 43, "report_interv": 43, "lightgbm": [43, 167, 177], "binary_error": 43, "multi_error": 43, "cv": [43, 46, 64], "boost": 43, "itself": [43, 54, 86, 107, 129], "definit": [43, 173, 175], "tracking_uri": 44, "create_experi": 44, "mlflow_kwarg": 44, "tag_study_user_attr": 44, "tag_trial_user_attr": 44, "track": [44, 54, 57], "mlflow": 44, "relev": [44, 54], "mlflc": 44, "your_tracking_uri": 44, "my_studi": [44, 66, 93, 109], "uri": 44, "set_tracking_uri": 44, "broadcast": [44, 57], "suffix": [44, 57], "value_0": [44, 57], "value_1": [44, 57], "experi": [44, 57, 170, 172, 174], "let": [44, 86, 163, 166, 170, 173, 175, 177, 178, 179], "under": [44, 81], "set_experi": 44, "experiment_id": 44, "databrick": 44, "notebook": [44, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182], "nest_trial": 44, "part": [44, 86], "anyon": 44, "migrat": 44, "typeerror": [44, 96, 111], "indic": [44, 46, 83, 112, 151, 159, 175], "attr": [44, 86, 170, 172, 173], "pair": [44, 172, 178], "supersed": 44, "latter": [44, 46, 81, 82], "former": [44, 113], "collis": 44, "track_in_mlflow": 44, "decor": [44, 57], "enabl": [44, 57, 63, 64, 69, 70, 104, 124, 127, 129, 165, 170, 178], "log_param": 44, "power": [44, 57, 127], "log_metr": 44, "my_other_studi": 44, "objectivefunctyp": [44, 57], "eval_metr": [45, 58], "mxnet": 45, "cross": [45, 46, 64], "entropi": 45, "custom": [45, 81, 99, 142, 175], "constructor": [45, 47, 51, 86, 96, 107, 111, 141, 175], "estim": [46, 55, 74, 101, 104, 121, 124, 129, 165], "enable_prun": 46, "error_scor": 46, "max_it": 46, "refit": 46, "return_train_scor": 46, "subsampl": 46, "baseestim": [46, 101], "scikit": [46, 51, 58, 161], "need": [46, 49, 57, 68, 74, 79, 81, 86, 148, 165, 174, 178], "map": [46, 122, 175], "basecrossvalid": [46, 64], "strategi": [46, 104, 119, 120, 121, 124, 138, 175], "fold": [46, 64], "splitter": 46, "yield": 46, "split": [46, 68, 96], "arrai": [46, 178], "binari": [46, 133, 137, 167, 177], "multiclass": 46, "stratifiedkfold": 46, "kfold": 46, "occur": [46, 83, 86, 105, 125], "numer": [46, 131, 132, 133, 134, 135, 136, 137], "fitfailedwarn": 46, "affect": [46, 47, 63, 64, 86, 167, 171], "thread": [46, 81, 86], "suffer": [46, 86], "signal": [46, 86], "ctrl": [46, 86], "sigterm": [46, 86], "runtim": 46, "qualiti": 46, "randomst": [46, 131, 132, 133, 134, 135, 136, 137, 174], "pseudo": 46, "global": [46, 146, 154], "made": [46, 96, 119], "avail": [46, 88, 101, 125, 141, 143, 144, 165], "best_estimator_": 46, "permit": 46, "insight": 46, "impact": 46, "overfit": [46, 175], "underfit": 46, "computation": [46, 104, 124, 129], "expens": [46, 104, 124, 129], "select": [46, 131, 132, 133, 134, 135, 136, 137, 163, 167], "draw": [46, 86], "shape": [46, 61, 86], "appropri": [46, 81], "end": [46, 63, 64, 85, 86, 127], "accept": [46, 63, 64, 81, 82, 86, 96, 111, 132, 174], "chosen": 46, "n_splits_": 46, "refit_time_": 46, "sample_indices_": 46, "scorer_": 46, "scorer": 46, "study_": 46, "actual": [46, 61, 122, 138], "gamma": [46, 96, 104, 124, 129], "auto": [46, 63, 64, 74, 79], "optuna_search": 46, "convent": 46, "org": [46, 166], "stabl": [46, 125], "model_evalu": 46, "multipli": [46, 47, 121], "17": [46, 67, 71, 163, 165, 177], "best_index_": 46, "retun": [46, 178], "equiv": 46, "best_trial_": 46, "best_params_": 46, "best_score_": 46, "classes_": 46, "ndarrai": [46, 104, 124, 129, 131, 132, 133, 134, 135, 136, 137, 178], "seri": [46, 83], "label": [46, 146, 148, 149, 150, 152, 154, 156, 157, 158, 160, 167, 171, 177], "decision_funct": 46, "datafram": [46, 86, 170], "spmatrix": 46, "group": [46, 129, 138], "fit_param": 46, "get_param": 46, "deep": [46, 86, 165], "subobject": 46, "inverse_transform": 46, "n_trials_": 46, "predict_log_proba": 46, "predict_proba": 46, "scaler": 46, "score_sampl": 46, "set_param": 46, "well": [46, 83, 105, 125, 129, 170], "pipelin": [46, 174], "__": 46, "trials_": 46, "user_attrs_": 46, "quadrat": [47, 51, 86, 121, 127], "especi": [47, 102], "exce": [47, 75, 78, 80, 122], "popul": [47, 121, 138], "size": [47, 121, 122, 138, 148], "cmaessampl": [47, 138, 165, 178], "cmaevolutionstrategi": 47, "standard": [47, 121, 127], "deviat": [47, 121], "min_rang": [47, 121], "denot": [47, 96, 121], "minimum": [47, 74, 75, 78, 79, 80, 121], "boundaryhandl": 47, "emit": [47, 51, 121, 127, 129], "ignit": 48, "handler": [48, 67, 68, 69, 70, 165, 170, 176, 177], "lightn": 49, "val_acc": [49, 52, 53], "pytorch_lightn": 49, "lightningmodul": 49, "training_step": 49, "validation_epoch_end": 49, "pytorchlightn": 49, "shaplei": 50, "shap": 50, "absolut": 50, "skopt_kwarg": 51, "consider_pruned_tri": [51, 121], "skopt": 51, "dimens": [51, 86, 129, 131, 132, 133, 134, 135, 136, 137, 138], "As": [51, 74, 104, 124, 127, 163, 165, 172, 174, 176], "o": [51, 138], "slower": 51, "skorch": 52, "net": 52, "histroi": 52, "intend": [53, 81, 82], "tensorflow": [53, 55], "dirnam": 54, "tensorboard": 54, "give": [54, 74, 165, 173], "know": 54, "later": 54, "roc": 54, "run_every_step": 55, "sessionrunhook": 55, "hook": 55, "watch": 55, "devic": [56, 171], "rank": 56, "node": [56, 170], "nccl": 56, "synchron": 56, "transmiss": 56, "share": [56, 63, 64, 127, 179], "suggest_discrete_uniform": [56, 94, 95, 96, 111], "suggest_loguniform": [56, 94, 95, 96, 111], "suggest_uniform": [56, 94, 95, 96, 111], "wandb_kwarg": 57, "as_multirun": 57, "bias": 57, "onlin": 57, "wandb": 57, "setup": [57, 68, 70], "who": [57, 140], "subsequ": [57, 129], "per": [57, 138], "ensur": [57, 75, 78, 86, 122, 166], "correct": [57, 171, 175], "project": 57, "wandbc": 57, "multirun": 57, "track_in_wandb": 57, "b": [57, 74, 129, 146, 154], "sweep": 57, "panel": 57, "ex": 57, "coordin": [57, 81, 82], "xgboost": 58, "merror": 58, "validation_0": 58, "input_config_fil": 59, "output_config_fil": 59, "been": [59, 70, 75, 78, 80, 81, 82, 84, 87, 96, 97, 122, 123, 130, 175], "train_x": [60, 61, 62, 165, 167, 177], "train_obj": [60, 61, 62], "train_con": [60, 61, 62], "previou": [61, 75, 83, 127, 174, 175, 178], "n_param": 61, "n_object": [61, 107, 110, 112, 151, 159], "n_constraint": 61, "involv": 61, "row": 61, "respect": [61, 83, 86, 107, 122, 141], "optimize_acqf": 61, "train_set": [63, 64], "num_boost_round": [63, 64], "valid_set": [63, 167, 177], "fobj": [63, 64], "feval": [63, 64], "feature_nam": [63, 64], "categorical_featur": [63, 64], "early_stopping_round": [63, 64], "evals_result": 63, "verbose_ev": [63, 64, 167, 177], "learning_r": [63, 164], "keep_training_boost": 63, "time_budget": [63, 64], "sample_s": [63, 64], "optuna_callback": [63, 64], "model_dir": [63, 64], "show_progress_bar": [63, 64, 86, 107], "optuna_se": [63, 64], "tuner": [63, 64, 65], "stepwis": [63, 64, 65], "manner": [63, 65], "lambda_l1": [63, 64], "lambda_l2": [63, 64], "num_leav": [63, 64], "feature_fract": [63, 65], "bagging_fract": [63, 64, 167, 177], "bagging_freq": [63, 64, 167, 177], "min_child_sampl": [63, 65, 167, 177], "blog": 63, "articl": 63, "kohei": 63, "ozaki": [63, 121, 165], "kaggl": 63, "grandmast": 63, "budget": [63, 64, 74, 138], "tune": [63, 64, 65, 179], "elapsed_sec": [63, 64], "elaps": [63, 64, 86, 95], "average_iteration_tim": [63, 64], "averag": [63, 64, 74], "booster": [63, 64], "lgbm_param": [63, 64], "nf": [63, 64, 166], "get_best_boost": [63, 64], "filenam": [63, 64], "align": [63, 64], "progress": [63, 64, 86, 134], "bar": [63, 64, 86, 145, 148, 153, 156], "fragment": [63, 64], "properli": [63, 64, 86], "lgb": [63, 64, 167, 177], "valid_set_typ": 63, "best_param": [63, 64, 86, 126, 163, 170, 173], "best_scor": [63, 64], "sample_train_set": [63, 64], "subset": [63, 64, 129, 171], "nfold": 64, "stratifi": 64, "shuffl": [64, 122, 171], "fpreproc": 64, "show_stdv": 64, "return_cvboost": 64, "emploi": [64, 86], "lightgbmtun": [64, 65], "cancer": [64, 65, 167], "detect": [64, 65, 80, 81], "init_model": 64, "eval_train_metr": 64, "cvbooster": 64, "drop": 65, "suspend": 65, "loaded_studi": [66, 93, 109], "root": [67, 68, 69, 70, 71, 72, 166], "logger": [67, 68, 69, 70, 71, 72], "sy": [67, 70, 165, 170, 176, 177], "stderr": [67, 70], "enable_default_handl": 67, "02": [67, 72, 166], "23": [67, 163, 171, 177], "00": [67, 169, 171, 181], "54": [67, 163, 173, 177, 181], "314": 67, "356": 67, "11": [67, 104, 124, 163, 165, 171, 175, 177], "enable_propog": 68, "disable_default_handl": [68, 69, 70], "getlogg": [68, 70], "setlevel": [68, 70], "addhandl": [68, 70, 165, 170, 176, 177], "filehandl": [68, 70], "foo": [68, 70, 166, 173], "enable_propag": 68, "propog": 68, "readlin": [68, 70], "startswith": [68, 70], "doubl": 70, "2021": [71, 72, 121], "31": [71, 72, 163, 170, 177], "05": [71, 163, 165, 166, 169, 173, 181], "35": [71, 72, 135, 163, 177], "232": 71, "238": 71, "245": 71, "critic": [71, 72, 102], "fatal": [71, 72, 102], "088": 72, "091": 72, "096": 72, "abstract": [73, 103, 119, 120, 132, 140, 174, 175], "judg": [73, 74, 75, 76, 77, 78, 79, 80], "min_resourc": [74, 79, 178], "max_resourc": [74, 178], "reduction_factor": [74, 79, 178], "bootstrap_count": [74, 79], "hyperband": [74, 165, 178], "successivehalv": 74, "sha": 74, "finit": 74, "resourc": [74, 79, 165], "attack": 74, "paper": [74, 79, 104, 105, 121, 124, 125, 127, 129, 131, 134, 136, 154, 165], "counterpart": 74, "full": [74, 83, 86, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179], "characterist": [74, 165], "startup": 74, "successivehalvingprun": [74, 165], "bracket": 74, "adapt": 74, "factor": [74, 79, 96], "mathrm": 74, "floor": 74, "log_": 74, "texttt": 74, "frac": 74, "too": 74, "larg": 74, "section": [74, 170, 174, 177, 178], "randomli": [74, 122, 127], "alloc": [74, 79], "r": [74, 79, 133], "better": [74, 127, 165, 177], "success": [74, 79, 86, 125, 129, 165], "match": [74, 81, 82], "With": [74, 122, 164], "largest": 74, "No": [74, 135, 165], "reduct": [74, 79], "promot": [74, 79], "eta": [74, 79, 133, 135, 137], "rung": [74, 79], "incompat": 74, "n_warmup_step": [75, 78, 80, 95, 96, 167], "interval_step": [75, 78, 80], "n_min_trial": [75, 78], "median": [75, 165], "rule": [75, 129, 165], "wors": 75, "offset": [75, 78, 80], "warmup": [75, 78, 80, 95, 96, 175], "particular": [75, 78, 80, 85, 129], "postpon": [75, 78, 80], "never": [76, 79], "wrapped_prun": 77, "patienc": 77, "min_delta": 77, "toler": [77, 165], "equival": [77, 178], "consecut": [77, 95, 96, 110, 111], "percentil": [78, 165], "bottom": 78, "among": [78, 79, 81, 82], "inclus": 78, "25th": 78, "kept": [78, 81, 82], "min_early_stopping_r": 79, "asynchron": [79, 127, 165], "halv": [79, 165], "bandit": 79, "care": [79, 96, 111, 122, 173], "simple_prun": 79, "chainer_integr": 79, "heurist": [79, 104, 124, 129], "look": 79, "min": [79, 174, 177], "place": [79, 95, 175], "fraction": 79, "won": [79, 86, 125, 129], "competit": 79, "procedur": [79, 81, 82, 120], "At": [79, 120, 132, 174], "outli": 80, "threshold": [80, 165, 176], "fall": 80, "behind": [80, 96, 111, 129], "objective_for_upp": 80, "enumer": [80, 171], "ys_for_upp": 80, "objective_for_low": 80, "ys_for_low": 80, "90": [80, 163, 177], "engine_kwarg": 81, "skip_compatibility_check": 81, "skip_table_cr": 81, "pool_siz": 81, "connect_arg": 81, "create_engin": 81, "grace": [81, 82], "stale": [81, 82, 84], "pool_pre_p": 81, "connect": [81, 82], "wait_timeout": 81, "often": [81, 129], "check_trial_is_updat": [81, 82], "trial_id": [81, 82, 95, 96, 163, 170], "trial_stat": [81, 82], "runtimeerror": [81, 82, 86], "create_new_studi": [81, 82], "create_new_tri": [81, 82], "study_id": [81, 82, 88], "template_tri": [81, 82], "templat": [81, 82, 175], "fronzentri": [81, 82], "keyerror": [81, 82], "delete_studi": [81, 82], "get_all_studi": [81, 82], "frozenstudi": [81, 82], "get_all_tri": [81, 82], "deepcopi": [81, 82, 86, 95, 107, 175], "filter": [81, 82, 86, 107], "get_all_vers": 81, "get_best_tri": [81, 82], "get_current_vers": 81, "get_failed_trial_callback": [81, 82], "get_head_vers": 81, "latest": [81, 175], "get_heartbeat_interv": [81, 82], "get_n_trial": [81, 82], "get_study_direct": [81, 82], "get_study_id_from_nam": [81, 82], "get_study_name_from_id": [81, 82], "get_study_system_attr": [81, 82], "get_study_user_attr": [81, 82], "get_trial": [81, 82, 86, 107, 175], "get_trial_id_from_study_id_trial_numb": [81, 82], "get_trial_number_from_id": [81, 82], "get_trial_param": [81, 82], "get_trial_system_attr": [81, 82], "get_trial_user_attr": [81, 82], "record_heartbeat": [81, 82], "remove_sess": [81, 82], "session": [81, 163], "threadlocalregistri": 81, "close": [81, 99, 163], "associ": [81, 82, 96, 119, 129, 175], "destruct": 81, "occasion": [81, 122], "touch": 81, "set_study_direct": [81, 82], "whose": [81, 82, 84, 112, 122, 145, 147, 148, 149, 151, 152, 153, 155, 156, 157, 159, 160, 163], "opposit": [81, 82], "not_set": [81, 82, 87], "set_study_system_attr": [81, 82], "serializ": [81, 82, 86, 96, 107, 172], "set_study_user_attr": [81, 82], "set_trial_intermediate_valu": [81, 82], "set_trial_param": [81, 82], "param_value_intern": [81, 82], "set_trial_state_valu": [81, 82], "successfulli": [81, 82], "tri": [81, 82, 177], "set_trial_system_attr": [81, 82], "set_trial_user_attr": [81, 82], "redi": 82, "passwd": 82, "localhost": [82, 166], "port": 82, "password": 82, "ie": 82, "6379": 82, "plan": 82, "sure": 82, "clean": 82, "up": [82, 83, 127, 165, 170], "inherit_intermediate_valu": 83, "recreat": 83, "queue": [83, 86], "again": [83, 86, 163, 179], "retried_trial_numb": 83, "repetit": 83, "retry_histori": 83, "help": [83, 119, 138, 180, 182], "preempt": 83, "usag": [83, 96, 167, 175], "max": [83, 85, 171, 174], "indefinit": 83, "static": [83, 124, 129], "ascend": 83, "long": 84, "certain": [85, 175, 176], "successfullli": 85, "toward": [85, 134], "add_trial": [86, 98, 177], "create_tri": [86, 177], "other_studi": 86, "is_finish": [86, 97], "enqueue_tri": [86, 107, 122, 177], "scenario": 86, "fixed_distribut": 86, "lifetim": [86, 120, 123], "outsid": 86, "scope": 86, "adam": [86, 164, 171], "sgd": [86, 96], "lr": [86, 147, 155, 171], "0001": 86, "re": [86, 95, 96, 126, 174, 180, 181, 182], "domin": [86, 107, 112, 125, 151, 159], "t0": [86, 107], "t1": [86, 107], "zip": [86, 107, 178, 182], "held": [86, 107], "skip_if_exist": 86, "enqueu": [86, 107], "memo": 86, "produc": [86, 134], "relat": [86, 141, 142], "shouldn": [86, 107], "mutat": [86, 105, 107, 125], "corrupt": [86, 107], "unexpect": [86, 107], "done": [86, 101], "choos": [86, 129], "sigint": 86, "cleanli": 86, "interrupt": 86, "maxtrialscallback": [86, 166], "consumpt": 86, "ne": 86, "invoc": [86, 163], "set_system_attr": [86, 95, 96, 107, 111], "contributor": [86, 172], "immedi": 86, "spawn": 86, "skip_if_finish": 86, "df": [86, 147, 155, 170], "gradient": [86, 175], "descent": [86, 175], "128": [86, 96, 104, 124, 147, 155, 164, 171], "gy": [86, 147, 155], "final": [86, 166], "succe": 86, "told": 86, "short": [86, 107], "datetime_start": [86, 88, 95, 96, 110, 111, 163, 170], "datetime_complet": [86, 95, 110, 163, 170], "multi_index": 86, "panda": [86, 170], "analyz": [86, 154, 163, 167, 179], "histogram": 86, "csv": 86, "isinst": [86, 98, 174], "multiindex": 86, "hierarch": 86, "natur": [86, 121, 177], "params_x": [86, 170], "pd": 86, "implicitli": 86, "aggreg": 88, "get_all_study_summari": [88, 172], "datetim": [88, 95, 96, 110, 111, 163, 170], "ran": 88, "pre": [94, 127, 178], "contrast": [94, 95], "deploi": [94, 95], "mutabl": 95, "despit": 95, "overwritten": 95, "best_trial_copi": 95, "timedelta": 95, "last_step": [95, 175], "noth": 95, "regardless": 95, "combin": [95, 101, 120, 122, 131, 132, 133, 134, 135, 136, 137, 138], "manag": [96, 111, 142, 163], "seamlessli": [96, 111], "henc": [96, 111], "float32": [96, 111], "convers": [96, 111], "neural_network": 96, "mlpclassifi": 96, "batchsiz": [96, 171], "momentum": 96, "hidden_layer_s": 96, "50": [96, 105, 112, 122, 125, 151, 159, 163, 171, 175, 177], "batch_siz": [96, 171, 178], "solver": [96, 178], "meaning": 96, "similarli": 96, "exact": 96, "kernel": 96, "poli": 96, "rbf": 96, "describ": [96, 120, 138, 170, 173, 174, 175], "flexibl": [96, 178], "dot": 96, "round": 96, "learning_rate_init": 96, "power_t": 96, "n_estim": 96, "400": 96, "ge": 96, "divid": 96, "grid": [96, 122, 165], "width": [96, 174], "uniformli": [96, 121, 131, 134, 163], "nearest": 96, "tend": 96, "unfinish": 97, "uncaught": 97, "meandecreaseimpurityimportanceevalu": 99, "pai": 99, "attent": 99, "serv": 101, "compliant": 101, "mlflowcallback": [101, 176], "optunasearchcv": 101, "aka": 102, "multiobjectivestudi": [103, 104, 105, 106, 108, 109, 110, 111, 112], "frozenmultiobjectivetri": [103, 104, 105, 106, 107], "consider_prior": [104, 124, 129], "prior_weight": [104, 124, 129], "consider_magic_clip": [104, 124, 129], "consider_endpoint": [104, 124, 129], "n_ehvi_candid": [104, 124], "24": [104, 124, 129, 163, 166, 171, 177], "default_gamma": [104, 124, 129], "weights_abov": [104, 124], "_default_weights_abov": [104, 124], "motp": [104, 124, 129], "multiobject": [104, 105, 124, 125, 129], "structur": [104, 124, 129, 165], "parzen": [104, 124, 129, 165], "enhanc": [104, 124, 129], "stabil": [104, 124, 129], "impos": [104, 124, 129], "effect": [104, 124, 129], "smallest": [104, 124, 129], "varianc": [104, 124, 129], "densiti": [104, 124, 129], "grain": [104, 124, 129], "latin": [104, 124], "hypercub": [104, 124], "num_vari": [104, 124], "250": 104, "population_s": [105, 125], "mutation_prob": [105, 125], "crossover_prob": [105, 125], "swapping_prob": [105, 125, 136], "nsga": [105, 125], "ii": [105, 125, 165], "stand": [105, 125], "nondomin": [105, 125, 165], "genet": [105, 125, 131, 135, 136, 137, 165], "known": [105, 125, 127], "elitist": [105, 125], "parent_tri": [105, 125], "parent": [105, 125, 131, 132, 133, 134, 135, 136, 137], "crossov": [105, 125, 131, 132, 133, 134, 135, 136, 137, 138, 139], "swap": [105, 125, 136], "basemultiobjectivesampl": [106, 107, 108, 109], "get_pareto_front_tri": 107, "multiobjectivetri": [107, 110], "nsgaiimultiobjectivesampl": 108, "randommultiobjectivesampl": 109, "include_dominated_tri": [112, 151, 159], "axis_ord": [112, 151, 159], "snippet": [112, 122, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160], "fig": [112, 153, 154, 155, 156, 157, 158, 159, 160], "eigher": 112, "axi": [112, 146, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 160], "titl": [112, 151, 159], "objective_index": [112, 151, 159], "plotli": [112, 117, 143, 145, 153, 154, 155, 156, 157, 158, 159, 160, 161, 167], "graph_obj": [112, 153, 154, 155, 156, 157, 158, 159, 160], "figur": [112, 117, 120, 145, 153, 154, 155, 156, 157, 158, 159, 160, 161], "move": [113, 163], "jupyterlab": [117, 161], "render": [117, 161], "primarili": 118, "alias": 118, "lifecycl": 118, "character": 119, "child": [119, 125, 131, 133, 134, 135, 137, 138, 140], "explain": [119, 138, 178], "concept": 119, "correl": [120, 174], "don": [120, 163, 173, 174], "belong": [120, 174], "depict": 120, "restart_strategi": 121, "popsiz": 121, "inc_pops": 121, "use_separable_cma": 121, "source_tri": 121, "cmae": 121, "room": 121, "multivari": [121, 129, 135, 138], "hansen": 121, "evolut": 121, "1604": 121, "00772": 121, "2016": 121, "auger": 121, "restart": 121, "proceed": [121, 135, 136], "ieee": 121, "congress": [121, 135], "evolutionari": [121, 135], "cec": 121, "2005": 121, "1769": 121, "1776": 121, "press": 121, "raymond": 121, "ro": 121, "nikolau": 121, "modif": 121, "complex": [121, 133, 138, 175], "10th": 121, "confer": [121, 136], "solv": 121, "sep": 121, "2008": 121, "dortmund": 121, "germani": 121, "inria": 121, "00287367": 121, "masahiro": 121, "nomura": 121, "shuhei": 121, "watanab": 121, "youhei": 121, "akimoto": 121, "yoshihiko": 121, "masaki": 121, "onishi": 121, "warm": 121, "aaai": 121, "converg": 121, "ipop": 121, "covari": 121, "matrix": 121, "diagon": 121, "reduc": [121, 130, 173, 179], "consequ": 121, "outperform": [121, 129, 165], "transfer": 121, "knowledg": 121, "hpo": 121, "promis": [121, 175], "prohibit": 121, "togeth": 121, "99": [122, 163, 177], "quantiz": 122, "concurr": 122, "total": [122, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181], "include_prun": [123, 130], "far": [123, 130, 179], "neither": [123, 130, 151, 159], "ordered_dict": [123, 130], "hyperopt_paramet": [124, 129], "hyperopt": [124, 129], "n_parent": [125, 132], "undxcrossov": 125, "spxcrossov": 125, "basecrossov": 125, "readthedoc": 125, "nsgaii": [125, 138], "uniformcrossov": 125, "unless": 125, "said": 125, "infeas": [125, 151, 159], "overal": 125, "fixed_param": 126, "base_sampl": 126, "partial_sampl": 126, "unfix": 126, "qmc_type": 127, "sobol": 127, "scrambl": 127, "warn_asynchronous_seed": 127, "mont": [127, 165], "carlo": [127, 165], "discrep": 127, "qmc": 127, "seqeunc": 127, "randam": 127, "bergstra": 127, "jame": 127, "yoshua": 127, "bengio": 127, "hyper": [127, 129, 131], "journal": 127, "research": 127, "2012": 127, "scipi": 127, "stat": 127, "qmcsamper": 127, "mention": 127, "afterward": 127, "halton": 127, "m": [127, 138], "degrad": 127, "n_ei_candid": 129, "default_weight": 129, "constant_liar": [129, 138], "mixtur": 129, "gmm": 129, "l": [129, 131], "ratio": 129, "scienc": 129, "vision": 129, "bad": 129, "good": [129, 179], "contribut": 129, "propos": 129, "bohb": 129, "robust": [129, 175], "decompos": 129, "past": 129, "joint": 129, "subspac": 129, "partit": 129, "whole": [129, 179], "becom": 129, "z": [129, 150, 158], "nearbi": 129, "abnorm": 129, "leav": [129, 177], "Such": 129, "zombi": 129, "constant": 129, "liar": 129, "costli": 129, "signific": 129, "intersectionsearchspac": 130, "much": [130, 165], "blend": 131, "rectangl": 131, "blx": 131, "eshelman": 131, "d": [131, 138, 165], "schaffer": 131, "real": [131, 134, 135, 137, 163], "schemata": 131, "foga": 131, "1992": 131, "parametr": [131, 135], "parents_param": [131, 132, 133, 134, 135, 136, 137], "rng": [131, 132, 133, 134, 135, 136, 137], "search_space_bound": [131, 132, 133, 134, 135, 136, 137], "num_par": [131, 132, 133, 134, 135, 136, 137], "num_paramet": [131, 132, 133, 134, 135, 136, 137], "len_search_spac": [131, 132, 133, 134, 135, 136, 137], "dimension": [131, 132, 133, 134, 135, 136, 137, 149, 157, 165, 167], "moment": 132, "simul": [133, 137, 174], "polynomi": 133, "deb": 133, "agraw": 133, "syst": 133, "1995": 133, "pag": 133, "small": [133, 137], "distant": [133, 137], "children": [133, 137], "epsilon": 134, "simplex": 134, "spx": 134, "shigeyoshi": 134, "tsutsui": 134, "david": 134, "goldberg": 134, "kumara": 134, "sastri": 134, "linkag": 134, "ga": 134, "illig": 134, "2000": 134, "expans": 134, "sqrt": [134, 135, 146, 154], "sigma_xi": 135, "sigma_eta": 135, "unimod": 135, "h": 135, "kita": 135, "ono": 135, "kobayashi": 135, "1999": 135, "cec99": 135, "cat": [135, 173], "99th8406": 135, "pp": [135, 165], "1581": 135, "1588": 135, "vol": [135, 165], "xi": 135, "drawn": 135, "gilbert": 136, "syswerda": 136, "1989": 136, "3rd": 136, "morgan": 136, "kaufmann": 136, "inc": 136, "san": 136, "francisco": 136, "ca": 136, "usa": 136, "vsbx": 137, "maintain": 137, "excel": 137, "sbx": 137, "pedro": 137, "ballest": 137, "jonathan": 137, "carter": 137, "modal": 137, "gecco": 137, "2003": 137, "706": 137, "717": 137, "overview": [138, 165], "gridsampl": [138, 165], "qmcsampler": [138, 165], "dn": 138, "mnp": 138, "10000": 138, "ineffici": 138, "caus": [138, 166], "wish": 140, "public": 141, "isn": [143, 144, 145, 149, 153, 157], "target_nam": [145, 146, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 167, 171], "contour": [145, 153], "miss": [145, 149, 153, 157, 160], "displai": [145, 146, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160], "color": [145, 151, 153, 159], "colormap": [145, 149, 153, 157], "revers": [145, 149, 153, 157], "edf": [146, 154], "empir": [146, 154, 167], "legend": [146, 147, 148, 149, 156, 157], "adjust": [146, 147, 148], "math": [146, 154], "acklei": [146, 154], "co": [146, 154], "pi": [146, 154], "widest": [146, 154], "study0": [146, 154], "500": [146, 154], "narrow": [146, 154, 165], "study1": [146, 154], "narrowest": [146, 154], "optimum": [146, 154], "study2": [146, 154], "compar": [146, 148, 154, 156, 175], "error_bar": [148, 156], "tight_layout": 148, "yourself": 148, "image_nam": 148, "bbox_inch": 148, "tight": 148, "v5": [151, 159], "categori": [151, 159], "slice": [152, 160, 167], "practic": 154, "analysi": [161, 168, 169, 182], "click": [163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179], "download": [163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182], "entir": [163, 165], "quickli": 163, "convention": 163, "repeatedli": 163, "upon": 163, "found_x": 163, "995094039232584": 163, "4068451051425052e": 163, "clarifi": 163, "terminologi": 163, "outcom": 163, "2022": [163, 170], "147414": 163, "150176": 163, "46": [163, 171, 175, 177, 181], "086579571248485": 163, "50540": 163, "50875": 163, "78870971328488": 163, "33": [163, 170, 177], "602855962037864": 163, "51205": 163, "51395": 163, "796797043371267": 163, "634079435542894": 163, "51666": 163, "51834": 163, "651244933944341": 163, "47": [163, 175, 177], "24818783678474": 163, "52086": 163, "52251": 163, "873731725692001": 163, "52": [163, 177], "33433918397783": 163, "52498": 163, "52679": 163, "23424765846303": 163, "34": [163, 175, 177], "19496210536894": 163, "52949": 163, "53117": 163, "847645860119176": 163, "65": [163, 171, 177], "96689707838414": 163, "53367": 163, "53529": 163, "122000805120875": 163, "943919073674877": 163, "53770": 163, "53930": 163, "308159469202607": 163, "661868815842084": 163, "54164": 163, "54327": 163, "80188493645316": 163, "06072691821092": 163, "54561": 163, "54723": 163, "003794532483385": 163, "0020324412741866207": 163, "54955": 163, "57923": 163, "045082605006661": 163, "04182333125747119": 163, "58247": 163, "60901": 163, "795492466501913": 163, "37144145783984106": 163, "61217": 163, "63861": 163, "3905400276967805": 163, "7585083902489218": 163, "64174": 163, "66751": 163, "1290761283275548": 163, "14": [163, 165, 171, 173, 177], "764335812748651": 163, "67060": 163, "69636": 163, "9704326984283027": 163, "7970859041789478": 163, "69939": 163, "72518": 163, "9486112758010377": 163, "31872626566861": 163, "72826": 163, "75383": 163, "9139144428140749": 163, "413838853713183": 163, "75691": 163, "78283": 163, "5536533891808633": 163, "18": [163, 165, 177], "119": 163, "92158087410253": 163, "78589": 163, "81197": 163, "950871238129984": 163, "19": [163, 165, 171, 177], "55279434266074": 163, "81496": 163, "84107": 163, "748234768476074": 163, "5148018416224773": 163, "84408": 163, "87020": 163, "717496927953338": 163, "5178344466537307": 163, "87324": 163, "89938": 163, "2803928525551385": 163, "22": [163, 177], "4500627958393517": 163, "90244": 163, "92857": 163, "7958144678500111": 163, "432705048512954": 163, "93152": 163, "95761": 163, "7363176676098235": 163, "39262635139569696": 163, "96069": 163, "98686": 163, "6265990355847166": 163, "907225039277789": 163, "98998": 163, "101603": 163, "811978847587191": 163, "26": [163, 173, 177], "710588356773674": 163, "101919": 163, "104572": 163, "7767946191199802": 163, "27": [163, 175, 177], "018557789110366454": 163, "104887": 163, "107550": 163, "1362269764414026": 163, "28": [163, 171, 177], "929051695169287": 163, "107853": 163, "110570": 163, "595699055144811": 163, "29": [163, 177], "32793928910041537": 163, "110880": 163, "113527": 163, "5726598371637523": 163, "825295347351236": 163, "113840": 163, "116549": 163, "729336379315779": 163, "24945700739817905": 163, "116862": 163, "119600": 163, "499456712236585": 163, "7752182213706074": 163, "119914": 163, "122657": 163, "33410137722290933": 163, "008307872147972828": 163, "122963": 163, "125704": 163, "0911475295769053": 163, "643172452311429": 163, "126017": 163, "128754": 163, "3755362452110531": 163, "854993471389687": 163, "129069": 163, "131770": 163, "566726778710293": 163, "871575038789833": 163, "132080": 163, "134860": 163, "967631835173906": 163, "37": [163, 177], "018480075612414982": 163, "135162": 163, "137906": 163, "8640585581494187": 163, "825128879345601": 163, "138221": 163, "140949": 163, "41353037671905": 163, "39": [163, 166, 175, 177], "632864776001151": 163, "141263": 163, "144000": 163, "825292769972143": 163, "40": [163, 173, 175, 177], "53": [163, 177], "92426314413532": 163, "144303": 163, "147107": 163, "343314179860162": 163, "42": [163, 167, 177], "7019145402058404": 163, "150493": 163, "153236": 163, "3045744670986936": 163, "43": [163, 166, 177], "06801188131985353": 163, "153551": 163, "156342": 163, "739209123396056": 163, "44": [163, 177], "6220371575762624": 163, "156670": 163, "159453": 163, "38072943657452285": 163, "498484601960534": 163, "159763": 163, "162555": 163, "3909415509501981": 163, "04670298129398168": 163, "162870": 163, "165618": 163, "2161087256312935": 163, "641240605948013": 163, "165933": 163, "168719": 163, "0637180614591895": 163, "48": [163, 177], "138486211728315": 163, "169031": 163, "171810": 163, "22842267689826332": 163, "49": [163, 177], "0483357685459236": 163, "172118": 163, "174914": 163, "0238826927660822": 163, "08467783326821586": 163, "175234": 163, "178024": 163, "709005441170774": 163, "51": [163, 177], "006528514909370215": 163, "178342": 163, "181170": 163, "9192007740793873": 163, "0042598668634442": 163, "181479": 163, "184303": 163, "997872330057969": 163, "3798288967349666": 163, "184618": 163, "187449": 163, "5426694061706696": 163, "292692370950921": 163, "187767": 163, "190744": 163, "700498541186594": 163, "55": [163, 177], "502564023025102": 163, "191067": 163, "193965": 163, "12192460352037521": 163, "56": [163, 177], "0004428454127217944": 163, "194286": 163, "197119": 163, "0210438925278047": 163, "57": [163, 177], "322436261639222": 163, "197438": 163, "200255": 163, "3648828005800175": 163, "58": [163, 177], "29615933820655077": 163, "200563": 163, "203417": 163, "455794764627764": 163, "3010648503092135": 163, "203738": 163, "206577": 163, "073900877648017": 163, "275321360647972": 163, "206900": 163, "209735": 163, "8706987290151613": 163, "61": [163, 177], "15832399344921855": 163, "210048": 163, "212908": 163, "397899476563137": 163, "62": [163, 175, 177], "004390427258324792": 163, "213222": 163, "216036": 163, "933739700737736": 163, "63": [163, 170, 171, 177], "3475369635719618": 163, "216360": 163, "219225": 163, "1608345978527526": 163, "108": 163, "86959913071502": 163, "219548": 163, "222380": 163, "434059570977876": 163, "025153375618630514": 163, "222699": 163, "225611": 163, "84140184232271": 163, "66": [163, 177], "3042383602034437": 163, "225925": 163, "228807": 163, "857967443457305": 163, "67": [163, 177], "4161782326875265": 163, "229124": 163, "231999": 163, "5330176139710372": 163, "68": [163, 175, 177], "92472223270777": 163, "232322": 163, "235167": 163, "305256757455882": 163, "69": [163, 177], "574505712469172": 163, "235479": 163, "238387": 163, "424308501050664": 163, "70": [163, 177], "373258413636674": 163, "238710": 163, "241557": 163, "540538351887636": 163, "71": [163, 177], "0019996208659768698": 163, "241878": 163, "244762": 163, "044717120501849": 163, "72": [163, 177], "782047774639696": 163, "245075": 163, "247973": 163, "8843346508193015": 163, "73": [163, 177], "0058766590527446335": 163, "248289": 163, "251166": 163, "076659370286643": 163, "74": [163, 177], "3599172234218904": 163, "251491": 163, "254383": 163, "4000689844474696": 163, "75": [163, 177], "247010846087505": 163, "254699": 163, "257636": 163, "5009967157849504": 163, "76": [163, 171, 177], "07188783128321617": 163, "257953": 163, "260873": 163, "2681190617677456": 163, "77": [163, 177], "158335475795262": 163, "261196": 163, "264103": 163, "039199714543738": 163, "78": [163, 177], "7099294556861012": 163, "264431": 163, "267310": 163, "8425731159288796": 163, "79": [163, 177], "8479863348890855": 163, "267632": 163, "270577": 163, "03837150946233314": 163, "80": [163, 177], "538599932803546": 163, "270889": 163, "273823": 163, "9220882828558663": 163, "81": [163, 177], "017875951072451497": 163, "274150": 163, "277067": 163, "8662990236667978": 163, "82": [163, 177], "6281938857261669": 163, "277393": 163, "280326": 163, "2074131683366378": 163, "83": [163, 177], "00843620700414333": 163, "280642": 163, "283598": 163, "091848826906735": 163, "84": [163, 177], "22382853862818078": 163, "283915": 163, "286863": 163, "47310520883645": 163, "85": [163, 177], "194121038550644": 163, "287189": 163, "290142": 163, "4812565741797212": 163, "86": [163, 177], "7756244842453202": 163, "290468": 163, "293403": 163, "667474396401585": 163, "87": [163, 177], "430528367389642": 163, "293723": 163, "296714": 163, "330349408863324": 163, "88": [163, 177], "088504498606074": 163, "297027": 163, "299994": 163, "014714662883716": 163, "89": [163, 171, 177], "009798515393895788": 163, "300318": 163, "303293": 163, "0989874506889423": 163, "48109074646539685": 163, "303630": 163, "306601": 163, "3063929452021146": 163, "91": [163, 177], "203181954530815e": 163, "306929": 163, "309900": 163, "9904066783883105": 163, "92": [163, 177, 179], "8908390998717084": 163, "310223": 163, "313197": 163, "9438427304756383": 163, "93": [163, 177], "17218544337103522": 163, "313512": 163, "316445": 163, "585047661325984": 163, "94": [163, 177], "04279498155323215": 163, "316786": 163, "319748": 163, "2068694795111936": 163, "95": [163, 177], "1433789181920844": 163, "320076": 163, "323017": 163, "772957675239904": 163, "96": [163, 177], "466004436555193": 163, "323337": 163, "326387": 163, "210786701510713": 163, "97": [163, 177], "9503974962219335": 163, "326709": 163, "329717": 163, "012439310053166341": 163, "98": [163, 177], "3406386239496571": 163, "330048": 163, "333029": 163, "5836425480974268": 163, "1227844908527844": 163, "333354": 163, "336351": 163, "9403847439505297": 163, "200": [163, 166, 177, 181], "000992709268417": 163, "854716916009983e": 163, "671": [163, 169], "001_first": [163, 169], "jupyt": [163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182], "ipynb": [163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179], "galleri": [163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182], "sphinx": [163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182], "logarithm": 164, "momentumsgd": 164, "num_lay": 164, "num_channel": 164, "512": 164, "num_unit": 164, "dropout_r": 164, "drop_path_r": 164, "classifier_nam": 164, "classifier_obj": 164, "nn": [164, 171], "create_model": 164, "in_siz": 164, "n_layer": [164, 171], "layer": [164, 171], "n_unit": 164, "n_units_l": [164, 171], "relu": [164, 171], "difficulti": 164, "roughli": 164, "That": 164, "unimport": 164, "001": [164, 169, 175], "002_configur": [164, 169], "down": 165, "lead": 165, "explan": 165, "partialfixedsampl": 165, "__class__": 165, "__name__": [165, 166, 173], "stage": 165, "nopprun": 165, "percentileprun": [165, 175], "thresholdprun": [165, 175], "though": 165, "meet": 165, "predefin": 165, "major": 165, "exclus": 165, "usecas": 165, "iri": [165, 172, 175], "valid_x": [165, 167, 177], "train_i": [165, 167, 177], "valid_i": [165, 167, 177], "test_siz": [165, 167, 175, 177], "stream": [165, 170, 176, 177], "stdout": [165, 170, 176, 177], "get_logg": [165, 170, 176, 177], "streamhandl": [165, 170, 176, 177], "f962cc85": 165, "a325": 165, "4ae8": 165, "833a": 165, "d6707ea591b8": 165, "21052631578947367": 165, "020791619561715075": 165, "39473684210526316": 165, "1408291818919181e": 165, "10526315789473684": 165, "0031382811471674e": 165, "3157894736842105": 165, "000222391680410088": 165, "3421052631578947": 165, "2256419683516314e": 165, "052631578947368474": 165, "010139734735489642": 165, "23684210526315785": 165, "00012037725654798642": 165, "189083646025381e": 165, "wiki": 165, "kurobako": 165, "sai": 165, "consult": 165, "et": 165, "al": 165, "ieic": 165, "tran": 165, "j103": 165, "615": 165, "631": 165, "japanes": 165, "gp": 165, "ei": 165, "suffici": 165, "simpler": 165, "xgboostpruningcallback": 165, "introduc": [165, 178], "pruning_callback": [165, 167, 177], "bst": 165, "xgb": 165, "dtrain": [165, 167, 177], "eval": [165, 171], "dvalid": [165, 167, 177], "385": [165, 169], "003_efficient_optimization_algorithm": [165, 169], "straightforward": 166, "cours": 166, "kubernet": 166, "video": [166, 182], "IF": 166, "642": [166, 175, 181], "__main__": [166, 173], "973": 166, "35553104173011": 166, "73465151598285": 166, "04": [166, 171], "013": 166, "6002397305938905": 166, "144816945707463": 166, "028194513284051464": 166, "03": [166, 169, 171], "748": 166, "8320877810162361": 166, "783": 166, "45966755098074": 166, "945671597566982": 166, "deadlock": 166, "seriou": 166, "q5": 166, "004_distribut": [166, 169], "walk": [167, 177], "breast": 167, "plot_pareto_front": [167, 171], "plot_contour": 167, "plot_edf": 167, "plot_intermediate_valu": 167, "plot_optimization_histori": 167, "plot_parallel_coordin": 167, "plot_slic": 167, "load_breast_canc": [167, 177], "boosting_typ": [167, 177], "gbdt": [167, 177], "lightgbmpruningcallback": [167, 177], "gbm": [167, 177], "pred": [167, 171, 177, 179], "pred_label": [167, 177], "rint": [167, 177], "hostedtoolcach": [167, 177], "x64": [167, 177], "lib": [167, 177], "python3": [167, 177], "site": [167, 177], "239": [167, 172, 177, 181], "userwarn": [167, 177], "log_evalu": [167, 177], "curv": 167, "564": [167, 169], "005_visual": [167, 169], "showcas": [168, 171, 176, 180, 182], "621": 169, "tutorial_10_key_featur": 169, "mb": [169, 181], "01": [169, 171, 178, 181], "storage_nam": 170, "366930503792068": 170, "516664684582832": 170, "41723546511117854": 170, "6459376634871035": 170, "18239206712917": 170, "760415963029855": 170, "384221211591605": 170, "602162190760957": 170, "8630496805154": 170, "1064643771151115": 170, "02489752056677": 170, "938822174640692": 170, "366931": 170, "516665": 170, "417235": 170, "645938": 170, "182392": 170, "760416": 170, "384221": 170, "602162": 170, "863050": 170, "106464": 170, "024898": 170, "938822": 170, "689652": 170, "702441": 170, "645125": 170, "663949": 170, "718130": 170, "730004": 170, "800533": 170, "816667": 170, "839266": 170, "851825": 170, "867146": 170, "879017": 170, "834": [170, 181], "001_rdb": [170, 181], "fashion": 171, "mnist": [171, 172], "flop": 171, "thop": 171, "measur": 171, "torchvis": 171, "is_avail": 171, "n_train_exampl": 171, "n_valid_exampl": 171, "define_model": 171, "in_featur": 171, "out_featur": 171, "dropout_": 171, "dropout": 171, "logsoftmax": 171, "dim": 171, "train_model": 171, "train_load": 171, "batch_idx": 171, "view": 171, "zero_grad": 171, "nll_loss": 171, "eval_model": 171, "valid_load": 171, "no_grad": 171, "argmax": 171, "keepdim": 171, "eq": 171, "view_a": 171, "profil": 171, "randn": 171, "train_dataset": 171, "fashionmnist": 171, "totensor": 171, "dataload": 171, "val_dataset": 171, "val_load": 171, "300": 171, "s3": 171, "eu": 171, "central": 171, "amazonaw": 171, "imag": 171, "idx3": 171, "ubyt": 171, "gz": 171, "raw": 171, "26421880": 171, "40960": 171, "06": [171, 173], "397660": 171, "99it": 171, "104448": 171, "09": [171, 173], "379188": 171, "49it": 171, "350208": 171, "1131847": 171, "76it": 171, "923648": 171, "2180068": 171, "22it": 171, "2879488": 171, "7003289": 171, "82it": 171, "6329344": 171, "13548749": 171, "38it": 171, "9616384": 171, "17429868": 171, "13163520": 171, "21941053": 171, "46it": 171, "16578560": 171, "23777418": 171, "71it": 171, "20085760": 171, "26611724": 171, "03it": 171, "23639040": 171, "26970100": 171, "02it": 171, "26422272it": 171, "18023722": 171, "80it": 171, "extract": 171, "idx1": 171, "29515": 171, "29696it": 171, "321563": 171, "41it": 171, "t10k": 171, "4422102": 171, "375115": 171, "32it": 171, "374623": 171, "07it": 171, "316416": 171, "980822": 171, "92it": 171, "855040": 171, "1994786": 171, "04it": 171, "2612224": 171, "6190975": 171, "4422656it": 171, "5891959": 171, "91it": 171, "5148": 171, "6144it": 171, "35841173": 171, "54it": 171, "pick": 171, "highest": 171, "trial_with_highest_accuraci": 171, "tnumber": 171, "tparam": 171, "tvalu": 171, "n_units_l0": 171, "dropout_0": 171, "30854841885349826": 171, "0021479467233612493": 171, "51610": 171, "83203125": 171, "457": [171, 181], "002_multi_object": [171, 181], "annot": 172, "retriev": 172, "cross_val_scor": 172, "9400000000000001": 172, "003_attribut": [172, 181], "ipython": 173, "shell": 173, "fine": 173, "4029807483972005e": 173, "0037456384614605": 173, "boilerpl": [173, 174], "196": 173, "353767789264026": 173, "372500782588228": 173, "197": 173, "784266965526376": 173, "972941852774387": 173, "204": 173, "704254135013741": 173, "280758099793617e": 173, "9984897821018828": 173, "296": [173, 181], "004_cli": [173, 181], "refin": 174, "skoptsampl": 174, "respons": 174, "anneal": 174, "sa": 174, "temperatur": 174, "_rng": 174, "_temperatur": 174, "_current_tri": 174, "transit": 174, "prev_trial": 174, "neighborhood": 174, "msg": 174, "notimplementederror": 174, "current_valu": 174, "neighbor_low": 174, "neighbor_high": 174, "rest": 174, "unrel": 174, "favor": [174, 175], "simplic": 174, "simulated_ann": 174, "892833401373366": 174, "08737123827700088": 174, "900467134651422": 174, "speak": 174, "378": [174, 181], "005_user_defined_sampl": [174, 181], "appear": 175, "illustr": 175, "aggress": 175, "aim": [175, 178], "stochast": 175, "demonstr": [175, 179], "diagnost": 175, "holdout": 175, "enough": [175, 178], "had": 175, "_state": 175, "warmup_step": 175, "warmup_tri": 175, "_warmup_step": 175, "_warmup_tri": 175, "yet": [175, 177], "this_scor": 175, "completed_tri": 175, "other_scor": 175, "lastli": 175, "confirm": 175, "train_siz": 175, "hing": 175, "perceptron": 175, "00001": 175, "006_user_defined_prun": [175, 181], "great": 176, "stopwhentrialkeepbeingprunedcallback": 176, "_consequtive_pruned_count": 176, "study_stop_cb": 176, "74849a9b": 176, "39b2": 176, "4749": 176, "8849": 176, "ad7e641c0059": 176, "9600403157070864": 176, "5300886033202107": 176, "6586743999658903": 176, "12085156630915672": 176, "90787534210404": 176, "006": [176, 181], "007_optuna_callback": [176, 181], "ve": 177, "box": 177, "lit": 177, "bagging_fraq": 177, "expectedli": 177, "972027972027972": 177, "986013986013986": 177, "8115649367796662": 177, "965034965034965": 177, "80850408401964": 177, "951048951048951": 177, "8537666154558152": 177, "958041958041958": 177, "9058880158771568": 177, "5949063999373849": 177, "8881184462301519": 177, "8203148027898934": 177, "7627315070845893": 177, "9790209790209791": 177, "7555389393446715": 177, "993006993006993": 177, "8645955050245057": 177, "9527382740582846": 177, "8647618045111555": 177, "9997784694581432": 177, "6996318416010805": 177, "think": 177, "486ff82b": 177, "b281": 177, "4966": 177, "a68d": 177, "d21788868810": 177, "870919874405121": 177, "7420457080227948": 177, "9600993429485789": 177, "7290479639195121": 177, "7468678710220975": 177, "7264714060445397": 177, "9813865304651621": 177, "9450894415721338": 177, "101": 177, "008_specify_param": [177, 181], "benefici": 178, "tradit": 178, "supervis": [178, 179], "classif": [178, 179], "logisticregress": [178, 179], "make_classif": [178, 179], "n_featur": [178, 179], "x_test": [178, 179], "y_test": [178, 179], "naiv": 178, "suggest_": 178, "lbfg": 178, "saga": 178, "block": 178, "pruned_tri": 178, "rather": 178, "paralleliz": 178, "batched_object": 178, "x_batch": 178, "y_batch": 178, "118": [178, 181], "009_ask_and_tel": [178, 181], "classic": 179, "recal": 179, "precis": 179, "f1": 179, "detailed_object": 179, "acc": 179, "recall_scor": 179, "precision_scor": 179, "f1_score": 179, "9285714285714286": 179, "activ": 179, "049": [179, 181], "010_reuse_best_tri": [179, 181], "comfort": [180, 182], "219": 181, "tutorial_20_recip": 181, "introduct": 182, "highli": 182, "tutorial_python": 182, "tutorial_jupyt": 182}, "objects": {"": [[118, 0, 0, "-", "optuna"]], "optuna": [[7, 1, 1, "", "TrialPruned"], [4, 0, 0, "-", "cli"], [8, 2, 1, "", "copy_study"], [9, 2, 1, "", "create_study"], [10, 2, 1, "", "delete_study"], [5, 0, 0, "-", "distributions"], [6, 0, 0, "-", "exceptions"], [27, 2, 1, "", "get_all_study_summaries"], [99, 0, 0, "-", "importance"], [101, 0, 0, "-", "integration"], [66, 2, 1, "", "load_study"], [102, 0, 0, "-", "logging"], [113, 0, 0, "-", "multi_objective"], [119, 0, 0, "-", "pruners"], [138, 0, 0, "-", "samplers"], [140, 0, 0, "-", "storages"], [141, 0, 0, "-", "study"], [142, 0, 0, "-", "trial"], [161, 0, 0, "-", "visualization"], [4, 7, 1, "cmdoption-optuna-debug", "--debug"], [4, 7, 1, "cmdoption-optuna-log-file", "--log-file"], [4, 7, 1, "cmdoption-optuna-q", "--quiet"], [4, 7, 1, "cmdoption-optuna-storage", "--storage"], [4, 7, 1, "cmdoption-optuna-v", "--verbose"], [4, 7, 1, "cmdoption-optuna-version", "--version"], [4, 7, 1, "cmdoption-optuna-q", "-q"], [4, 7, 1, "cmdoption-optuna-v", "-v"]], "optuna.distributions": [[11, 3, 1, "", "CategoricalDistribution"], [12, 3, 1, "", "DiscreteUniformDistribution"], [13, 3, 1, "", "FloatDistribution"], [14, 3, 1, "", "IntDistribution"], [15, 3, 1, "", "IntLogUniformDistribution"], [16, 3, 1, "", "IntUniformDistribution"], [17, 3, 1, "", "LogUniformDistribution"], [18, 3, 1, "", "UniformDistribution"], [19, 2, 1, "", "check_distribution_compatibility"], [20, 2, 1, "", "distribution_to_json"], [21, 2, 1, "", "json_to_distribution"]], "optuna.distributions.CategoricalDistribution": [[11, 4, 1, "", "choices"], [11, 5, 1, "", "single"], [11, 5, 1, "", "to_external_repr"], [11, 5, 1, "", "to_internal_repr"]], "optuna.distributions.DiscreteUniformDistribution": [[12, 4, 1, "", "high"], [12, 4, 1, "", "low"], [12, 6, 1, "", "q"], [12, 5, 1, "", "single"], [12, 5, 1, "", "to_external_repr"], [12, 5, 1, "", "to_internal_repr"]], "optuna.distributions.FloatDistribution": [[13, 4, 1, "", "high"], [13, 4, 1, "", "log"], [13, 4, 1, "", "low"], [13, 5, 1, "", "single"], [13, 4, 1, "", "step"], [13, 5, 1, "", "to_external_repr"], [13, 5, 1, "", "to_internal_repr"]], "optuna.distributions.IntDistribution": [[14, 4, 1, "", "high"], [14, 4, 1, "", "log"], [14, 4, 1, "", "low"], [14, 5, 1, "", "single"], [14, 4, 1, "", "step"], [14, 5, 1, "", "to_external_repr"], [14, 5, 1, "", "to_internal_repr"]], "optuna.distributions.IntLogUniformDistribution": [[15, 4, 1, "", "high"], [15, 4, 1, "", "low"], [15, 5, 1, "", "single"], [15, 4, 1, "", "step"], [15, 5, 1, "", "to_external_repr"], [15, 5, 1, "", "to_internal_repr"]], "optuna.distributions.IntUniformDistribution": [[16, 4, 1, "", "high"], [16, 4, 1, "", "low"], [16, 5, 1, "", "single"], [16, 4, 1, "", "step"], [16, 5, 1, "", "to_external_repr"], [16, 5, 1, "", "to_internal_repr"]], "optuna.distributions.LogUniformDistribution": [[17, 4, 1, "", "high"], [17, 4, 1, "", "low"], [17, 5, 1, "", "single"], [17, 5, 1, "", "to_external_repr"], [17, 5, 1, "", "to_internal_repr"]], "optuna.distributions.UniformDistribution": [[18, 4, 1, "", "high"], [18, 4, 1, "", "low"], [18, 5, 1, "", "single"], [18, 5, 1, "", "to_external_repr"], [18, 5, 1, "", "to_internal_repr"]], "optuna.exceptions": [[22, 1, 1, "", "CLIUsageError"], [23, 1, 1, "", "DuplicatedStudyError"], [24, 1, 1, "", "OptunaError"], [25, 1, 1, "", "StorageInternalError"], [26, 1, 1, "", "TrialPruned"]], "optuna.importance": [[28, 3, 1, "", "FanovaImportanceEvaluator"], [29, 3, 1, "", "MeanDecreaseImpurityImportanceEvaluator"], [30, 2, 1, "", "get_param_importances"]], "optuna.importance.FanovaImportanceEvaluator": [[28, 5, 1, "", "evaluate"]], "optuna.importance.MeanDecreaseImpurityImportanceEvaluator": [[29, 5, 1, "", "evaluate"]], "optuna.integration": [[31, 3, 1, "", "AllenNLPExecutor"], [32, 3, 1, "", "AllenNLPPruningCallback"], [33, 3, 1, "", "BoTorchSampler"], [34, 3, 1, "", "CatBoostPruningCallback"], [35, 3, 1, "", "CatalystPruningCallback"], [36, 3, 1, "", "ChainerMNStudy"], [37, 3, 1, "", "ChainerPruningExtension"], [38, 3, 1, "", "CmaEsSampler"], [39, 4, 1, "", "FastAIPruningCallback"], [40, 3, 1, "", "FastAIV1PruningCallback"], [41, 3, 1, "", "FastAIV2PruningCallback"], [42, 3, 1, "", "KerasPruningCallback"], [43, 3, 1, "", "LightGBMPruningCallback"], [44, 3, 1, "", "MLflowCallback"], [45, 3, 1, "", "MXNetPruningCallback"], [46, 3, 1, "", "OptunaSearchCV"], [47, 3, 1, "", "PyCmaSampler"], [48, 3, 1, "", "PyTorchIgnitePruningHandler"], [49, 3, 1, "", "PyTorchLightningPruningCallback"], [50, 3, 1, "", "ShapleyImportanceEvaluator"], [51, 3, 1, "", "SkoptSampler"], [52, 3, 1, "", "SkorchPruningCallback"], [53, 3, 1, "", "TFKerasPruningCallback"], [54, 3, 1, "", "TensorBoardCallback"], [55, 3, 1, "", "TensorFlowPruningHook"], [56, 3, 1, "", "TorchDistributedTrial"], [57, 3, 1, "", "WeightsAndBiasesCallback"], [58, 3, 1, "", "XGBoostPruningCallback"]], "optuna.integration.AllenNLPExecutor": [[31, 5, 1, "", "run"]], "optuna.integration.AllenNLPPruningCallback": [[32, 5, 1, "", "on_epoch"], [32, 5, 1, "", "register"]], "optuna.integration.BoTorchSampler": [[33, 5, 1, "", "after_trial"], [33, 5, 1, "", "infer_relative_search_space"], [33, 5, 1, "", "reseed_rng"], [33, 5, 1, "", "sample_independent"], [33, 5, 1, "", "sample_relative"]], "optuna.integration.CatBoostPruningCallback": [[34, 5, 1, "", "after_iteration"], [34, 5, 1, "", "check_pruned"]], "optuna.integration.ChainerMNStudy": [[36, 5, 1, "", "optimize"]], "optuna.integration.CmaEsSampler": [[38, 5, 1, "", "after_trial"], [38, 5, 1, "", "infer_relative_search_space"], [38, 5, 1, "", "reseed_rng"], [38, 5, 1, "", "sample_independent"], [38, 5, 1, "", "sample_relative"]], "optuna.integration.MLflowCallback": [[44, 5, 1, "", "track_in_mlflow"]], "optuna.integration.OptunaSearchCV": [[46, 4, 1, "", "best_estimator_"], [46, 6, 1, "", "best_index_"], [46, 6, 1, "", "best_params_"], [46, 6, 1, "", "best_score_"], [46, 6, 1, "", "best_trial_"], [46, 6, 1, "", "classes_"], [46, 6, 1, "", "decision_function"], [46, 5, 1, "", "fit"], [46, 5, 1, "", "get_params"], [46, 6, 1, "", "inverse_transform"], [46, 4, 1, "", "n_splits_"], [46, 6, 1, "", "n_trials_"], [46, 6, 1, "", "predict"], [46, 6, 1, "", "predict_log_proba"], [46, 6, 1, "", "predict_proba"], [46, 4, 1, "", "refit_time_"], [46, 4, 1, "", "sample_indices_"], [46, 5, 1, "", "score"], [46, 6, 1, "", "score_samples"], [46, 4, 1, "", "scorer_"], [46, 5, 1, "", "set_params"], [46, 6, 1, "", "set_user_attr"], [46, 4, 1, "", "study_"], [46, 6, 1, "", "transform"], [46, 6, 1, "", "trials_"], [46, 6, 1, "", "trials_dataframe"], [46, 6, 1, "", "user_attrs_"]], "optuna.integration.PyCmaSampler": [[47, 5, 1, "", "after_trial"], [47, 5, 1, "", "infer_relative_search_space"], [47, 5, 1, "", "reseed_rng"], [47, 5, 1, "", "sample_independent"], [47, 5, 1, "", "sample_relative"]], "optuna.integration.ShapleyImportanceEvaluator": [[50, 5, 1, "", "evaluate"]], "optuna.integration.SkoptSampler": [[51, 5, 1, "", "after_trial"], [51, 5, 1, "", "infer_relative_search_space"], [51, 5, 1, "", "reseed_rng"], [51, 5, 1, "", "sample_independent"], [51, 5, 1, "", "sample_relative"]], "optuna.integration.TorchDistributedTrial": [[56, 5, 1, "", "suggest_discrete_uniform"], [56, 5, 1, "", "suggest_loguniform"], [56, 5, 1, "", "suggest_uniform"]], "optuna.integration.WeightsAndBiasesCallback": [[57, 5, 1, "", "track_in_wandb"]], "optuna.integration.allennlp": [[59, 2, 1, "", "dump_best_config"]], "optuna.integration.botorch": [[60, 2, 1, "", "qehvi_candidates_func"], [61, 2, 1, "", "qei_candidates_func"], [62, 2, 1, "", "qparego_candidates_func"]], "optuna.integration.lightgbm": [[63, 3, 1, "", "LightGBMTuner"], [64, 3, 1, "", "LightGBMTunerCV"], [65, 2, 1, "", "train"]], "optuna.integration.lightgbm.LightGBMTuner": [[63, 6, 1, "", "best_params"], [63, 6, 1, "", "best_score"], [63, 5, 1, "", "get_best_booster"], [63, 5, 1, "", "run"], [63, 5, 1, "", "sample_train_set"]], "optuna.integration.lightgbm.LightGBMTunerCV": [[64, 6, 1, "", "best_params"], [64, 6, 1, "", "best_score"], [64, 5, 1, "", "get_best_booster"], [64, 5, 1, "", "run"], [64, 5, 1, "", "sample_train_set"]], "optuna.logging": [[67, 2, 1, "", "disable_default_handler"], [68, 2, 1, "", "disable_propagation"], [69, 2, 1, "", "enable_default_handler"], [70, 2, 1, "", "enable_propagation"], [71, 2, 1, "", "get_verbosity"], [72, 2, 1, "", "set_verbosity"]], "optuna.multi_objective": [[114, 0, 0, "-", "samplers"], [115, 0, 0, "-", "study"], [116, 0, 0, "-", "trial"], [117, 0, 0, "-", "visualization"]], "optuna.multi_objective.samplers": [[103, 3, 1, "", "BaseMultiObjectiveSampler"], [104, 3, 1, "", "MOTPEMultiObjectiveSampler"], [105, 3, 1, "", "NSGAIIMultiObjectiveSampler"], [106, 3, 1, "", "RandomMultiObjectiveSampler"]], "optuna.multi_objective.samplers.BaseMultiObjectiveSampler": [[103, 5, 1, "", "infer_relative_search_space"], [103, 5, 1, "", "reseed_rng"], [103, 5, 1, "", "sample_independent"], [103, 5, 1, "", "sample_relative"]], "optuna.multi_objective.samplers.MOTPEMultiObjectiveSampler": [[104, 5, 1, "", "infer_relative_search_space"], [104, 5, 1, "", "reseed_rng"], [104, 5, 1, "", "sample_independent"], [104, 5, 1, "", "sample_relative"]], "optuna.multi_objective.samplers.NSGAIIMultiObjectiveSampler": [[105, 5, 1, "", "infer_relative_search_space"], [105, 5, 1, "", "reseed_rng"], [105, 5, 1, "", "sample_independent"], [105, 5, 1, "", "sample_relative"]], "optuna.multi_objective.samplers.RandomMultiObjectiveSampler": [[106, 5, 1, "", "infer_relative_search_space"], [106, 5, 1, "", "reseed_rng"], [106, 5, 1, "", "sample_independent"], [106, 5, 1, "", "sample_relative"]], "optuna.multi_objective.study": [[107, 3, 1, "", "MultiObjectiveStudy"], [108, 2, 1, "", "create_study"], [109, 2, 1, "", "load_study"]], "optuna.multi_objective.study.MultiObjectiveStudy": [[107, 6, 1, "", "directions"], [107, 5, 1, "", "enqueue_trial"], [107, 5, 1, "", "get_pareto_front_trials"], [107, 5, 1, "", "get_trials"], [107, 6, 1, "", "n_objectives"], [107, 5, 1, "", "optimize"], [107, 6, 1, "", "sampler"], [107, 5, 1, "", "set_system_attr"], [107, 5, 1, "", "set_user_attr"], [107, 6, 1, "", "system_attrs"], [107, 6, 1, "", "trials"], [107, 6, 1, "", "user_attrs"]], "optuna.multi_objective.trial": [[110, 3, 1, "", "FrozenMultiObjectiveTrial"], [111, 3, 1, "", "MultiObjectiveTrial"]], "optuna.multi_objective.trial.FrozenMultiObjectiveTrial": [[110, 4, 1, "", "datetime_complete"], [110, 4, 1, "", "datetime_start"], [110, 4, 1, "", "distributions"], [110, 4, 1, "", "intermediate_values"], [110, 4, 1, "", "number"], [110, 4, 1, "", "params"], [110, 4, 1, "", "state"], [110, 4, 1, "", "user_attrs"], [110, 4, 1, "", "values"]], "optuna.multi_objective.trial.MultiObjectiveTrial": [[111, 6, 1, "", "datetime_start"], [111, 6, 1, "", "distributions"], [111, 6, 1, "", "number"], [111, 6, 1, "", "params"], [111, 5, 1, "", "report"], [111, 5, 1, "", "set_system_attr"], [111, 5, 1, "", "set_user_attr"], [111, 5, 1, "", "suggest_categorical"], [111, 5, 1, "", "suggest_discrete_uniform"], [111, 5, 1, "", "suggest_float"], [111, 5, 1, "", "suggest_int"], [111, 5, 1, "", "suggest_loguniform"], [111, 5, 1, "", "suggest_uniform"], [111, 6, 1, "", "system_attrs"], [111, 6, 1, "", "user_attrs"]], "optuna.multi_objective.visualization": [[112, 2, 1, "", "plot_pareto_front"]], "optuna.pruners": [[73, 3, 1, "", "BasePruner"], [74, 3, 1, "", "HyperbandPruner"], [75, 3, 1, "", "MedianPruner"], [76, 3, 1, "", "NopPruner"], [77, 3, 1, "", "PatientPruner"], [78, 3, 1, "", "PercentilePruner"], [79, 3, 1, "", "SuccessiveHalvingPruner"], [80, 3, 1, "", "ThresholdPruner"]], "optuna.pruners.BasePruner": [[73, 5, 1, "", "prune"]], "optuna.pruners.HyperbandPruner": [[74, 5, 1, "", "prune"]], "optuna.pruners.MedianPruner": [[75, 5, 1, "", "prune"]], "optuna.pruners.NopPruner": [[76, 5, 1, "", "prune"]], "optuna.pruners.PatientPruner": [[77, 5, 1, "", "prune"]], "optuna.pruners.PercentilePruner": [[78, 5, 1, "", "prune"]], "optuna.pruners.SuccessiveHalvingPruner": [[79, 5, 1, "", "prune"]], "optuna.pruners.ThresholdPruner": [[80, 5, 1, "", "prune"]], "optuna.samplers": [[120, 3, 1, "", "BaseSampler"], [121, 3, 1, "", "CmaEsSampler"], [122, 3, 1, "", "GridSampler"], [123, 3, 1, "", "IntersectionSearchSpace"], [124, 3, 1, "", "MOTPESampler"], [125, 3, 1, "", "NSGAIISampler"], [126, 3, 1, "", "PartialFixedSampler"], [127, 3, 1, "", "QMCSampler"], [128, 3, 1, "", "RandomSampler"], [129, 3, 1, "", "TPESampler"], [130, 2, 1, "", "intersection_search_space"], [139, 0, 0, "-", "nsgaii"]], "optuna.samplers.BaseSampler": [[120, 5, 1, "", "after_trial"], [120, 5, 1, "", "infer_relative_search_space"], [120, 5, 1, "", "reseed_rng"], [120, 5, 1, "", "sample_independent"], [120, 5, 1, "", "sample_relative"]], "optuna.samplers.CmaEsSampler": [[121, 5, 1, "", "after_trial"], [121, 5, 1, "", "infer_relative_search_space"], [121, 5, 1, "", "reseed_rng"], [121, 5, 1, "", "sample_independent"], [121, 5, 1, "", "sample_relative"]], "optuna.samplers.GridSampler": [[122, 5, 1, "", "after_trial"], [122, 5, 1, "", "infer_relative_search_space"], [122, 5, 1, "", "reseed_rng"], [122, 5, 1, "", "sample_independent"], [122, 5, 1, "", "sample_relative"]], "optuna.samplers.IntersectionSearchSpace": [[123, 5, 1, "", "calculate"]], "optuna.samplers.MOTPESampler": [[124, 5, 1, "", "after_trial"], [124, 5, 1, "", "hyperopt_parameters"], [124, 5, 1, "", "infer_relative_search_space"], [124, 5, 1, "", "reseed_rng"], [124, 5, 1, "", "sample_independent"], [124, 5, 1, "", "sample_relative"]], "optuna.samplers.NSGAIISampler": [[125, 5, 1, "", "after_trial"], [125, 5, 1, "", "infer_relative_search_space"], [125, 5, 1, "", "reseed_rng"], [125, 5, 1, "", "sample_independent"], [125, 5, 1, "", "sample_relative"]], "optuna.samplers.PartialFixedSampler": [[126, 5, 1, "", "after_trial"], [126, 5, 1, "", "infer_relative_search_space"], [126, 5, 1, "", "reseed_rng"], [126, 5, 1, "", "sample_independent"], [126, 5, 1, "", "sample_relative"]], "optuna.samplers.QMCSampler": [[127, 5, 1, "", "after_trial"], [127, 5, 1, "", "infer_relative_search_space"], [127, 5, 1, "", "reseed_rng"], [127, 5, 1, "", "sample_independent"], [127, 5, 1, "", "sample_relative"]], "optuna.samplers.RandomSampler": [[128, 5, 1, "", "after_trial"], [128, 5, 1, "", "infer_relative_search_space"], [128, 5, 1, "", "reseed_rng"], [128, 5, 1, "", "sample_independent"], [128, 5, 1, "", "sample_relative"]], "optuna.samplers.TPESampler": [[129, 5, 1, "", "after_trial"], [129, 5, 1, "", "hyperopt_parameters"], [129, 5, 1, "", "infer_relative_search_space"], [129, 5, 1, "", "reseed_rng"], [129, 5, 1, "", "sample_independent"], [129, 5, 1, "", "sample_relative"]], "optuna.samplers.nsgaii": [[131, 3, 1, "", "BLXAlphaCrossover"], [132, 3, 1, "", "BaseCrossover"], [133, 3, 1, "", "SBXCrossover"], [134, 3, 1, "", "SPXCrossover"], [135, 3, 1, "", "UNDXCrossover"], [136, 3, 1, "", "UniformCrossover"], [137, 3, 1, "", "VSBXCrossover"]], "optuna.samplers.nsgaii.BLXAlphaCrossover": [[131, 5, 1, "", "crossover"]], "optuna.samplers.nsgaii.BaseCrossover": [[132, 5, 1, "", "crossover"], [132, 6, 1, "", "n_parents"]], "optuna.samplers.nsgaii.SBXCrossover": [[133, 5, 1, "", "crossover"]], "optuna.samplers.nsgaii.SPXCrossover": [[134, 5, 1, "", "crossover"]], "optuna.samplers.nsgaii.UNDXCrossover": [[135, 5, 1, "", "crossover"]], "optuna.samplers.nsgaii.UniformCrossover": [[136, 5, 1, "", "crossover"]], "optuna.samplers.nsgaii.VSBXCrossover": [[137, 5, 1, "", "crossover"]], "optuna.storages": [[81, 3, 1, "", "RDBStorage"], [82, 3, 1, "", "RedisStorage"], [83, 3, 1, "", "RetryFailedTrialCallback"], [84, 2, 1, "", "fail_stale_trials"]], "optuna.storages.RDBStorage": [[81, 5, 1, "", "check_trial_is_updatable"], [81, 5, 1, "", "create_new_study"], [81, 5, 1, "", "create_new_trial"], [81, 5, 1, "", "delete_study"], [81, 5, 1, "", "get_all_studies"], [81, 5, 1, "", "get_all_trials"], [81, 5, 1, "", "get_all_versions"], [81, 5, 1, "", "get_best_trial"], [81, 5, 1, "", "get_current_version"], [81, 5, 1, "", "get_failed_trial_callback"], [81, 5, 1, "", "get_head_version"], [81, 5, 1, "", "get_heartbeat_interval"], [81, 5, 1, "", "get_n_trials"], [81, 5, 1, "", "get_study_directions"], [81, 5, 1, "", "get_study_id_from_name"], [81, 5, 1, "", "get_study_name_from_id"], [81, 5, 1, "", "get_study_system_attrs"], [81, 5, 1, "", "get_study_user_attrs"], [81, 5, 1, "", "get_trial"], [81, 5, 1, "", "get_trial_id_from_study_id_trial_number"], [81, 5, 1, "", "get_trial_number_from_id"], [81, 5, 1, "", "get_trial_param"], [81, 5, 1, "", "get_trial_params"], [81, 5, 1, "", "get_trial_system_attrs"], [81, 5, 1, "", "get_trial_user_attrs"], [81, 5, 1, "", "record_heartbeat"], [81, 5, 1, "", "remove_session"], [81, 5, 1, "", "set_study_directions"], [81, 5, 1, "", "set_study_system_attr"], [81, 5, 1, "", "set_study_user_attr"], [81, 5, 1, "", "set_trial_intermediate_value"], [81, 5, 1, "", "set_trial_param"], [81, 5, 1, "", "set_trial_state_values"], [81, 5, 1, "", "set_trial_system_attr"], [81, 5, 1, "", "set_trial_user_attr"], [81, 5, 1, "", "upgrade"]], "optuna.storages.RedisStorage": [[82, 5, 1, "", "check_trial_is_updatable"], [82, 5, 1, "", "create_new_study"], [82, 5, 1, "", "create_new_trial"], [82, 5, 1, "", "delete_study"], [82, 5, 1, "", "get_all_studies"], [82, 5, 1, "", "get_all_trials"], [82, 5, 1, "", "get_best_trial"], [82, 5, 1, "", "get_failed_trial_callback"], [82, 5, 1, "", "get_heartbeat_interval"], [82, 5, 1, "", "get_n_trials"], [82, 5, 1, "", "get_study_directions"], [82, 5, 1, "", "get_study_id_from_name"], [82, 5, 1, "", "get_study_name_from_id"], [82, 5, 1, "", "get_study_system_attrs"], [82, 5, 1, "", "get_study_user_attrs"], [82, 5, 1, "", "get_trial"], [82, 5, 1, "", "get_trial_id_from_study_id_trial_number"], [82, 5, 1, "", "get_trial_number_from_id"], [82, 5, 1, "", "get_trial_param"], [82, 5, 1, "", "get_trial_params"], [82, 5, 1, "", "get_trial_system_attrs"], [82, 5, 1, "", "get_trial_user_attrs"], [82, 5, 1, "", "record_heartbeat"], [82, 5, 1, "", "remove_session"], [82, 5, 1, "", "set_study_directions"], [82, 5, 1, "", "set_study_system_attr"], [82, 5, 1, "", "set_study_user_attr"], [82, 5, 1, "", "set_trial_intermediate_value"], [82, 5, 1, "", "set_trial_param"], [82, 5, 1, "", "set_trial_state_values"], [82, 5, 1, "", "set_trial_system_attr"], [82, 5, 1, "", "set_trial_user_attr"]], "optuna.storages.RetryFailedTrialCallback": [[83, 5, 1, "", "retried_trial_number"], [83, 5, 1, "", "retry_history"]], "optuna.study": [[85, 3, 1, "", "MaxTrialsCallback"], [86, 3, 1, "", "Study"], [87, 3, 1, "", "StudyDirection"], [88, 3, 1, "", "StudySummary"], [89, 2, 1, "", "copy_study"], [90, 2, 1, "", "create_study"], [91, 2, 1, "", "delete_study"], [92, 2, 1, "", "get_all_study_summaries"], [93, 2, 1, "", "load_study"]], "optuna.study.Study": [[86, 5, 1, "", "add_trial"], [86, 5, 1, "", "add_trials"], [86, 5, 1, "", "ask"], [86, 6, 1, "", "best_params"], [86, 6, 1, "", "best_trial"], [86, 6, 1, "", "best_trials"], [86, 6, 1, "", "best_value"], [86, 6, 1, "", "direction"], [86, 6, 1, "", "directions"], [86, 5, 1, "", "enqueue_trial"], [86, 5, 1, "", "get_trials"], [86, 5, 1, "", "optimize"], [86, 5, 1, "", "set_system_attr"], [86, 5, 1, "", "set_user_attr"], [86, 5, 1, "", "stop"], [86, 6, 1, "", "system_attrs"], [86, 5, 1, "", "tell"], [86, 6, 1, "", "trials"], [86, 5, 1, "", "trials_dataframe"], [86, 6, 1, "", "user_attrs"]], "optuna.study.StudyDirection": [[87, 4, 1, "", "MAXIMIZE"], [87, 4, 1, "", "MINIMIZE"], [87, 4, 1, "", "NOT_SET"]], "optuna.study.StudySummary": [[88, 4, 1, "", "best_trial"], [88, 4, 1, "", "datetime_start"], [88, 4, 1, "", "direction"], [88, 4, 1, "", "directions"], [88, 4, 1, "", "n_trials"], [88, 4, 1, "", "study_name"], [88, 4, 1, "", "system_attrs"], [88, 4, 1, "", "user_attrs"]], "optuna.trial": [[94, 3, 1, "", "FixedTrial"], [95, 3, 1, "", "FrozenTrial"], [96, 3, 1, "", "Trial"], [97, 3, 1, "", "TrialState"], [98, 2, 1, "", "create_trial"]], "optuna.trial.FixedTrial": [[94, 5, 1, "", "suggest_discrete_uniform"], [94, 5, 1, "", "suggest_loguniform"], [94, 5, 1, "", "suggest_uniform"]], "optuna.trial.FrozenTrial": [[95, 4, 1, "", "datetime_complete"], [95, 4, 1, "", "datetime_start"], [95, 4, 1, "", "distributions"], [95, 6, 1, "", "duration"], [95, 4, 1, "", "intermediate_values"], [95, 6, 1, "", "last_step"], [95, 4, 1, "", "number"], [95, 4, 1, "", "params"], [95, 5, 1, "", "report"], [95, 5, 1, "", "should_prune"], [95, 4, 1, "", "state"], [95, 5, 1, "", "suggest_discrete_uniform"], [95, 5, 1, "", "suggest_loguniform"], [95, 5, 1, "", "suggest_uniform"], [95, 4, 1, "", "system_attrs"], [95, 4, 1, "", "user_attrs"], [95, 4, 1, "", "value"], [95, 4, 1, "", "values"]], "optuna.trial.Trial": [[96, 6, 1, "", "datetime_start"], [96, 6, 1, "", "distributions"], [96, 6, 1, "", "number"], [96, 6, 1, "", "params"], [96, 5, 1, "", "report"], [96, 5, 1, "", "set_system_attr"], [96, 5, 1, "", "set_user_attr"], [96, 5, 1, "", "should_prune"], [96, 5, 1, "", "suggest_categorical"], [96, 5, 1, "", "suggest_discrete_uniform"], [96, 5, 1, "", "suggest_float"], [96, 5, 1, "", "suggest_int"], [96, 5, 1, "", "suggest_loguniform"], [96, 5, 1, "", "suggest_uniform"], [96, 6, 1, "", "system_attrs"], [96, 6, 1, "", "user_attrs"]], "optuna.trial.TrialState": [[97, 4, 1, "", "COMPLETE"], [97, 4, 1, "", "FAIL"], [97, 4, 1, "", "PRUNED"], [97, 4, 1, "", "RUNNING"], [97, 4, 1, "", "WAITING"], [97, 5, 1, "", "is_finished"]], "optuna.visualization": [[143, 2, 1, "", "is_available"], [162, 0, 0, "-", "matplotlib"], [153, 2, 1, "", "plot_contour"], [154, 2, 1, "", "plot_edf"], [155, 2, 1, "", "plot_intermediate_values"], [156, 2, 1, "", "plot_optimization_history"], [157, 2, 1, "", "plot_parallel_coordinate"], [158, 2, 1, "", "plot_param_importances"], [159, 2, 1, "", "plot_pareto_front"], [160, 2, 1, "", "plot_slice"]], "optuna.visualization.matplotlib": [[144, 2, 1, "", "is_available"], [145, 2, 1, "", "plot_contour"], [146, 2, 1, "", "plot_edf"], [147, 2, 1, "", "plot_intermediate_values"], [148, 2, 1, "", "plot_optimization_history"], [149, 2, 1, "", "plot_parallel_coordinate"], [150, 2, 1, "", "plot_param_importances"], [151, 2, 1, "", "plot_pareto_front"], [152, 2, 1, "", "plot_slice"]], "optuna-ask": [[4, 7, 1, "cmdoption-optuna-ask-direction", "--direction"], [4, 7, 1, "cmdoption-optuna-ask-directions", "--directions"], [4, 7, 1, "cmdoption-optuna-ask-flatten", "--flatten"], [4, 7, 1, "cmdoption-optuna-ask-f", "--format"], [4, 7, 1, "cmdoption-optuna-ask-sampler", "--sampler"], [4, 7, 1, "cmdoption-optuna-ask-sampler-kwargs", "--sampler-kwargs"], [4, 7, 1, "cmdoption-optuna-ask-search-space", "--search-space"], [4, 7, 1, "cmdoption-optuna-ask-study-name", "--study-name"], [4, 7, 1, "cmdoption-optuna-ask-f", "-f"]], "optuna-best-trial": [[4, 7, 1, "cmdoption-optuna-best-trial-flatten", "--flatten"], [4, 7, 1, "cmdoption-optuna-best-trial-f", "--format"], [4, 7, 1, "cmdoption-optuna-best-trial-study-name", "--study-name"], [4, 7, 1, "cmdoption-optuna-best-trial-f", "-f"]], "optuna-best-trials": [[4, 7, 1, "cmdoption-optuna-best-trials-flatten", "--flatten"], [4, 7, 1, "cmdoption-optuna-best-trials-f", "--format"], [4, 7, 1, "cmdoption-optuna-best-trials-study-name", "--study-name"], [4, 7, 1, "cmdoption-optuna-best-trials-f", "-f"]], "optuna-create-study": [[4, 7, 1, "cmdoption-optuna-create-study-direction", "--direction"], [4, 7, 1, "cmdoption-optuna-create-study-directions", "--directions"], [4, 7, 1, "cmdoption-optuna-create-study-skip-if-exists", "--skip-if-exists"], [4, 7, 1, "cmdoption-optuna-create-study-study-name", "--study-name"]], "optuna-delete-study": [[4, 7, 1, "cmdoption-optuna-delete-study-study-name", "--study-name"]], "optuna-studies": [[4, 7, 1, "cmdoption-optuna-studies-flatten", "--flatten"], [4, 7, 1, "cmdoption-optuna-studies-f", "--format"], [4, 7, 1, "cmdoption-optuna-studies-f", "-f"]], "optuna-study-optimize": [[4, 7, 1, "cmdoption-optuna-study-optimize-n-jobs", "--n-jobs"], [4, 7, 1, "cmdoption-optuna-study-optimize-n-trials", "--n-trials"], [4, 7, 1, "cmdoption-optuna-study-optimize-study", "--study"], [4, 7, 1, "cmdoption-optuna-study-optimize-study-name", "--study-name"], [4, 7, 1, "cmdoption-optuna-study-optimize-timeout", "--timeout"], [4, 7, 1, "cmdoption-optuna-study-optimize-arg-file", "file"], [4, 7, 1, "cmdoption-optuna-study-optimize-arg-method", "method"]], "optuna-study-set-user-attr": [[4, 7, 1, "cmdoption-optuna-study-set-user-attr-key", "--key"], [4, 7, 1, "cmdoption-optuna-study-set-user-attr-study", "--study"], [4, 7, 1, "cmdoption-optuna-study-set-user-attr-study-name", "--study-name"], [4, 7, 1, "cmdoption-optuna-study-set-user-attr-value", "--value"], [4, 7, 1, "cmdoption-optuna-study-set-user-attr-key", "-k"]], "optuna-tell": [[4, 7, 1, "cmdoption-optuna-tell-skip-if-finished", "--skip-if-finished"], [4, 7, 1, "cmdoption-optuna-tell-state", "--state"], [4, 7, 1, "cmdoption-optuna-tell-study-name", "--study-name"], [4, 7, 1, "cmdoption-optuna-tell-trial-number", "--trial-number"], [4, 7, 1, "cmdoption-optuna-tell-values", "--values"]], "optuna-trials": [[4, 7, 1, "cmdoption-optuna-trials-flatten", "--flatten"], [4, 7, 1, "cmdoption-optuna-trials-f", "--format"], [4, 7, 1, "cmdoption-optuna-trials-study-name", "--study-name"], [4, 7, 1, "cmdoption-optuna-trials-f", "-f"]]}, "objtypes": {"0": "py:module", "1": "py:exception", "2": "py:function", "3": "py:class", "4": "py:attribute", "5": "py:method", "6": "py:property", "7": "std:cmdoption"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "exception", "Python exception"], "2": ["py", "function", "Python function"], "3": ["py", "class", "Python class"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "method", "Python method"], "6": ["py", "property", "Python property"], "7": ["std", "cmdoption", "program option"]}, "titleterms": {"faq": 0, "can": 0, "i": 0, "us": [0, 165, 179], "optuna": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 171, 177, 178], "x": 0, "where": 0, "your": [0, 177], "favorit": 0, "ml": 0, "librari": 0, "how": 0, "defin": [0, 164, 174, 175, 178], "object": [0, 163, 171], "function": [0, 163, 167], "have": [0, 177], "own": 0, "argument": 0, "without": 0, "remot": 0, "rdb": [0, 170], "server": 0, "save": [0, 170], "resum": [0, 170], "studi": [0, 4, 85, 86, 87, 88, 89, 90, 91, 92, 93, 107, 108, 109, 115, 141, 163, 166, 170, 172, 176], "suppress": 0, "log": [0, 67, 68, 69, 70, 71, 72, 102], "messag": 0, "machin": 0, "learn": [0, 101], "model": [0, 179], "train": [0, 65], "obtain": 0, "reproduc": 0, "optim": [0, 1, 4, 101, 165, 167, 171, 176, 178], "result": 0, "ar": [0, 176], "except": [0, 6, 22, 23, 24, 25, 26], "from": 0, "trial": [0, 4, 94, 95, 96, 97, 98, 110, 111, 116, 142, 172, 176, 179], "handl": 0, "nan": 0, "return": 0, "what": 0, "happen": 0, "when": 0, "dynam": 0, "alter": 0, "search": [0, 164], "space": [0, 164], "two": 0, "gpu": 0, "evalu": [0, 177], "simultan": 0, "test": 0, "my": 0, "do": 0, "avoid": 0, "run": [0, 171, 178], "out": 0, "memori": 0, "oom": 0, "output": 0, "onli": 0, "best": [0, 4, 179], "valu": 0, "updat": 0, "suggest": 0, "variabl": 0, "which": [0, 165], "repres": 0, "proport": 0, "accord": 0, "dirichlet": 0, "distribut": [0, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "some": [0, 176], "constraint": 0, "parallel": [0, 166], "1": [0, 163], "multi": [0, 171], "thread": 0, "singl": 0, "node": [0, 166], "2": [0, 164], "process": [0, 166], "3": [0, 165], "multipl": [0, 166], "monitor": 0, "make": 0, "them": 0, "fail": 0, "automat": 0, "thei": 0, "kill": 0, "unexpectedli": 0, "A": 1, "hyperparamet": [1, 167, 177], "framework": 1, "kei": [1, 168, 182], "featur": [1, 168, 182], "basic": 1, "concept": 1, "commun": 1, "contribut": 1, "licens": 1, "refer": [1, 100], "content": 1, "indic": 1, "tabl": 1, "instal": 2, "privaci": 3, "polici": 3, "googl": 3, "analyt": 3, "cli": 4, "ask": [4, 178], "creat": [4, 166], "delet": 4, "storag": [4, 81, 82, 83, 84, 140], "upgrad": 4, "set": 4, "user": [4, 172, 174, 175], "attr": 4, "tell": [4, 178], "trialprun": [7, 26], "copy_studi": [8, 89], "create_studi": [9, 90, 108], "delete_studi": [10, 91], "categoricaldistribut": 11, "discreteuniformdistribut": 12, "floatdistribut": 13, "intdistribut": 14, "intloguniformdistribut": 15, "intuniformdistribut": 16, "loguniformdistribut": 17, "uniformdistribut": 18, "check_distribution_compat": 19, "distribution_to_json": 20, "json_to_distribut": 21, "cliusageerror": 22, "duplicatedstudyerror": 23, "optunaerror": 24, "storageinternalerror": 25, "get_all_study_summari": [27, 92], "import": [28, 29, 30, 99], "fanovaimportanceevalu": 28, "meandecreaseimpurityimportanceevalu": 29, "get_param_import": 30, "integr": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 101, 165], "allennlpexecutor": 31, "allennlppruningcallback": 32, "botorchsampl": 33, "catboostpruningcallback": 34, "catalystpruningcallback": 35, "chainermnstudi": 36, "chainerpruningextens": 37, "cmaessampl": [38, 121], "fastaipruningcallback": 39, "fastaiv1pruningcallback": 40, "fastaiv2pruningcallback": 41, "keraspruningcallback": 42, "lightgbmpruningcallback": 43, "mlflowcallback": 44, "mxnetpruningcallback": 45, "optunasearchcv": 46, "pycmasampl": 47, "pytorchignitepruninghandl": 48, "pytorchlightningpruningcallback": 49, "shapleyimportanceevalu": 50, "skoptsampl": 51, "skorchpruningcallback": 52, "tfkeraspruningcallback": 53, "tensorboardcallback": 54, "tensorflowpruninghook": 55, "torchdistributedtri": 56, "weightsandbiasescallback": 57, "xgboostpruningcallback": 58, "allennlp": [59, 101], "dump_best_config": 59, "botorch": [60, 61, 62, 101], "qehvi_candidates_func": 60, "qei_candidates_func": 61, "qparego_candidates_func": 62, "lightgbm": [63, 64, 65, 101], "lightgbmtun": 63, "lightgbmtunercv": 64, "load_studi": [66, 93, 109], "disable_default_handl": 67, "disable_propag": 68, "enable_default_handl": 69, "enable_propag": 70, "get_verbos": 71, "set_verbos": 72, "pruner": [73, 74, 75, 76, 77, 78, 79, 80, 119, 165, 175], "baseprun": 73, "hyperbandprun": 74, "medianprun": 75, "nopprun": 76, "patientprun": 77, "percentileprun": 78, "successivehalvingprun": 79, "thresholdprun": 80, "rdbstorag": 81, "redisstorag": 82, "retryfailedtrialcallback": 83, "fail_stale_tri": 84, "maxtrialscallback": 85, "studydirect": 87, "studysummari": 88, "fixedtri": 94, "frozentri": 95, "trialstat": 97, "create_tri": 98, "api": 100, "catalyst": 101, "catboost": 101, "chainer": 101, "fast": 101, "ai": 101, "kera": 101, "mlflow": 101, "weight": 101, "bias": 101, "mxnet": 101, "pycma": 101, "pytorch": 101, "scikit": 101, "shap": 101, "skorch": 101, "tensorflow": 101, "xgboost": 101, "multi_object": [103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117], "sampler": [103, 104, 105, 106, 114, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 165, 174], "basemultiobjectivesampl": 103, "motpemultiobjectivesampl": 104, "nsgaiimultiobjectivesampl": 105, "randommultiobjectivesampl": 106, "multiobjectivestudi": 107, "frozenmultiobjectivetri": 110, "multiobjectivetri": 111, "visual": [112, 117, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 167], "plot_pareto_front": [112, 151, 159], "basesampl": 120, "gridsampl": 122, "intersectionsearchspac": 123, "motpesampl": 124, "nsgaiisampl": 125, "partialfixedsampl": 126, "qmcsampler": 127, "randomsampl": 128, "tpesampl": 129, "intersection_search_spac": 130, "nsgaii": [131, 132, 133, 134, 135, 136, 137, 139], "blxalphacrossov": 131, "basecrossov": 132, "sbxcrossov": 133, "spxcrossov": 134, "undxcrossov": 135, "uniformcrossov": 136, "vsbxcrossov": 137, "is_avail": [143, 144], "matplotlib": [144, 145, 146, 147, 148, 149, 150, 151, 152, 162], "plot_contour": [145, 153], "plot_edf": [146, 154], "plot_intermediate_valu": [147, 155], "plot_optimization_histori": [148, 156], "plot_parallel_coordin": [149, 157], "plot_param_import": [150, 158], "plot_slic": [152, 160], "lightweight": 163, "versatil": 163, "platform": 163, "agnost": 163, "architectur": 163, "quadrat": 163, "exampl": [163, 174, 175], "python": 164, "paramet": 164, "note": 164, "number": 164, "effici": 165, "algorithm": 165, "sampl": 165, "switch": 165, "prune": [165, 175, 176], "activ": 165, "should": 165, "modul": 165, "4": 166, "easi": 166, "share": 166, "among": 166, "5": 167, "quick": 167, "analysi": 167, "plot": 167, "comput": [169, 181], "time": [169, 181], "backend": 170, "new": 170, "experiment": 170, "histori": 170, "attribut": 172, "ad": 172, "command": 173, "line": 173, "interfac": [173, 175, 178], "overview": [174, 175], "an": [174, 175, 178], "implement": [174, 175], "simulatedannealingsampl": 174, "lastplaceprun": 175, "callback": 176, "stop": 176, "after": 176, "row": 176, "specifi": 177, "manual": 177, "first": 177, "scenario": 177, "second": 177, "util": 177, "alreadi": 177, "appli": 178, "exist": 178, "problem": 178, "minimum": 178, "modif": 178, "batch": 178, "re": 179, "investig": 179, "further": 179, "The": 179, "differ": 179, "between": 179, "best_trial": 179, "ordin": 179, "recip": [180, 182], "tutori": 182}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"FAQ": [[0, "faq"]], "Can I use Optuna with X? (where X is your favorite ML library)": [[0, "can-i-use-optuna-with-x-where-x-is-your-favorite-ml-library"]], "How to define objective functions that have own arguments?": [[0, "how-to-define-objective-functions-that-have-own-arguments"]], "Can I use Optuna without remote RDB servers?": [[0, "can-i-use-optuna-without-remote-rdb-servers"]], "How can I save and resume studies?": [[0, "how-can-i-save-and-resume-studies"]], "How to suppress log messages of Optuna?": [[0, "how-to-suppress-log-messages-of-optuna"]], "How to save machine learning models trained in objective functions?": [[0, "how-to-save-machine-learning-models-trained-in-objective-functions"]], "How can I obtain reproducible optimization results?": [[0, "how-can-i-obtain-reproducible-optimization-results"]], "How are exceptions from trials handled?": [[0, "how-are-exceptions-from-trials-handled"]], "How are NaNs returned by trials handled?": [[0, "how-are-nans-returned-by-trials-handled"]], "What happens when I dynamically alter a search space?": [[0, "what-happens-when-i-dynamically-alter-a-search-space"]], "How can I use two GPUs for evaluating two trials simultaneously?": [[0, "how-can-i-use-two-gpus-for-evaluating-two-trials-simultaneously"]], "How can I test my objective functions?": [[0, "how-can-i-test-my-objective-functions"]], "How do I avoid running out of memory (OOM) when optimizing studies?": [[0, "how-do-i-avoid-running-out-of-memory-oom-when-optimizing-studies"]], "How can I output a log only when the best value is updated?": [[0, "how-can-i-output-a-log-only-when-the-best-value-is-updated"]], "How do I suggest variables which represent the proportion, that is, are in accordance with Dirichlet distribution?": [[0, "how-do-i-suggest-variables-which-represent-the-proportion-that-is-are-in-accordance-with-dirichlet-distribution"]], "How can I optimize a model with some constraints?": [[0, "how-can-i-optimize-a-model-with-some-constraints"]], "How can I parallelize optimization?": [[0, "how-can-i-parallelize-optimization"]], "1. Multi-threading parallelization with a single node": [[0, "multi-threading-parallelization-with-a-single-node"]], "2. Multi-processing parallelization with single node": [[0, "multi-processing-parallelization-with-single-node"]], "3. Multi-processing parallelization with multiple nodes": [[0, "multi-processing-parallelization-with-multiple-nodes"]], "Can I monitor trials and make them failed automatically when they are killed unexpectedly?": [[0, "can-i-monitor-trials-and-make-them-failed-automatically-when-they-are-killed-unexpectedly"]], "Optuna: A hyperparameter optimization framework": [[1, "optuna-a-hyperparameter-optimization-framework"]], "Key Features": [[1, "key-features"], [168, "key-features"], [182, "key-features"]], "Basic Concepts": [[1, "basic-concepts"]], "Communication": [[1, "communication"]], "Contribution": [[1, "contribution"]], "License": [[1, "license"]], "Reference": [[1, "reference"]], "Contents:": [[1, null]], "Indices and tables": [[1, "indices-and-tables"]], "Installation": [[2, "installation"]], "Privacy Policy": [[3, "privacy-policy"]], "Google Analytics": [[3, "google-analytics"]], "optuna.cli": [[4, "optuna-cli"]], "ask": [[4, "ask"]], "best-trial": [[4, "best-trial"]], "best-trials": [[4, "best-trials"]], "create-study": [[4, "create-study"]], "delete-study": [[4, "delete-study"]], "storage upgrade": [[4, "storage-upgrade"]], "studies": [[4, "studies"]], "study optimize": [[4, "study-optimize"]], "study set-user-attr": [[4, "study-set-user-attr"]], "tell": [[4, "tell"]], "trials": [[4, "trials"]], "optuna.distributions": [[5, "optuna-distributions"]], "optuna.exceptions": [[6, "optuna-exceptions"]], "optuna.TrialPruned": [[7, "optuna-trialpruned"]], "optuna.copy_study": [[8, "optuna-copy-study"]], "optuna.create_study": [[9, "optuna-create-study"]], "optuna.delete_study": [[10, "optuna-delete-study"]], "optuna.distributions.CategoricalDistribution": [[11, "optuna-distributions-categoricaldistribution"]], "optuna.distributions.DiscreteUniformDistribution": [[12, "optuna-distributions-discreteuniformdistribution"]], "optuna.distributions.FloatDistribution": [[13, "optuna-distributions-floatdistribution"]], "optuna.distributions.IntDistribution": [[14, "optuna-distributions-intdistribution"]], "optuna.distributions.IntLogUniformDistribution": [[15, "optuna-distributions-intloguniformdistribution"]], "optuna.distributions.IntUniformDistribution": [[16, "optuna-distributions-intuniformdistribution"]], "optuna.distributions.LogUniformDistribution": [[17, "optuna-distributions-loguniformdistribution"]], "optuna.distributions.UniformDistribution": [[18, "optuna-distributions-uniformdistribution"]], "optuna.distributions.check_distribution_compatibility": [[19, "optuna-distributions-check-distribution-compatibility"]], "optuna.distributions.distribution_to_json": [[20, "optuna-distributions-distribution-to-json"]], "optuna.distributions.json_to_distribution": [[21, "optuna-distributions-json-to-distribution"]], "optuna.exceptions.CLIUsageError": [[22, "optuna-exceptions-cliusageerror"]], "optuna.exceptions.DuplicatedStudyError": [[23, "optuna-exceptions-duplicatedstudyerror"]], "optuna.exceptions.OptunaError": [[24, "optuna-exceptions-optunaerror"]], "optuna.exceptions.StorageInternalError": [[25, "optuna-exceptions-storageinternalerror"]], "optuna.exceptions.TrialPruned": [[26, "optuna-exceptions-trialpruned"]], "optuna.get_all_study_summaries": [[27, "optuna-get-all-study-summaries"]], "optuna.importance.FanovaImportanceEvaluator": [[28, "optuna-importance-fanovaimportanceevaluator"]], "optuna.importance.MeanDecreaseImpurityImportanceEvaluator": [[29, "optuna-importance-meandecreaseimpurityimportanceevaluator"]], "optuna.importance.get_param_importances": [[30, "optuna-importance-get-param-importances"]], "optuna.integration.AllenNLPExecutor": [[31, "optuna-integration-allennlpexecutor"]], "optuna.integration.AllenNLPPruningCallback": [[32, "optuna-integration-allennlppruningcallback"]], "optuna.integration.BoTorchSampler": [[33, "optuna-integration-botorchsampler"]], "optuna.integration.CatBoostPruningCallback": [[34, "optuna-integration-catboostpruningcallback"]], "optuna.integration.CatalystPruningCallback": [[35, "optuna-integration-catalystpruningcallback"]], "optuna.integration.ChainerMNStudy": [[36, "optuna-integration-chainermnstudy"]], "optuna.integration.ChainerPruningExtension": [[37, "optuna-integration-chainerpruningextension"]], "optuna.integration.CmaEsSampler": [[38, "optuna-integration-cmaessampler"]], "optuna.integration.FastAIPruningCallback": [[39, "optuna-integration-fastaipruningcallback"]], "optuna.integration.FastAIV1PruningCallback": [[40, "optuna-integration-fastaiv1pruningcallback"]], "optuna.integration.FastAIV2PruningCallback": [[41, "optuna-integration-fastaiv2pruningcallback"]], "optuna.integration.KerasPruningCallback": [[42, "optuna-integration-keraspruningcallback"]], "optuna.integration.LightGBMPruningCallback": [[43, "optuna-integration-lightgbmpruningcallback"]], "optuna.integration.MLflowCallback": [[44, "optuna-integration-mlflowcallback"]], "optuna.integration.MXNetPruningCallback": [[45, "optuna-integration-mxnetpruningcallback"]], "optuna.integration.OptunaSearchCV": [[46, "optuna-integration-optunasearchcv"]], "optuna.integration.PyCmaSampler": [[47, "optuna-integration-pycmasampler"]], "optuna.integration.PyTorchIgnitePruningHandler": [[48, "optuna-integration-pytorchignitepruninghandler"]], "optuna.integration.PyTorchLightningPruningCallback": [[49, "optuna-integration-pytorchlightningpruningcallback"]], "optuna.integration.ShapleyImportanceEvaluator": [[50, "optuna-integration-shapleyimportanceevaluator"]], "optuna.integration.SkoptSampler": [[51, "optuna-integration-skoptsampler"]], "optuna.integration.SkorchPruningCallback": [[52, "optuna-integration-skorchpruningcallback"]], "optuna.integration.TFKerasPruningCallback": [[53, "optuna-integration-tfkeraspruningcallback"]], "optuna.integration.TensorBoardCallback": [[54, "optuna-integration-tensorboardcallback"]], "optuna.integration.TensorFlowPruningHook": [[55, "optuna-integration-tensorflowpruninghook"]], "optuna.integration.TorchDistributedTrial": [[56, "optuna-integration-torchdistributedtrial"]], "optuna.integration.WeightsAndBiasesCallback": [[57, "optuna-integration-weightsandbiasescallback"]], "optuna.integration.XGBoostPruningCallback": [[58, "optuna-integration-xgboostpruningcallback"]], "optuna.integration.allennlp.dump_best_config": [[59, "optuna-integration-allennlp-dump-best-config"]], "optuna.integration.botorch.qehvi_candidates_func": [[60, "optuna-integration-botorch-qehvi-candidates-func"]], "optuna.integration.botorch.qei_candidates_func": [[61, "optuna-integration-botorch-qei-candidates-func"]], "optuna.integration.botorch.qparego_candidates_func": [[62, "optuna-integration-botorch-qparego-candidates-func"]], "optuna.integration.lightgbm.LightGBMTuner": [[63, "optuna-integration-lightgbm-lightgbmtuner"]], "optuna.integration.lightgbm.LightGBMTunerCV": [[64, "optuna-integration-lightgbm-lightgbmtunercv"]], "optuna.integration.lightgbm.train": [[65, "optuna-integration-lightgbm-train"]], "optuna.load_study": [[66, "optuna-load-study"]], "optuna.logging.disable_default_handler": [[67, "optuna-logging-disable-default-handler"]], "optuna.logging.disable_propagation": [[68, "optuna-logging-disable-propagation"]], "optuna.logging.enable_default_handler": [[69, "optuna-logging-enable-default-handler"]], "optuna.logging.enable_propagation": [[70, "optuna-logging-enable-propagation"]], "optuna.logging.get_verbosity": [[71, "optuna-logging-get-verbosity"]], "optuna.logging.set_verbosity": [[72, "optuna-logging-set-verbosity"]], "optuna.pruners.BasePruner": [[73, "optuna-pruners-basepruner"]], "optuna.pruners.HyperbandPruner": [[74, "optuna-pruners-hyperbandpruner"]], "optuna.pruners.MedianPruner": [[75, "optuna-pruners-medianpruner"]], "optuna.pruners.NopPruner": [[76, "optuna-pruners-noppruner"]], "optuna.pruners.PatientPruner": [[77, "optuna-pruners-patientpruner"]], "optuna.pruners.PercentilePruner": [[78, "optuna-pruners-percentilepruner"]], "optuna.pruners.SuccessiveHalvingPruner": [[79, "optuna-pruners-successivehalvingpruner"]], "optuna.pruners.ThresholdPruner": [[80, "optuna-pruners-thresholdpruner"]], "optuna.storages.RDBStorage": [[81, "optuna-storages-rdbstorage"]], "optuna.storages.RedisStorage": [[82, "optuna-storages-redisstorage"]], "optuna.storages.RetryFailedTrialCallback": [[83, "optuna-storages-retryfailedtrialcallback"]], "optuna.storages.fail_stale_trials": [[84, "optuna-storages-fail-stale-trials"]], "optuna.study.MaxTrialsCallback": [[85, "optuna-study-maxtrialscallback"]], "optuna.study.Study": [[86, "optuna-study-study"]], "optuna.study.StudyDirection": [[87, "optuna-study-studydirection"]], "optuna.study.StudySummary": [[88, "optuna-study-studysummary"]], "optuna.study.copy_study": [[89, "optuna-study-copy-study"]], "optuna.study.create_study": [[90, "optuna-study-create-study"]], "optuna.study.delete_study": [[91, "optuna-study-delete-study"]], "optuna.study.get_all_study_summaries": [[92, "optuna-study-get-all-study-summaries"]], "optuna.study.load_study": [[93, "optuna-study-load-study"]], "optuna.trial.FixedTrial": [[94, "optuna-trial-fixedtrial"]], "optuna.trial.FrozenTrial": [[95, "optuna-trial-frozentrial"]], "optuna.trial.Trial": [[96, "optuna-trial-trial"]], "optuna.trial.TrialState": [[97, "optuna-trial-trialstate"]], "optuna.trial.create_trial": [[98, "optuna-trial-create-trial"]], "optuna.importance": [[99, "optuna-importance"]], "API Reference": [[100, "api-reference"]], "optuna.integration": [[101, "optuna-integration"]], "AllenNLP": [[101, "allennlp"]], "BoTorch": [[101, "botorch"]], "Catalyst": [[101, "catalyst"]], "CatBoost": [[101, "catboost"]], "Chainer": [[101, "chainer"]], "fast.ai": [[101, "fast-ai"]], "Keras": [[101, "keras"]], "LightGBM": [[101, "lightgbm"]], "MLflow": [[101, "mlflow"]], "Weights & Biases": [[101, "weights-biases"]], "MXNet": [[101, "mxnet"]], "pycma": [[101, "pycma"]], "PyTorch": [[101, "pytorch"]], "scikit-learn": [[101, "scikit-learn"]], "scikit-optimize": [[101, "scikit-optimize"]], "SHAP": [[101, "shap"]], "skorch": [[101, "skorch"]], "TensorFlow": [[101, "tensorflow"]], "XGBoost": [[101, "xgboost"]], "optuna.logging": [[102, "optuna-logging"]], "optuna.multi_objective.samplers.BaseMultiObjectiveSampler": [[103, "optuna-multi-objective-samplers-basemultiobjectivesampler"]], "optuna.multi_objective.samplers.MOTPEMultiObjectiveSampler": [[104, "optuna-multi-objective-samplers-motpemultiobjectivesampler"]], "optuna.multi_objective.samplers.NSGAIIMultiObjectiveSampler": [[105, "optuna-multi-objective-samplers-nsgaiimultiobjectivesampler"]], "optuna.multi_objective.samplers.RandomMultiObjectiveSampler": [[106, "optuna-multi-objective-samplers-randommultiobjectivesampler"]], "optuna.multi_objective.study.MultiObjectiveStudy": [[107, "optuna-multi-objective-study-multiobjectivestudy"]], "optuna.multi_objective.study.create_study": [[108, "optuna-multi-objective-study-create-study"]], "optuna.multi_objective.study.load_study": [[109, "optuna-multi-objective-study-load-study"]], "optuna.multi_objective.trial.FrozenMultiObjectiveTrial": [[110, "optuna-multi-objective-trial-frozenmultiobjectivetrial"]], "optuna.multi_objective.trial.MultiObjectiveTrial": [[111, "optuna-multi-objective-trial-multiobjectivetrial"]], "optuna.multi_objective.visualization.plot_pareto_front": [[112, "optuna-multi-objective-visualization-plot-pareto-front"]], "optuna.multi_objective": [[113, "optuna-multi-objective"]], "optuna.multi_objective.samplers": [[114, "optuna-multi-objective-samplers"]], "optuna.multi_objective.study": [[115, "optuna-multi-objective-study"]], "optuna.multi_objective.trial": [[116, "optuna-multi-objective-trial"]], "optuna.multi_objective.visualization": [[117, "optuna-multi-objective-visualization"]], "optuna": [[118, "optuna"]], "optuna.pruners": [[119, "optuna-pruners"]], "optuna.samplers.BaseSampler": [[120, "optuna-samplers-basesampler"]], "optuna.samplers.CmaEsSampler": [[121, "optuna-samplers-cmaessampler"]], "optuna.samplers.GridSampler": [[122, "optuna-samplers-gridsampler"]], "optuna.samplers.IntersectionSearchSpace": [[123, "optuna-samplers-intersectionsearchspace"]], "optuna.samplers.MOTPESampler": [[124, "optuna-samplers-motpesampler"]], "optuna.samplers.NSGAIISampler": [[125, "optuna-samplers-nsgaiisampler"]], "optuna.samplers.PartialFixedSampler": [[126, "optuna-samplers-partialfixedsampler"]], "optuna.samplers.QMCSampler": [[127, "optuna-samplers-qmcsampler"]], "optuna.samplers.RandomSampler": [[128, "optuna-samplers-randomsampler"]], "optuna.samplers.TPESampler": [[129, "optuna-samplers-tpesampler"]], "optuna.samplers.intersection_search_space": [[130, "optuna-samplers-intersection-search-space"]], "optuna.samplers.nsgaii.BLXAlphaCrossover": [[131, "optuna-samplers-nsgaii-blxalphacrossover"]], "optuna.samplers.nsgaii.BaseCrossover": [[132, "optuna-samplers-nsgaii-basecrossover"]], "optuna.samplers.nsgaii.SBXCrossover": [[133, "optuna-samplers-nsgaii-sbxcrossover"]], "optuna.samplers.nsgaii.SPXCrossover": [[134, "optuna-samplers-nsgaii-spxcrossover"]], "optuna.samplers.nsgaii.UNDXCrossover": [[135, "optuna-samplers-nsgaii-undxcrossover"]], "optuna.samplers.nsgaii.UniformCrossover": [[136, "optuna-samplers-nsgaii-uniformcrossover"]], "optuna.samplers.nsgaii.VSBXCrossover": [[137, "optuna-samplers-nsgaii-vsbxcrossover"]], "optuna.samplers": [[138, "optuna-samplers"]], "optuna.samplers.nsgaii": [[139, "optuna-samplers-nsgaii"]], "optuna.storages": [[140, "optuna-storages"]], "optuna.study": [[141, "optuna-study"]], "optuna.trial": [[142, "optuna-trial"]], "optuna.visualization.is_available": [[143, "optuna-visualization-is-available"]], "optuna.visualization.matplotlib.is_available": [[144, "optuna-visualization-matplotlib-is-available"]], "optuna.visualization.matplotlib.plot_contour": [[145, "optuna-visualization-matplotlib-plot-contour"]], "optuna.visualization.matplotlib.plot_edf": [[146, "optuna-visualization-matplotlib-plot-edf"]], "optuna.visualization.matplotlib.plot_intermediate_values": [[147, "optuna-visualization-matplotlib-plot-intermediate-values"]], "optuna.visualization.matplotlib.plot_optimization_history": [[148, "optuna-visualization-matplotlib-plot-optimization-history"]], "optuna.visualization.matplotlib.plot_parallel_coordinate": [[149, "optuna-visualization-matplotlib-plot-parallel-coordinate"]], "optuna.visualization.matplotlib.plot_param_importances": [[150, "optuna-visualization-matplotlib-plot-param-importances"]], "optuna.visualization.matplotlib.plot_pareto_front": [[151, "optuna-visualization-matplotlib-plot-pareto-front"]], "optuna.visualization.matplotlib.plot_slice": [[152, "optuna-visualization-matplotlib-plot-slice"]], "optuna.visualization.plot_contour": [[153, "optuna-visualization-plot-contour"]], "optuna.visualization.plot_edf": [[154, "optuna-visualization-plot-edf"]], "optuna.visualization.plot_intermediate_values": [[155, "optuna-visualization-plot-intermediate-values"]], "optuna.visualization.plot_optimization_history": [[156, "optuna-visualization-plot-optimization-history"]], "optuna.visualization.plot_parallel_coordinate": [[157, "optuna-visualization-plot-parallel-coordinate"]], "optuna.visualization.plot_param_importances": [[158, "optuna-visualization-plot-param-importances"]], "optuna.visualization.plot_pareto_front": [[159, "optuna-visualization-plot-pareto-front"]], "optuna.visualization.plot_slice": [[160, "optuna-visualization-plot-slice"]], "optuna.visualization": [[161, "optuna-visualization"]], "optuna.visualization.matplotlib": [[162, "optuna-visualization-matplotlib"]], "1. Lightweight, versatile, and platform agnostic architecture": [[163, "lightweight-versatile-and-platform-agnostic-architecture"]], "Quadratic Function Example": [[163, "quadratic-function-example"]], "Study Object": [[163, "study-object"]], "2. Pythonic Search Space": [[164, "pythonic-search-space"]], "Defining Parameter Spaces": [[164, "defining-parameter-spaces"]], "Note on the Number of Parameters": [[164, "note-on-the-number-of-parameters"]], "3. Efficient Optimization Algorithms": [[165, "efficient-optimization-algorithms"]], "Sampling Algorithms": [[165, "sampling-algorithms"]], "Switching Samplers": [[165, "switching-samplers"]], "Pruning Algorithms": [[165, "pruning-algorithms"]], "Activating Pruners": [[165, "activating-pruners"]], "Which Sampler and Pruner Should be Used?": [[165, "which-sampler-and-pruner-should-be-used"]], "Integration Modules for Pruning": [[165, "integration-modules-for-pruning"]], "4. Easy Parallelization": [[166, "easy-parallelization"]], "Create a Study": [[166, "create-a-study"]], "Share the Study among Multiple Nodes and Processes": [[166, "share-the-study-among-multiple-nodes-and-processes"]], "5. Quick Visualization for Hyperparameter Optimization Analysis": [[167, "quick-visualization-for-hyperparameter-optimization-analysis"]], "Plot functions": [[167, "plot-functions"]], "Computation times": [[169, "computation-times"], [181, "computation-times"]], "Saving/Resuming Study with RDB Backend": [[170, "saving-resuming-study-with-rdb-backend"]], "New Study": [[170, "new-study"]], "Resume Study": [[170, "resume-study"]], "Experimental History": [[170, "experimental-history"]], "Multi-objective Optimization with Optuna": [[171, "multi-objective-optimization-with-optuna"]], "Run multi-objective optimization": [[171, "run-multi-objective-optimization"]], "User Attributes": [[172, "user-attributes"]], "Adding User Attributes to Studies": [[172, "adding-user-attributes-to-studies"]], "Adding User Attributes to Trials": [[172, "adding-user-attributes-to-trials"]], "Command-Line Interface": [[173, "command-line-interface"]], "User-Defined Sampler": [[174, "user-defined-sampler"]], "Overview of Sampler": [[174, "overview-of-sampler"]], "An Example: Implementing SimulatedAnnealingSampler": [[174, "an-example-implementing-simulatedannealingsampler"]], "User-Defined Pruner": [[175, "user-defined-pruner"]], "Overview of Pruning Interface": [[175, "overview-of-pruning-interface"]], "An Example: Implementing LastPlacePruner": [[175, "an-example-implementing-lastplacepruner"]], "Callback for Study.optimize": [[176, "callback-for-study-optimize"]], "Stop optimization after some trials are pruned in a row": [[176, "stop-optimization-after-some-trials-are-pruned-in-a-row"]], "Specify Hyperparameters Manually": [[177, "specify-hyperparameters-manually"]], "First Scenario: Have Optuna evaluate your hyperparameters": [[177, "first-scenario-have-optuna-evaluate-your-hyperparameters"]], "Second scenario: Have Optuna utilize already evaluated hyperparameters": [[177, "second-scenario-have-optuna-utilize-already-evaluated-hyperparameters"]], "Ask-and-Tell Interface": [[178, "ask-and-tell-interface"]], "Apply Optuna to an existing optimization problem with minimum modifications": [[178, "apply-optuna-to-an-existing-optimization-problem-with-minimum-modifications"]], "Define-and-Run": [[178, "define-and-run"]], "Batch Optimization": [[178, "batch-optimization"]], "Re-use the best trial": [[179, "re-use-the-best-trial"]], "Investigating the best model further": [[179, "investigating-the-best-model-further"]], "The difference between best_trial and ordinal trials": [[179, "the-difference-between-best-trial-and-ordinal-trials"]], "Recipes": [[180, "recipes"], [182, "recipes"]], "Tutorial": [[182, "tutorial"]]}, "indexentries": {"--debug": [[4, "cmdoption-optuna-debug"]], "--direction": [[4, "cmdoption-optuna-ask-direction"], [4, "cmdoption-optuna-create-study-direction"]], "--directions": [[4, "cmdoption-optuna-ask-directions"], [4, "cmdoption-optuna-create-study-directions"]], "--flatten": [[4, "cmdoption-optuna-ask-flatten"], [4, "cmdoption-optuna-best-trial-flatten"], [4, "cmdoption-optuna-best-trials-flatten"], [4, "cmdoption-optuna-studies-flatten"], [4, "cmdoption-optuna-trials-flatten"]], "--format": [[4, "cmdoption-optuna-ask-f"], [4, "cmdoption-optuna-best-trial-f"], [4, "cmdoption-optuna-best-trials-f"], [4, "cmdoption-optuna-studies-f"], [4, "cmdoption-optuna-trials-f"]], "--key": [[4, "cmdoption-optuna-study-set-user-attr-key"]], "--log-file": [[4, "cmdoption-optuna-log-file"]], "--n-jobs": [[4, "cmdoption-optuna-study-optimize-n-jobs"]], "--n-trials": [[4, "cmdoption-optuna-study-optimize-n-trials"]], "--quiet": [[4, "cmdoption-optuna-q"]], "--sampler": [[4, "cmdoption-optuna-ask-sampler"]], "--sampler-kwargs": [[4, "cmdoption-optuna-ask-sampler-kwargs"]], "--search-space": [[4, "cmdoption-optuna-ask-search-space"]], "--skip-if-exists": [[4, "cmdoption-optuna-create-study-skip-if-exists"]], "--skip-if-finished": [[4, "cmdoption-optuna-tell-skip-if-finished"]], "--state": [[4, "cmdoption-optuna-tell-state"]], "--storage": [[4, "cmdoption-optuna-storage"]], "--study": [[4, "cmdoption-optuna-study-optimize-study"], [4, "cmdoption-optuna-study-set-user-attr-study"]], "--study-name": [[4, "cmdoption-optuna-ask-study-name"], [4, "cmdoption-optuna-best-trial-study-name"], [4, "cmdoption-optuna-best-trials-study-name"], [4, "cmdoption-optuna-create-study-study-name"], [4, "cmdoption-optuna-delete-study-study-name"], [4, "cmdoption-optuna-study-optimize-study-name"], [4, "cmdoption-optuna-study-set-user-attr-study-name"], [4, "cmdoption-optuna-tell-study-name"], [4, "cmdoption-optuna-trials-study-name"]], "--timeout": [[4, "cmdoption-optuna-study-optimize-timeout"]], "--trial-number": [[4, "cmdoption-optuna-tell-trial-number"]], "--value": [[4, "cmdoption-optuna-study-set-user-attr-value"]], "--values": [[4, "cmdoption-optuna-tell-values"]], "--verbose": [[4, "cmdoption-optuna-v"]], "--version": [[4, "cmdoption-optuna-version"]], "-f": [[4, "cmdoption-optuna-ask-f"], [4, "cmdoption-optuna-best-trial-f"], [4, "cmdoption-optuna-best-trials-f"], [4, "cmdoption-optuna-studies-f"], [4, "cmdoption-optuna-trials-f"]], "-k": [[4, "cmdoption-optuna-study-set-user-attr-key"]], "-q": [[4, "cmdoption-optuna-q"]], "-v": [[4, "cmdoption-optuna-v"]], "file": [[4, "cmdoption-optuna-study-optimize-arg-file"]], "method": [[4, "cmdoption-optuna-study-optimize-arg-method"]], "module": [[4, "module-optuna.cli"], [5, "module-optuna.distributions"], [6, "module-optuna.exceptions"], [99, "module-optuna.importance"], [101, "module-optuna.integration"], [102, "module-optuna.logging"], [113, "module-optuna.multi_objective"], [114, "module-optuna.multi_objective.samplers"], [115, "module-optuna.multi_objective.study"], [116, "module-optuna.multi_objective.trial"], [117, "module-optuna.multi_objective.visualization"], [118, "module-optuna"], [119, "module-optuna.pruners"], [138, "module-optuna.samplers"], [139, "module-optuna.samplers.nsgaii"], [140, "module-optuna.storages"], [141, "module-optuna.study"], [142, "module-optuna.trial"], [161, "module-optuna.visualization"], [162, "module-optuna.visualization.matplotlib"]], "optuna command line option": [[4, "cmdoption-optuna-debug"], [4, "cmdoption-optuna-log-file"], [4, "cmdoption-optuna-q"], [4, "cmdoption-optuna-storage"], [4, "cmdoption-optuna-v"], [4, "cmdoption-optuna-version"]], "optuna-ask command line option": [[4, "cmdoption-optuna-ask-direction"], [4, "cmdoption-optuna-ask-directions"], [4, "cmdoption-optuna-ask-f"], [4, "cmdoption-optuna-ask-flatten"], [4, "cmdoption-optuna-ask-sampler"], [4, "cmdoption-optuna-ask-sampler-kwargs"], [4, "cmdoption-optuna-ask-search-space"], [4, "cmdoption-optuna-ask-study-name"]], "optuna-best-trial command line option": [[4, "cmdoption-optuna-best-trial-f"], [4, "cmdoption-optuna-best-trial-flatten"], [4, "cmdoption-optuna-best-trial-study-name"]], "optuna-best-trials command line option": [[4, "cmdoption-optuna-best-trials-f"], [4, "cmdoption-optuna-best-trials-flatten"], [4, "cmdoption-optuna-best-trials-study-name"]], "optuna-create-study command line option": [[4, "cmdoption-optuna-create-study-direction"], [4, "cmdoption-optuna-create-study-directions"], [4, "cmdoption-optuna-create-study-skip-if-exists"], [4, "cmdoption-optuna-create-study-study-name"]], "optuna-delete-study command line option": [[4, "cmdoption-optuna-delete-study-study-name"]], "optuna-studies command line option": [[4, "cmdoption-optuna-studies-f"], [4, "cmdoption-optuna-studies-flatten"]], "optuna-study-optimize command line option": [[4, "cmdoption-optuna-study-optimize-arg-file"], [4, "cmdoption-optuna-study-optimize-arg-method"], [4, "cmdoption-optuna-study-optimize-n-jobs"], [4, "cmdoption-optuna-study-optimize-n-trials"], [4, "cmdoption-optuna-study-optimize-study"], [4, "cmdoption-optuna-study-optimize-study-name"], [4, "cmdoption-optuna-study-optimize-timeout"]], "optuna-study-set-user-attr command line option": [[4, "cmdoption-optuna-study-set-user-attr-key"], [4, "cmdoption-optuna-study-set-user-attr-study"], [4, "cmdoption-optuna-study-set-user-attr-study-name"], [4, "cmdoption-optuna-study-set-user-attr-value"]], "optuna-tell command line option": [[4, "cmdoption-optuna-tell-skip-if-finished"], [4, "cmdoption-optuna-tell-state"], [4, "cmdoption-optuna-tell-study-name"], [4, "cmdoption-optuna-tell-trial-number"], [4, "cmdoption-optuna-tell-values"]], "optuna-trials command line option": [[4, "cmdoption-optuna-trials-f"], [4, "cmdoption-optuna-trials-flatten"], [4, "cmdoption-optuna-trials-study-name"]], "optuna.cli": [[4, "module-optuna.cli"]], "optuna.distributions": [[5, "module-optuna.distributions"]], "optuna.exceptions": [[6, "module-optuna.exceptions"]], "trialpruned": [[7, "optuna.TrialPruned"], [26, "optuna.exceptions.TrialPruned"]], "copy_study() (in module optuna)": [[8, "optuna.copy_study"]], "create_study() (in module optuna)": [[9, "optuna.create_study"]], "delete_study() (in module optuna)": [[10, "optuna.delete_study"]], "categoricaldistribution (class in optuna.distributions)": [[11, "optuna.distributions.CategoricalDistribution"]], "choices (optuna.distributions.categoricaldistribution attribute)": [[11, "optuna.distributions.CategoricalDistribution.choices"]], "single() (optuna.distributions.categoricaldistribution method)": [[11, "optuna.distributions.CategoricalDistribution.single"]], "to_external_repr() (optuna.distributions.categoricaldistribution method)": [[11, "optuna.distributions.CategoricalDistribution.to_external_repr"]], "to_internal_repr() (optuna.distributions.categoricaldistribution method)": [[11, "optuna.distributions.CategoricalDistribution.to_internal_repr"]], "discreteuniformdistribution (class in optuna.distributions)": [[12, "optuna.distributions.DiscreteUniformDistribution"]], "high (optuna.distributions.discreteuniformdistribution attribute)": [[12, "optuna.distributions.DiscreteUniformDistribution.high"]], "low (optuna.distributions.discreteuniformdistribution attribute)": [[12, "optuna.distributions.DiscreteUniformDistribution.low"]], "q (optuna.distributions.discreteuniformdistribution property)": [[12, "optuna.distributions.DiscreteUniformDistribution.q"]], "single() (optuna.distributions.discreteuniformdistribution method)": [[12, "optuna.distributions.DiscreteUniformDistribution.single"]], "to_external_repr() (optuna.distributions.discreteuniformdistribution method)": [[12, "optuna.distributions.DiscreteUniformDistribution.to_external_repr"]], "to_internal_repr() (optuna.distributions.discreteuniformdistribution method)": [[12, "optuna.distributions.DiscreteUniformDistribution.to_internal_repr"]], "floatdistribution (class in optuna.distributions)": [[13, "optuna.distributions.FloatDistribution"]], "high (optuna.distributions.floatdistribution attribute)": [[13, "optuna.distributions.FloatDistribution.high"]], "log (optuna.distributions.floatdistribution attribute)": [[13, "optuna.distributions.FloatDistribution.log"]], "low (optuna.distributions.floatdistribution attribute)": [[13, "optuna.distributions.FloatDistribution.low"]], "single() (optuna.distributions.floatdistribution method)": [[13, "optuna.distributions.FloatDistribution.single"]], "step (optuna.distributions.floatdistribution attribute)": [[13, "optuna.distributions.FloatDistribution.step"]], "to_external_repr() (optuna.distributions.floatdistribution method)": [[13, "optuna.distributions.FloatDistribution.to_external_repr"]], "to_internal_repr() (optuna.distributions.floatdistribution method)": [[13, "optuna.distributions.FloatDistribution.to_internal_repr"]], "intdistribution (class in optuna.distributions)": [[14, "optuna.distributions.IntDistribution"]], "high (optuna.distributions.intdistribution attribute)": [[14, "optuna.distributions.IntDistribution.high"]], "log (optuna.distributions.intdistribution attribute)": [[14, "optuna.distributions.IntDistribution.log"]], "low (optuna.distributions.intdistribution attribute)": [[14, "optuna.distributions.IntDistribution.low"]], "single() (optuna.distributions.intdistribution method)": [[14, "optuna.distributions.IntDistribution.single"]], "step (optuna.distributions.intdistribution attribute)": [[14, "optuna.distributions.IntDistribution.step"]], "to_external_repr() (optuna.distributions.intdistribution method)": [[14, "optuna.distributions.IntDistribution.to_external_repr"]], "to_internal_repr() (optuna.distributions.intdistribution method)": [[14, "optuna.distributions.IntDistribution.to_internal_repr"]], "intloguniformdistribution (class in optuna.distributions)": [[15, "optuna.distributions.IntLogUniformDistribution"]], "high (optuna.distributions.intloguniformdistribution attribute)": [[15, "optuna.distributions.IntLogUniformDistribution.high"]], "low (optuna.distributions.intloguniformdistribution attribute)": [[15, "optuna.distributions.IntLogUniformDistribution.low"]], "single() (optuna.distributions.intloguniformdistribution method)": [[15, "optuna.distributions.IntLogUniformDistribution.single"]], "step (optuna.distributions.intloguniformdistribution attribute)": [[15, "optuna.distributions.IntLogUniformDistribution.step"]], "to_external_repr() (optuna.distributions.intloguniformdistribution method)": [[15, "optuna.distributions.IntLogUniformDistribution.to_external_repr"]], "to_internal_repr() (optuna.distributions.intloguniformdistribution method)": [[15, "optuna.distributions.IntLogUniformDistribution.to_internal_repr"]], "intuniformdistribution (class in optuna.distributions)": [[16, "optuna.distributions.IntUniformDistribution"]], "high (optuna.distributions.intuniformdistribution attribute)": [[16, "optuna.distributions.IntUniformDistribution.high"]], "low (optuna.distributions.intuniformdistribution attribute)": [[16, "optuna.distributions.IntUniformDistribution.low"]], "single() (optuna.distributions.intuniformdistribution method)": [[16, "optuna.distributions.IntUniformDistribution.single"]], "step (optuna.distributions.intuniformdistribution attribute)": [[16, "optuna.distributions.IntUniformDistribution.step"]], "to_external_repr() (optuna.distributions.intuniformdistribution method)": [[16, "optuna.distributions.IntUniformDistribution.to_external_repr"]], "to_internal_repr() (optuna.distributions.intuniformdistribution method)": [[16, "optuna.distributions.IntUniformDistribution.to_internal_repr"]], "loguniformdistribution (class in optuna.distributions)": [[17, "optuna.distributions.LogUniformDistribution"]], "high (optuna.distributions.loguniformdistribution attribute)": [[17, "optuna.distributions.LogUniformDistribution.high"]], "low (optuna.distributions.loguniformdistribution attribute)": [[17, "optuna.distributions.LogUniformDistribution.low"]], "single() (optuna.distributions.loguniformdistribution method)": [[17, "optuna.distributions.LogUniformDistribution.single"]], "to_external_repr() (optuna.distributions.loguniformdistribution method)": [[17, "optuna.distributions.LogUniformDistribution.to_external_repr"]], "to_internal_repr() (optuna.distributions.loguniformdistribution method)": [[17, "optuna.distributions.LogUniformDistribution.to_internal_repr"]], "uniformdistribution (class in optuna.distributions)": [[18, "optuna.distributions.UniformDistribution"]], "high (optuna.distributions.uniformdistribution attribute)": [[18, "optuna.distributions.UniformDistribution.high"]], "low (optuna.distributions.uniformdistribution attribute)": [[18, "optuna.distributions.UniformDistribution.low"]], "single() (optuna.distributions.uniformdistribution method)": [[18, "optuna.distributions.UniformDistribution.single"]], "to_external_repr() (optuna.distributions.uniformdistribution method)": [[18, "optuna.distributions.UniformDistribution.to_external_repr"]], "to_internal_repr() (optuna.distributions.uniformdistribution method)": [[18, "optuna.distributions.UniformDistribution.to_internal_repr"]], "check_distribution_compatibility() (in module optuna.distributions)": [[19, "optuna.distributions.check_distribution_compatibility"]], "distribution_to_json() (in module optuna.distributions)": [[20, "optuna.distributions.distribution_to_json"]], "json_to_distribution() (in module optuna.distributions)": [[21, "optuna.distributions.json_to_distribution"]], "cliusageerror": [[22, "optuna.exceptions.CLIUsageError"]], "duplicatedstudyerror": [[23, "optuna.exceptions.DuplicatedStudyError"]], "optunaerror": [[24, "optuna.exceptions.OptunaError"]], "storageinternalerror": [[25, "optuna.exceptions.StorageInternalError"]], "get_all_study_summaries() (in module optuna)": [[27, "optuna.get_all_study_summaries"]], "fanovaimportanceevaluator (class in optuna.importance)": [[28, "optuna.importance.FanovaImportanceEvaluator"]], "evaluate() (optuna.importance.fanovaimportanceevaluator method)": [[28, "optuna.importance.FanovaImportanceEvaluator.evaluate"]], "meandecreaseimpurityimportanceevaluator (class in optuna.importance)": [[29, "optuna.importance.MeanDecreaseImpurityImportanceEvaluator"]], "evaluate() (optuna.importance.meandecreaseimpurityimportanceevaluator method)": [[29, "optuna.importance.MeanDecreaseImpurityImportanceEvaluator.evaluate"]], "get_param_importances() (in module optuna.importance)": [[30, "optuna.importance.get_param_importances"]], "allennlpexecutor (class in optuna.integration)": [[31, "optuna.integration.AllenNLPExecutor"]], "run() (optuna.integration.allennlpexecutor method)": [[31, "optuna.integration.AllenNLPExecutor.run"]], "allennlppruningcallback (class in optuna.integration)": [[32, "optuna.integration.AllenNLPPruningCallback"]], "on_epoch() (optuna.integration.allennlppruningcallback method)": [[32, "optuna.integration.AllenNLPPruningCallback.on_epoch"]], "register() (optuna.integration.allennlppruningcallback class method)": [[32, "optuna.integration.AllenNLPPruningCallback.register"]], "botorchsampler (class in optuna.integration)": [[33, "optuna.integration.BoTorchSampler"]], "after_trial() (optuna.integration.botorchsampler method)": [[33, "optuna.integration.BoTorchSampler.after_trial"]], "infer_relative_search_space() (optuna.integration.botorchsampler method)": [[33, "optuna.integration.BoTorchSampler.infer_relative_search_space"]], "reseed_rng() (optuna.integration.botorchsampler method)": [[33, "optuna.integration.BoTorchSampler.reseed_rng"]], "sample_independent() (optuna.integration.botorchsampler method)": [[33, "optuna.integration.BoTorchSampler.sample_independent"]], "sample_relative() (optuna.integration.botorchsampler method)": [[33, "optuna.integration.BoTorchSampler.sample_relative"]], "catboostpruningcallback (class in optuna.integration)": [[34, "optuna.integration.CatBoostPruningCallback"]], "after_iteration() (optuna.integration.catboostpruningcallback method)": [[34, "optuna.integration.CatBoostPruningCallback.after_iteration"]], "check_pruned() (optuna.integration.catboostpruningcallback method)": [[34, "optuna.integration.CatBoostPruningCallback.check_pruned"]], "catalystpruningcallback (class in optuna.integration)": [[35, "optuna.integration.CatalystPruningCallback"]], "chainermnstudy (class in optuna.integration)": [[36, "optuna.integration.ChainerMNStudy"]], "optimize() (optuna.integration.chainermnstudy method)": [[36, "optuna.integration.ChainerMNStudy.optimize"]], "chainerpruningextension (class in optuna.integration)": [[37, "optuna.integration.ChainerPruningExtension"]], "cmaessampler (class in optuna.integration)": [[38, "optuna.integration.CmaEsSampler"]], "after_trial() (optuna.integration.cmaessampler method)": [[38, "optuna.integration.CmaEsSampler.after_trial"]], "infer_relative_search_space() (optuna.integration.cmaessampler method)": [[38, "optuna.integration.CmaEsSampler.infer_relative_search_space"]], "reseed_rng() (optuna.integration.cmaessampler method)": [[38, "optuna.integration.CmaEsSampler.reseed_rng"]], "sample_independent() (optuna.integration.cmaessampler method)": [[38, "optuna.integration.CmaEsSampler.sample_independent"]], "sample_relative() (optuna.integration.cmaessampler method)": [[38, "optuna.integration.CmaEsSampler.sample_relative"]], "fastaipruningcallback (in module optuna.integration)": [[39, "optuna.integration.FastAIPruningCallback"]], "fastaiv1pruningcallback (class in optuna.integration)": [[40, "optuna.integration.FastAIV1PruningCallback"]], "fastaiv2pruningcallback (class in optuna.integration)": [[41, "optuna.integration.FastAIV2PruningCallback"]], "keraspruningcallback (class in optuna.integration)": [[42, "optuna.integration.KerasPruningCallback"]], "lightgbmpruningcallback (class in optuna.integration)": [[43, "optuna.integration.LightGBMPruningCallback"]], "mlflowcallback (class in optuna.integration)": [[44, "optuna.integration.MLflowCallback"]], "track_in_mlflow() (optuna.integration.mlflowcallback method)": [[44, "optuna.integration.MLflowCallback.track_in_mlflow"]], "mxnetpruningcallback (class in optuna.integration)": [[45, "optuna.integration.MXNetPruningCallback"]], "optunasearchcv (class in optuna.integration)": [[46, "optuna.integration.OptunaSearchCV"]], "best_estimator_ (optuna.integration.optunasearchcv attribute)": [[46, "optuna.integration.OptunaSearchCV.best_estimator_"]], "best_index_ (optuna.integration.optunasearchcv property)": [[46, "optuna.integration.OptunaSearchCV.best_index_"]], "best_params_ (optuna.integration.optunasearchcv property)": [[46, "optuna.integration.OptunaSearchCV.best_params_"]], "best_score_ (optuna.integration.optunasearchcv property)": [[46, "optuna.integration.OptunaSearchCV.best_score_"]], "best_trial_ (optuna.integration.optunasearchcv property)": [[46, "optuna.integration.OptunaSearchCV.best_trial_"]], "classes_ (optuna.integration.optunasearchcv property)": [[46, "optuna.integration.OptunaSearchCV.classes_"]], "decision_function (optuna.integration.optunasearchcv property)": [[46, "optuna.integration.OptunaSearchCV.decision_function"]], "fit() (optuna.integration.optunasearchcv method)": [[46, "optuna.integration.OptunaSearchCV.fit"]], "get_params() (optuna.integration.optunasearchcv method)": [[46, "optuna.integration.OptunaSearchCV.get_params"]], "inverse_transform (optuna.integration.optunasearchcv property)": [[46, "optuna.integration.OptunaSearchCV.inverse_transform"]], "n_splits_ (optuna.integration.optunasearchcv attribute)": [[46, "optuna.integration.OptunaSearchCV.n_splits_"]], "n_trials_ (optuna.integration.optunasearchcv property)": [[46, "optuna.integration.OptunaSearchCV.n_trials_"]], "predict (optuna.integration.optunasearchcv property)": [[46, "optuna.integration.OptunaSearchCV.predict"]], "predict_log_proba (optuna.integration.optunasearchcv property)": [[46, "optuna.integration.OptunaSearchCV.predict_log_proba"]], "predict_proba (optuna.integration.optunasearchcv property)": [[46, "optuna.integration.OptunaSearchCV.predict_proba"]], "refit_time_ (optuna.integration.optunasearchcv attribute)": [[46, "optuna.integration.OptunaSearchCV.refit_time_"]], "sample_indices_ (optuna.integration.optunasearchcv attribute)": [[46, "optuna.integration.OptunaSearchCV.sample_indices_"]], "score() (optuna.integration.optunasearchcv method)": [[46, "optuna.integration.OptunaSearchCV.score"]], "score_samples (optuna.integration.optunasearchcv property)": [[46, "optuna.integration.OptunaSearchCV.score_samples"]], "scorer_ (optuna.integration.optunasearchcv attribute)": [[46, "optuna.integration.OptunaSearchCV.scorer_"]], "set_params() (optuna.integration.optunasearchcv method)": [[46, "optuna.integration.OptunaSearchCV.set_params"]], "set_user_attr (optuna.integration.optunasearchcv property)": [[46, "optuna.integration.OptunaSearchCV.set_user_attr"]], "study_ (optuna.integration.optunasearchcv attribute)": [[46, "optuna.integration.OptunaSearchCV.study_"]], "transform (optuna.integration.optunasearchcv property)": [[46, "optuna.integration.OptunaSearchCV.transform"]], "trials_ (optuna.integration.optunasearchcv property)": [[46, "optuna.integration.OptunaSearchCV.trials_"]], "trials_dataframe (optuna.integration.optunasearchcv property)": [[46, "optuna.integration.OptunaSearchCV.trials_dataframe"]], "user_attrs_ (optuna.integration.optunasearchcv property)": [[46, "optuna.integration.OptunaSearchCV.user_attrs_"]], "pycmasampler (class in optuna.integration)": [[47, "optuna.integration.PyCmaSampler"]], "after_trial() (optuna.integration.pycmasampler method)": [[47, "optuna.integration.PyCmaSampler.after_trial"]], "infer_relative_search_space() (optuna.integration.pycmasampler method)": [[47, "optuna.integration.PyCmaSampler.infer_relative_search_space"]], "reseed_rng() (optuna.integration.pycmasampler method)": [[47, "optuna.integration.PyCmaSampler.reseed_rng"]], "sample_independent() (optuna.integration.pycmasampler method)": [[47, "optuna.integration.PyCmaSampler.sample_independent"]], "sample_relative() (optuna.integration.pycmasampler method)": [[47, "optuna.integration.PyCmaSampler.sample_relative"]], "pytorchignitepruninghandler (class in optuna.integration)": [[48, "optuna.integration.PyTorchIgnitePruningHandler"]], "pytorchlightningpruningcallback (class in optuna.integration)": [[49, "optuna.integration.PyTorchLightningPruningCallback"]], "shapleyimportanceevaluator (class in optuna.integration)": [[50, "optuna.integration.ShapleyImportanceEvaluator"]], "evaluate() (optuna.integration.shapleyimportanceevaluator method)": [[50, "optuna.integration.ShapleyImportanceEvaluator.evaluate"]], "skoptsampler (class in optuna.integration)": [[51, "optuna.integration.SkoptSampler"]], "after_trial() (optuna.integration.skoptsampler method)": [[51, "optuna.integration.SkoptSampler.after_trial"]], "infer_relative_search_space() (optuna.integration.skoptsampler method)": [[51, "optuna.integration.SkoptSampler.infer_relative_search_space"]], "reseed_rng() (optuna.integration.skoptsampler method)": [[51, "optuna.integration.SkoptSampler.reseed_rng"]], "sample_independent() (optuna.integration.skoptsampler method)": [[51, "optuna.integration.SkoptSampler.sample_independent"]], "sample_relative() (optuna.integration.skoptsampler method)": [[51, "optuna.integration.SkoptSampler.sample_relative"]], "skorchpruningcallback (class in optuna.integration)": [[52, "optuna.integration.SkorchPruningCallback"]], "tfkeraspruningcallback (class in optuna.integration)": [[53, "optuna.integration.TFKerasPruningCallback"]], "tensorboardcallback (class in optuna.integration)": [[54, "optuna.integration.TensorBoardCallback"]], "tensorflowpruninghook (class in optuna.integration)": [[55, "optuna.integration.TensorFlowPruningHook"]], "torchdistributedtrial (class in optuna.integration)": [[56, "optuna.integration.TorchDistributedTrial"]], "suggest_discrete_uniform() (optuna.integration.torchdistributedtrial method)": [[56, "optuna.integration.TorchDistributedTrial.suggest_discrete_uniform"]], "suggest_loguniform() (optuna.integration.torchdistributedtrial method)": [[56, "optuna.integration.TorchDistributedTrial.suggest_loguniform"]], "suggest_uniform() (optuna.integration.torchdistributedtrial method)": [[56, "optuna.integration.TorchDistributedTrial.suggest_uniform"]], "weightsandbiasescallback (class in optuna.integration)": [[57, "optuna.integration.WeightsAndBiasesCallback"]], "track_in_wandb() (optuna.integration.weightsandbiasescallback method)": [[57, "optuna.integration.WeightsAndBiasesCallback.track_in_wandb"]], "xgboostpruningcallback (class in optuna.integration)": [[58, "optuna.integration.XGBoostPruningCallback"]], "dump_best_config() (in module optuna.integration.allennlp)": [[59, "optuna.integration.allennlp.dump_best_config"]], "qehvi_candidates_func() (in module optuna.integration.botorch)": [[60, "optuna.integration.botorch.qehvi_candidates_func"]], "qei_candidates_func() (in module optuna.integration.botorch)": [[61, "optuna.integration.botorch.qei_candidates_func"]], "qparego_candidates_func() (in module optuna.integration.botorch)": [[62, "optuna.integration.botorch.qparego_candidates_func"]], "lightgbmtuner (class in optuna.integration.lightgbm)": [[63, "optuna.integration.lightgbm.LightGBMTuner"]], "best_params (optuna.integration.lightgbm.lightgbmtuner property)": [[63, "optuna.integration.lightgbm.LightGBMTuner.best_params"]], "best_score (optuna.integration.lightgbm.lightgbmtuner property)": [[63, "optuna.integration.lightgbm.LightGBMTuner.best_score"]], "get_best_booster() (optuna.integration.lightgbm.lightgbmtuner method)": [[63, "optuna.integration.lightgbm.LightGBMTuner.get_best_booster"]], "run() (optuna.integration.lightgbm.lightgbmtuner method)": [[63, "optuna.integration.lightgbm.LightGBMTuner.run"]], "sample_train_set() (optuna.integration.lightgbm.lightgbmtuner method)": [[63, "optuna.integration.lightgbm.LightGBMTuner.sample_train_set"]], "lightgbmtunercv (class in optuna.integration.lightgbm)": [[64, "optuna.integration.lightgbm.LightGBMTunerCV"]], "best_params (optuna.integration.lightgbm.lightgbmtunercv property)": [[64, "optuna.integration.lightgbm.LightGBMTunerCV.best_params"]], "best_score (optuna.integration.lightgbm.lightgbmtunercv property)": [[64, "optuna.integration.lightgbm.LightGBMTunerCV.best_score"]], "get_best_booster() (optuna.integration.lightgbm.lightgbmtunercv method)": [[64, "optuna.integration.lightgbm.LightGBMTunerCV.get_best_booster"]], "run() (optuna.integration.lightgbm.lightgbmtunercv method)": [[64, "optuna.integration.lightgbm.LightGBMTunerCV.run"]], "sample_train_set() (optuna.integration.lightgbm.lightgbmtunercv method)": [[64, "optuna.integration.lightgbm.LightGBMTunerCV.sample_train_set"]], "train() (in module optuna.integration.lightgbm)": [[65, "optuna.integration.lightgbm.train"]], "load_study() (in module optuna)": [[66, "optuna.load_study"]], "disable_default_handler() (in module optuna.logging)": [[67, "optuna.logging.disable_default_handler"]], "disable_propagation() (in module optuna.logging)": [[68, "optuna.logging.disable_propagation"]], "enable_default_handler() (in module optuna.logging)": [[69, "optuna.logging.enable_default_handler"]], "enable_propagation() (in module optuna.logging)": [[70, "optuna.logging.enable_propagation"]], "get_verbosity() (in module optuna.logging)": [[71, "optuna.logging.get_verbosity"]], "set_verbosity() (in module optuna.logging)": [[72, "optuna.logging.set_verbosity"]], "basepruner (class in optuna.pruners)": [[73, "optuna.pruners.BasePruner"]], "prune() (optuna.pruners.basepruner method)": [[73, "optuna.pruners.BasePruner.prune"]], "hyperbandpruner (class in optuna.pruners)": [[74, "optuna.pruners.HyperbandPruner"]], "prune() (optuna.pruners.hyperbandpruner method)": [[74, "optuna.pruners.HyperbandPruner.prune"]], "medianpruner (class in optuna.pruners)": [[75, "optuna.pruners.MedianPruner"]], "prune() (optuna.pruners.medianpruner method)": [[75, "optuna.pruners.MedianPruner.prune"]], "noppruner (class in optuna.pruners)": [[76, "optuna.pruners.NopPruner"]], "prune() (optuna.pruners.noppruner method)": [[76, "optuna.pruners.NopPruner.prune"]], "patientpruner (class in optuna.pruners)": [[77, "optuna.pruners.PatientPruner"]], "prune() (optuna.pruners.patientpruner method)": [[77, "optuna.pruners.PatientPruner.prune"]], "percentilepruner (class in optuna.pruners)": [[78, "optuna.pruners.PercentilePruner"]], "prune() (optuna.pruners.percentilepruner method)": [[78, "optuna.pruners.PercentilePruner.prune"]], "successivehalvingpruner (class in optuna.pruners)": [[79, "optuna.pruners.SuccessiveHalvingPruner"]], "prune() (optuna.pruners.successivehalvingpruner method)": [[79, "optuna.pruners.SuccessiveHalvingPruner.prune"]], "thresholdpruner (class in optuna.pruners)": [[80, "optuna.pruners.ThresholdPruner"]], "prune() (optuna.pruners.thresholdpruner method)": [[80, "optuna.pruners.ThresholdPruner.prune"]], "rdbstorage (class in optuna.storages)": [[81, "optuna.storages.RDBStorage"]], "check_trial_is_updatable() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.check_trial_is_updatable"]], "create_new_study() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.create_new_study"]], "create_new_trial() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.create_new_trial"]], "delete_study() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.delete_study"]], "get_all_studies() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.get_all_studies"]], "get_all_trials() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.get_all_trials"]], "get_all_versions() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.get_all_versions"]], "get_best_trial() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.get_best_trial"]], "get_current_version() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.get_current_version"]], "get_failed_trial_callback() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.get_failed_trial_callback"]], "get_head_version() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.get_head_version"]], "get_heartbeat_interval() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.get_heartbeat_interval"]], "get_n_trials() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.get_n_trials"]], "get_study_directions() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.get_study_directions"]], "get_study_id_from_name() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.get_study_id_from_name"]], "get_study_name_from_id() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.get_study_name_from_id"]], "get_study_system_attrs() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.get_study_system_attrs"]], "get_study_user_attrs() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.get_study_user_attrs"]], "get_trial() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.get_trial"]], "get_trial_id_from_study_id_trial_number() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.get_trial_id_from_study_id_trial_number"]], "get_trial_number_from_id() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.get_trial_number_from_id"]], "get_trial_param() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.get_trial_param"]], "get_trial_params() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.get_trial_params"]], "get_trial_system_attrs() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.get_trial_system_attrs"]], "get_trial_user_attrs() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.get_trial_user_attrs"]], "record_heartbeat() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.record_heartbeat"]], "remove_session() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.remove_session"]], "set_study_directions() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.set_study_directions"]], "set_study_system_attr() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.set_study_system_attr"]], "set_study_user_attr() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.set_study_user_attr"]], "set_trial_intermediate_value() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.set_trial_intermediate_value"]], "set_trial_param() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.set_trial_param"]], "set_trial_state_values() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.set_trial_state_values"]], "set_trial_system_attr() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.set_trial_system_attr"]], "set_trial_user_attr() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.set_trial_user_attr"]], "upgrade() (optuna.storages.rdbstorage method)": [[81, "optuna.storages.RDBStorage.upgrade"]], "redisstorage (class in optuna.storages)": [[82, "optuna.storages.RedisStorage"]], "check_trial_is_updatable() (optuna.storages.redisstorage method)": [[82, "optuna.storages.RedisStorage.check_trial_is_updatable"]], "create_new_study() (optuna.storages.redisstorage method)": [[82, "optuna.storages.RedisStorage.create_new_study"]], "create_new_trial() (optuna.storages.redisstorage method)": [[82, "optuna.storages.RedisStorage.create_new_trial"]], "delete_study() (optuna.storages.redisstorage method)": [[82, "optuna.storages.RedisStorage.delete_study"]], "get_all_studies() (optuna.storages.redisstorage method)": [[82, "optuna.storages.RedisStorage.get_all_studies"]], "get_all_trials() (optuna.storages.redisstorage method)": [[82, "optuna.storages.RedisStorage.get_all_trials"]], "get_best_trial() (optuna.storages.redisstorage method)": [[82, "optuna.storages.RedisStorage.get_best_trial"]], "get_failed_trial_callback() (optuna.storages.redisstorage method)": [[82, "optuna.storages.RedisStorage.get_failed_trial_callback"]], "get_heartbeat_interval() (optuna.storages.redisstorage method)": [[82, "optuna.storages.RedisStorage.get_heartbeat_interval"]], "get_n_trials() (optuna.storages.redisstorage method)": [[82, "optuna.storages.RedisStorage.get_n_trials"]], "get_study_directions() (optuna.storages.redisstorage method)": [[82, "optuna.storages.RedisStorage.get_study_directions"]], "get_study_id_from_name() (optuna.storages.redisstorage method)": [[82, "optuna.storages.RedisStorage.get_study_id_from_name"]], "get_study_name_from_id() (optuna.storages.redisstorage method)": [[82, "optuna.storages.RedisStorage.get_study_name_from_id"]], "get_study_system_attrs() (optuna.storages.redisstorage method)": [[82, "optuna.storages.RedisStorage.get_study_system_attrs"]], "get_study_user_attrs() (optuna.storages.redisstorage method)": [[82, "optuna.storages.RedisStorage.get_study_user_attrs"]], "get_trial() (optuna.storages.redisstorage method)": [[82, "optuna.storages.RedisStorage.get_trial"]], "get_trial_id_from_study_id_trial_number() (optuna.storages.redisstorage method)": [[82, "optuna.storages.RedisStorage.get_trial_id_from_study_id_trial_number"]], "get_trial_number_from_id() (optuna.storages.redisstorage method)": [[82, "optuna.storages.RedisStorage.get_trial_number_from_id"]], "get_trial_param() (optuna.storages.redisstorage method)": [[82, "optuna.storages.RedisStorage.get_trial_param"]], "get_trial_params() (optuna.storages.redisstorage method)": [[82, "optuna.storages.RedisStorage.get_trial_params"]], "get_trial_system_attrs() (optuna.storages.redisstorage method)": [[82, "optuna.storages.RedisStorage.get_trial_system_attrs"]], "get_trial_user_attrs() (optuna.storages.redisstorage method)": [[82, "optuna.storages.RedisStorage.get_trial_user_attrs"]], "record_heartbeat() (optuna.storages.redisstorage method)": [[82, "optuna.storages.RedisStorage.record_heartbeat"]], "remove_session() (optuna.storages.redisstorage method)": [[82, "optuna.storages.RedisStorage.remove_session"]], "set_study_directions() (optuna.storages.redisstorage method)": [[82, "optuna.storages.RedisStorage.set_study_directions"]], "set_study_system_attr() (optuna.storages.redisstorage method)": [[82, "optuna.storages.RedisStorage.set_study_system_attr"]], "set_study_user_attr() (optuna.storages.redisstorage method)": [[82, "optuna.storages.RedisStorage.set_study_user_attr"]], "set_trial_intermediate_value() (optuna.storages.redisstorage method)": [[82, "optuna.storages.RedisStorage.set_trial_intermediate_value"]], "set_trial_param() (optuna.storages.redisstorage method)": [[82, "optuna.storages.RedisStorage.set_trial_param"]], "set_trial_state_values() (optuna.storages.redisstorage method)": [[82, "optuna.storages.RedisStorage.set_trial_state_values"]], "set_trial_system_attr() (optuna.storages.redisstorage method)": [[82, "optuna.storages.RedisStorage.set_trial_system_attr"]], "set_trial_user_attr() (optuna.storages.redisstorage method)": [[82, "optuna.storages.RedisStorage.set_trial_user_attr"]], "retryfailedtrialcallback (class in optuna.storages)": [[83, "optuna.storages.RetryFailedTrialCallback"]], "retried_trial_number() (optuna.storages.retryfailedtrialcallback static method)": [[83, "optuna.storages.RetryFailedTrialCallback.retried_trial_number"]], "retry_history() (optuna.storages.retryfailedtrialcallback static method)": [[83, "optuna.storages.RetryFailedTrialCallback.retry_history"]], "fail_stale_trials() (in module optuna.storages)": [[84, "optuna.storages.fail_stale_trials"]], "maxtrialscallback (class in optuna.study)": [[85, "optuna.study.MaxTrialsCallback"]], "study (class in optuna.study)": [[86, "optuna.study.Study"]], "add_trial() (optuna.study.study method)": [[86, "optuna.study.Study.add_trial"]], "add_trials() (optuna.study.study method)": [[86, "optuna.study.Study.add_trials"]], "ask() (optuna.study.study method)": [[86, "optuna.study.Study.ask"]], "best_params (optuna.study.study property)": [[86, "optuna.study.Study.best_params"]], "best_trial (optuna.study.study property)": [[86, "optuna.study.Study.best_trial"]], "best_trials (optuna.study.study property)": [[86, "optuna.study.Study.best_trials"]], "best_value (optuna.study.study property)": [[86, "optuna.study.Study.best_value"]], "direction (optuna.study.study property)": [[86, "optuna.study.Study.direction"]], "directions (optuna.study.study property)": [[86, "optuna.study.Study.directions"]], "enqueue_trial() (optuna.study.study method)": [[86, "optuna.study.Study.enqueue_trial"]], "get_trials() (optuna.study.study method)": [[86, "optuna.study.Study.get_trials"]], "optimize() (optuna.study.study method)": [[86, "optuna.study.Study.optimize"]], "set_system_attr() (optuna.study.study method)": [[86, "optuna.study.Study.set_system_attr"]], "set_user_attr() (optuna.study.study method)": [[86, "optuna.study.Study.set_user_attr"]], "stop() (optuna.study.study method)": [[86, "optuna.study.Study.stop"]], "system_attrs (optuna.study.study property)": [[86, "optuna.study.Study.system_attrs"]], "tell() (optuna.study.study method)": [[86, "optuna.study.Study.tell"]], "trials (optuna.study.study property)": [[86, "optuna.study.Study.trials"]], "trials_dataframe() (optuna.study.study method)": [[86, "optuna.study.Study.trials_dataframe"]], "user_attrs (optuna.study.study property)": [[86, "optuna.study.Study.user_attrs"]], "maximize (optuna.study.studydirection attribute)": [[87, "optuna.study.StudyDirection.MAXIMIZE"]], "minimize (optuna.study.studydirection attribute)": [[87, "optuna.study.StudyDirection.MINIMIZE"]], "not_set (optuna.study.studydirection attribute)": [[87, "optuna.study.StudyDirection.NOT_SET"]], "studydirection (class in optuna.study)": [[87, "optuna.study.StudyDirection"]], "studysummary (class in optuna.study)": [[88, "optuna.study.StudySummary"]], "best_trial (optuna.study.studysummary attribute)": [[88, "optuna.study.StudySummary.best_trial"]], "datetime_start (optuna.study.studysummary attribute)": [[88, "optuna.study.StudySummary.datetime_start"]], "direction (optuna.study.studysummary attribute)": [[88, "optuna.study.StudySummary.direction"]], "directions (optuna.study.studysummary attribute)": [[88, "optuna.study.StudySummary.directions"]], "n_trials (optuna.study.studysummary attribute)": [[88, "optuna.study.StudySummary.n_trials"]], "study_name (optuna.study.studysummary attribute)": [[88, "optuna.study.StudySummary.study_name"]], "system_attrs (optuna.study.studysummary attribute)": [[88, "optuna.study.StudySummary.system_attrs"]], "user_attrs (optuna.study.studysummary attribute)": [[88, "optuna.study.StudySummary.user_attrs"]], "copy_study() (in module optuna.study)": [[89, "optuna.study.copy_study"]], "create_study() (in module optuna.study)": [[90, "optuna.study.create_study"]], "delete_study() (in module optuna.study)": [[91, "optuna.study.delete_study"]], "get_all_study_summaries() (in module optuna.study)": [[92, "optuna.study.get_all_study_summaries"]], "load_study() (in module optuna.study)": [[93, "optuna.study.load_study"]], "fixedtrial (class in optuna.trial)": [[94, "optuna.trial.FixedTrial"]], "suggest_discrete_uniform() (optuna.trial.fixedtrial method)": [[94, "optuna.trial.FixedTrial.suggest_discrete_uniform"]], "suggest_loguniform() (optuna.trial.fixedtrial method)": [[94, "optuna.trial.FixedTrial.suggest_loguniform"]], "suggest_uniform() (optuna.trial.fixedtrial method)": [[94, "optuna.trial.FixedTrial.suggest_uniform"]], "frozentrial (class in optuna.trial)": [[95, "optuna.trial.FrozenTrial"]], "datetime_complete (optuna.trial.frozentrial attribute)": [[95, "optuna.trial.FrozenTrial.datetime_complete"]], "datetime_start (optuna.trial.frozentrial attribute)": [[95, "optuna.trial.FrozenTrial.datetime_start"]], "distributions (optuna.trial.frozentrial attribute)": [[95, "optuna.trial.FrozenTrial.distributions"]], "duration (optuna.trial.frozentrial property)": [[95, "optuna.trial.FrozenTrial.duration"]], "intermediate_values (optuna.trial.frozentrial attribute)": [[95, "optuna.trial.FrozenTrial.intermediate_values"]], "last_step (optuna.trial.frozentrial property)": [[95, "optuna.trial.FrozenTrial.last_step"]], "number (optuna.trial.frozentrial attribute)": [[95, "optuna.trial.FrozenTrial.number"]], "params (optuna.trial.frozentrial attribute)": [[95, "optuna.trial.FrozenTrial.params"]], "report() (optuna.trial.frozentrial method)": [[95, "optuna.trial.FrozenTrial.report"]], "should_prune() (optuna.trial.frozentrial method)": [[95, "optuna.trial.FrozenTrial.should_prune"]], "state (optuna.trial.frozentrial attribute)": [[95, "optuna.trial.FrozenTrial.state"]], "suggest_discrete_uniform() (optuna.trial.frozentrial method)": [[95, "optuna.trial.FrozenTrial.suggest_discrete_uniform"]], "suggest_loguniform() (optuna.trial.frozentrial method)": [[95, "optuna.trial.FrozenTrial.suggest_loguniform"]], "suggest_uniform() (optuna.trial.frozentrial method)": [[95, "optuna.trial.FrozenTrial.suggest_uniform"]], "system_attrs (optuna.trial.frozentrial attribute)": [[95, "optuna.trial.FrozenTrial.system_attrs"]], "user_attrs (optuna.trial.frozentrial attribute)": [[95, "optuna.trial.FrozenTrial.user_attrs"]], "value (optuna.trial.frozentrial attribute)": [[95, "optuna.trial.FrozenTrial.value"]], "values (optuna.trial.frozentrial attribute)": [[95, "optuna.trial.FrozenTrial.values"]], "trial (class in optuna.trial)": [[96, "optuna.trial.Trial"]], "datetime_start (optuna.trial.trial property)": [[96, "optuna.trial.Trial.datetime_start"]], "distributions (optuna.trial.trial property)": [[96, "optuna.trial.Trial.distributions"]], "number (optuna.trial.trial property)": [[96, "optuna.trial.Trial.number"]], "params (optuna.trial.trial property)": [[96, "optuna.trial.Trial.params"]], "report() (optuna.trial.trial method)": [[96, "optuna.trial.Trial.report"]], "set_system_attr() (optuna.trial.trial method)": [[96, "optuna.trial.Trial.set_system_attr"]], "set_user_attr() (optuna.trial.trial method)": [[96, "optuna.trial.Trial.set_user_attr"]], "should_prune() (optuna.trial.trial method)": [[96, "optuna.trial.Trial.should_prune"]], "suggest_categorical() (optuna.trial.trial method)": [[96, "optuna.trial.Trial.suggest_categorical"]], "suggest_discrete_uniform() (optuna.trial.trial method)": [[96, "optuna.trial.Trial.suggest_discrete_uniform"]], "suggest_float() (optuna.trial.trial method)": [[96, "optuna.trial.Trial.suggest_float"]], "suggest_int() (optuna.trial.trial method)": [[96, "optuna.trial.Trial.suggest_int"]], "suggest_loguniform() (optuna.trial.trial method)": [[96, "optuna.trial.Trial.suggest_loguniform"]], "suggest_uniform() (optuna.trial.trial method)": [[96, "optuna.trial.Trial.suggest_uniform"]], "system_attrs (optuna.trial.trial property)": [[96, "optuna.trial.Trial.system_attrs"]], "user_attrs (optuna.trial.trial property)": [[96, "optuna.trial.Trial.user_attrs"]], "complete (optuna.trial.trialstate attribute)": [[97, "optuna.trial.TrialState.COMPLETE"]], "fail (optuna.trial.trialstate attribute)": [[97, "optuna.trial.TrialState.FAIL"]], "pruned (optuna.trial.trialstate attribute)": [[97, "optuna.trial.TrialState.PRUNED"]], "running (optuna.trial.trialstate attribute)": [[97, "optuna.trial.TrialState.RUNNING"]], "trialstate (class in optuna.trial)": [[97, "optuna.trial.TrialState"]], "waiting (optuna.trial.trialstate attribute)": [[97, "optuna.trial.TrialState.WAITING"]], "is_finished() (optuna.trial.trialstate method)": [[97, "optuna.trial.TrialState.is_finished"]], "create_trial() (in module optuna.trial)": [[98, "optuna.trial.create_trial"]], "optuna.importance": [[99, "module-optuna.importance"]], "optuna.integration": [[101, "module-optuna.integration"]], "optuna.logging": [[102, "module-optuna.logging"]], "basemultiobjectivesampler (class in optuna.multi_objective.samplers)": [[103, "optuna.multi_objective.samplers.BaseMultiObjectiveSampler"]], "infer_relative_search_space() (optuna.multi_objective.samplers.basemultiobjectivesampler method)": [[103, "optuna.multi_objective.samplers.BaseMultiObjectiveSampler.infer_relative_search_space"]], "reseed_rng() (optuna.multi_objective.samplers.basemultiobjectivesampler method)": [[103, "optuna.multi_objective.samplers.BaseMultiObjectiveSampler.reseed_rng"]], "sample_independent() (optuna.multi_objective.samplers.basemultiobjectivesampler method)": [[103, "optuna.multi_objective.samplers.BaseMultiObjectiveSampler.sample_independent"]], "sample_relative() (optuna.multi_objective.samplers.basemultiobjectivesampler method)": [[103, "optuna.multi_objective.samplers.BaseMultiObjectiveSampler.sample_relative"]], "motpemultiobjectivesampler (class in optuna.multi_objective.samplers)": [[104, "optuna.multi_objective.samplers.MOTPEMultiObjectiveSampler"]], "infer_relative_search_space() (optuna.multi_objective.samplers.motpemultiobjectivesampler method)": [[104, "optuna.multi_objective.samplers.MOTPEMultiObjectiveSampler.infer_relative_search_space"]], "reseed_rng() (optuna.multi_objective.samplers.motpemultiobjectivesampler method)": [[104, "optuna.multi_objective.samplers.MOTPEMultiObjectiveSampler.reseed_rng"]], "sample_independent() (optuna.multi_objective.samplers.motpemultiobjectivesampler method)": [[104, "optuna.multi_objective.samplers.MOTPEMultiObjectiveSampler.sample_independent"]], "sample_relative() (optuna.multi_objective.samplers.motpemultiobjectivesampler method)": [[104, "optuna.multi_objective.samplers.MOTPEMultiObjectiveSampler.sample_relative"]], "nsgaiimultiobjectivesampler (class in optuna.multi_objective.samplers)": [[105, "optuna.multi_objective.samplers.NSGAIIMultiObjectiveSampler"]], "infer_relative_search_space() (optuna.multi_objective.samplers.nsgaiimultiobjectivesampler method)": [[105, "optuna.multi_objective.samplers.NSGAIIMultiObjectiveSampler.infer_relative_search_space"]], "reseed_rng() (optuna.multi_objective.samplers.nsgaiimultiobjectivesampler method)": [[105, "optuna.multi_objective.samplers.NSGAIIMultiObjectiveSampler.reseed_rng"]], "sample_independent() (optuna.multi_objective.samplers.nsgaiimultiobjectivesampler method)": [[105, "optuna.multi_objective.samplers.NSGAIIMultiObjectiveSampler.sample_independent"]], "sample_relative() (optuna.multi_objective.samplers.nsgaiimultiobjectivesampler method)": [[105, "optuna.multi_objective.samplers.NSGAIIMultiObjectiveSampler.sample_relative"]], "randommultiobjectivesampler (class in optuna.multi_objective.samplers)": [[106, "optuna.multi_objective.samplers.RandomMultiObjectiveSampler"]], "infer_relative_search_space() (optuna.multi_objective.samplers.randommultiobjectivesampler method)": [[106, "optuna.multi_objective.samplers.RandomMultiObjectiveSampler.infer_relative_search_space"]], "reseed_rng() (optuna.multi_objective.samplers.randommultiobjectivesampler method)": [[106, "optuna.multi_objective.samplers.RandomMultiObjectiveSampler.reseed_rng"]], "sample_independent() (optuna.multi_objective.samplers.randommultiobjectivesampler method)": [[106, "optuna.multi_objective.samplers.RandomMultiObjectiveSampler.sample_independent"]], "sample_relative() (optuna.multi_objective.samplers.randommultiobjectivesampler method)": [[106, "optuna.multi_objective.samplers.RandomMultiObjectiveSampler.sample_relative"]], "multiobjectivestudy (class in optuna.multi_objective.study)": [[107, "optuna.multi_objective.study.MultiObjectiveStudy"]], "directions (optuna.multi_objective.study.multiobjectivestudy property)": [[107, "optuna.multi_objective.study.MultiObjectiveStudy.directions"]], "enqueue_trial() (optuna.multi_objective.study.multiobjectivestudy method)": [[107, "optuna.multi_objective.study.MultiObjectiveStudy.enqueue_trial"]], "get_pareto_front_trials() (optuna.multi_objective.study.multiobjectivestudy method)": [[107, "optuna.multi_objective.study.MultiObjectiveStudy.get_pareto_front_trials"]], "get_trials() (optuna.multi_objective.study.multiobjectivestudy method)": [[107, "optuna.multi_objective.study.MultiObjectiveStudy.get_trials"]], "n_objectives (optuna.multi_objective.study.multiobjectivestudy property)": [[107, "optuna.multi_objective.study.MultiObjectiveStudy.n_objectives"]], "optimize() (optuna.multi_objective.study.multiobjectivestudy method)": [[107, "optuna.multi_objective.study.MultiObjectiveStudy.optimize"]], "sampler (optuna.multi_objective.study.multiobjectivestudy property)": [[107, "optuna.multi_objective.study.MultiObjectiveStudy.sampler"]], "set_system_attr() (optuna.multi_objective.study.multiobjectivestudy method)": [[107, "optuna.multi_objective.study.MultiObjectiveStudy.set_system_attr"]], "set_user_attr() (optuna.multi_objective.study.multiobjectivestudy method)": [[107, "optuna.multi_objective.study.MultiObjectiveStudy.set_user_attr"]], "system_attrs (optuna.multi_objective.study.multiobjectivestudy property)": [[107, "optuna.multi_objective.study.MultiObjectiveStudy.system_attrs"]], "trials (optuna.multi_objective.study.multiobjectivestudy property)": [[107, "optuna.multi_objective.study.MultiObjectiveStudy.trials"]], "user_attrs (optuna.multi_objective.study.multiobjectivestudy property)": [[107, "optuna.multi_objective.study.MultiObjectiveStudy.user_attrs"]], "create_study() (in module optuna.multi_objective.study)": [[108, "optuna.multi_objective.study.create_study"]], "load_study() (in module optuna.multi_objective.study)": [[109, "optuna.multi_objective.study.load_study"]], "frozenmultiobjectivetrial (class in optuna.multi_objective.trial)": [[110, "optuna.multi_objective.trial.FrozenMultiObjectiveTrial"]], "datetime_complete (optuna.multi_objective.trial.frozenmultiobjectivetrial attribute)": [[110, "optuna.multi_objective.trial.FrozenMultiObjectiveTrial.datetime_complete"]], "datetime_start (optuna.multi_objective.trial.frozenmultiobjectivetrial attribute)": [[110, "optuna.multi_objective.trial.FrozenMultiObjectiveTrial.datetime_start"]], "distributions (optuna.multi_objective.trial.frozenmultiobjectivetrial attribute)": [[110, "optuna.multi_objective.trial.FrozenMultiObjectiveTrial.distributions"]], "intermediate_values (optuna.multi_objective.trial.frozenmultiobjectivetrial attribute)": [[110, "optuna.multi_objective.trial.FrozenMultiObjectiveTrial.intermediate_values"]], "number (optuna.multi_objective.trial.frozenmultiobjectivetrial attribute)": [[110, "optuna.multi_objective.trial.FrozenMultiObjectiveTrial.number"]], "params (optuna.multi_objective.trial.frozenmultiobjectivetrial attribute)": [[110, "optuna.multi_objective.trial.FrozenMultiObjectiveTrial.params"]], "state (optuna.multi_objective.trial.frozenmultiobjectivetrial attribute)": [[110, "optuna.multi_objective.trial.FrozenMultiObjectiveTrial.state"]], "user_attrs (optuna.multi_objective.trial.frozenmultiobjectivetrial attribute)": [[110, "optuna.multi_objective.trial.FrozenMultiObjectiveTrial.user_attrs"]], "values (optuna.multi_objective.trial.frozenmultiobjectivetrial attribute)": [[110, "optuna.multi_objective.trial.FrozenMultiObjectiveTrial.values"]], "multiobjectivetrial (class in optuna.multi_objective.trial)": [[111, "optuna.multi_objective.trial.MultiObjectiveTrial"]], "datetime_start (optuna.multi_objective.trial.multiobjectivetrial property)": [[111, "optuna.multi_objective.trial.MultiObjectiveTrial.datetime_start"]], "distributions (optuna.multi_objective.trial.multiobjectivetrial property)": [[111, "optuna.multi_objective.trial.MultiObjectiveTrial.distributions"]], "number (optuna.multi_objective.trial.multiobjectivetrial property)": [[111, "optuna.multi_objective.trial.MultiObjectiveTrial.number"]], "params (optuna.multi_objective.trial.multiobjectivetrial property)": [[111, "optuna.multi_objective.trial.MultiObjectiveTrial.params"]], "report() (optuna.multi_objective.trial.multiobjectivetrial method)": [[111, "optuna.multi_objective.trial.MultiObjectiveTrial.report"]], "set_system_attr() (optuna.multi_objective.trial.multiobjectivetrial method)": [[111, "optuna.multi_objective.trial.MultiObjectiveTrial.set_system_attr"]], "set_user_attr() (optuna.multi_objective.trial.multiobjectivetrial method)": [[111, "optuna.multi_objective.trial.MultiObjectiveTrial.set_user_attr"]], "suggest_categorical() (optuna.multi_objective.trial.multiobjectivetrial method)": [[111, "optuna.multi_objective.trial.MultiObjectiveTrial.suggest_categorical"]], "suggest_discrete_uniform() (optuna.multi_objective.trial.multiobjectivetrial method)": [[111, "optuna.multi_objective.trial.MultiObjectiveTrial.suggest_discrete_uniform"]], "suggest_float() (optuna.multi_objective.trial.multiobjectivetrial method)": [[111, "optuna.multi_objective.trial.MultiObjectiveTrial.suggest_float"]], "suggest_int() (optuna.multi_objective.trial.multiobjectivetrial method)": [[111, "optuna.multi_objective.trial.MultiObjectiveTrial.suggest_int"]], "suggest_loguniform() (optuna.multi_objective.trial.multiobjectivetrial method)": [[111, "optuna.multi_objective.trial.MultiObjectiveTrial.suggest_loguniform"]], "suggest_uniform() (optuna.multi_objective.trial.multiobjectivetrial method)": [[111, "optuna.multi_objective.trial.MultiObjectiveTrial.suggest_uniform"]], "system_attrs (optuna.multi_objective.trial.multiobjectivetrial property)": [[111, "optuna.multi_objective.trial.MultiObjectiveTrial.system_attrs"]], "user_attrs (optuna.multi_objective.trial.multiobjectivetrial property)": [[111, "optuna.multi_objective.trial.MultiObjectiveTrial.user_attrs"]], "plot_pareto_front() (in module optuna.multi_objective.visualization)": [[112, "optuna.multi_objective.visualization.plot_pareto_front"]], "optuna.multi_objective": [[113, "module-optuna.multi_objective"]], "optuna.multi_objective.samplers": [[114, "module-optuna.multi_objective.samplers"]], "optuna.multi_objective.study": [[115, "module-optuna.multi_objective.study"]], "optuna.multi_objective.trial": [[116, "module-optuna.multi_objective.trial"]], "optuna.multi_objective.visualization": [[117, "module-optuna.multi_objective.visualization"]], "optuna": [[118, "module-optuna"]], "optuna.pruners": [[119, "module-optuna.pruners"]], "basesampler (class in optuna.samplers)": [[120, "optuna.samplers.BaseSampler"]], "after_trial() (optuna.samplers.basesampler method)": [[120, "optuna.samplers.BaseSampler.after_trial"]], "infer_relative_search_space() (optuna.samplers.basesampler method)": [[120, "optuna.samplers.BaseSampler.infer_relative_search_space"]], "reseed_rng() (optuna.samplers.basesampler method)": [[120, "optuna.samplers.BaseSampler.reseed_rng"]], "sample_independent() (optuna.samplers.basesampler method)": [[120, "optuna.samplers.BaseSampler.sample_independent"]], "sample_relative() (optuna.samplers.basesampler method)": [[120, "optuna.samplers.BaseSampler.sample_relative"]], "cmaessampler (class in optuna.samplers)": [[121, "optuna.samplers.CmaEsSampler"]], "after_trial() (optuna.samplers.cmaessampler method)": [[121, "optuna.samplers.CmaEsSampler.after_trial"]], "infer_relative_search_space() (optuna.samplers.cmaessampler method)": [[121, "optuna.samplers.CmaEsSampler.infer_relative_search_space"]], "reseed_rng() (optuna.samplers.cmaessampler method)": [[121, "optuna.samplers.CmaEsSampler.reseed_rng"]], "sample_independent() (optuna.samplers.cmaessampler method)": [[121, "optuna.samplers.CmaEsSampler.sample_independent"]], "sample_relative() (optuna.samplers.cmaessampler method)": [[121, "optuna.samplers.CmaEsSampler.sample_relative"]], "gridsampler (class in optuna.samplers)": [[122, "optuna.samplers.GridSampler"]], "after_trial() (optuna.samplers.gridsampler method)": [[122, "optuna.samplers.GridSampler.after_trial"]], "infer_relative_search_space() (optuna.samplers.gridsampler method)": [[122, "optuna.samplers.GridSampler.infer_relative_search_space"]], "reseed_rng() (optuna.samplers.gridsampler method)": [[122, "optuna.samplers.GridSampler.reseed_rng"]], "sample_independent() (optuna.samplers.gridsampler method)": [[122, "optuna.samplers.GridSampler.sample_independent"]], "sample_relative() (optuna.samplers.gridsampler method)": [[122, "optuna.samplers.GridSampler.sample_relative"]], "intersectionsearchspace (class in optuna.samplers)": [[123, "optuna.samplers.IntersectionSearchSpace"]], "calculate() (optuna.samplers.intersectionsearchspace method)": [[123, "optuna.samplers.IntersectionSearchSpace.calculate"]], "motpesampler (class in optuna.samplers)": [[124, "optuna.samplers.MOTPESampler"]], "after_trial() (optuna.samplers.motpesampler method)": [[124, "optuna.samplers.MOTPESampler.after_trial"]], "hyperopt_parameters() (optuna.samplers.motpesampler static method)": [[124, "optuna.samplers.MOTPESampler.hyperopt_parameters"]], "infer_relative_search_space() (optuna.samplers.motpesampler method)": [[124, "optuna.samplers.MOTPESampler.infer_relative_search_space"]], "reseed_rng() (optuna.samplers.motpesampler method)": [[124, "optuna.samplers.MOTPESampler.reseed_rng"]], "sample_independent() (optuna.samplers.motpesampler method)": [[124, "optuna.samplers.MOTPESampler.sample_independent"]], "sample_relative() (optuna.samplers.motpesampler method)": [[124, "optuna.samplers.MOTPESampler.sample_relative"]], "nsgaiisampler (class in optuna.samplers)": [[125, "optuna.samplers.NSGAIISampler"]], "after_trial() (optuna.samplers.nsgaiisampler method)": [[125, "optuna.samplers.NSGAIISampler.after_trial"]], "infer_relative_search_space() (optuna.samplers.nsgaiisampler method)": [[125, "optuna.samplers.NSGAIISampler.infer_relative_search_space"]], "reseed_rng() (optuna.samplers.nsgaiisampler method)": [[125, "optuna.samplers.NSGAIISampler.reseed_rng"]], "sample_independent() (optuna.samplers.nsgaiisampler method)": [[125, "optuna.samplers.NSGAIISampler.sample_independent"]], "sample_relative() (optuna.samplers.nsgaiisampler method)": [[125, "optuna.samplers.NSGAIISampler.sample_relative"]], "partialfixedsampler (class in optuna.samplers)": [[126, "optuna.samplers.PartialFixedSampler"]], "after_trial() (optuna.samplers.partialfixedsampler method)": [[126, "optuna.samplers.PartialFixedSampler.after_trial"]], "infer_relative_search_space() (optuna.samplers.partialfixedsampler method)": [[126, "optuna.samplers.PartialFixedSampler.infer_relative_search_space"]], "reseed_rng() (optuna.samplers.partialfixedsampler method)": [[126, "optuna.samplers.PartialFixedSampler.reseed_rng"]], "sample_independent() (optuna.samplers.partialfixedsampler method)": [[126, "optuna.samplers.PartialFixedSampler.sample_independent"]], "sample_relative() (optuna.samplers.partialfixedsampler method)": [[126, "optuna.samplers.PartialFixedSampler.sample_relative"]], "qmcsampler (class in optuna.samplers)": [[127, "optuna.samplers.QMCSampler"]], "after_trial() (optuna.samplers.qmcsampler method)": [[127, "optuna.samplers.QMCSampler.after_trial"]], "infer_relative_search_space() (optuna.samplers.qmcsampler method)": [[127, "optuna.samplers.QMCSampler.infer_relative_search_space"]], "reseed_rng() (optuna.samplers.qmcsampler method)": [[127, "optuna.samplers.QMCSampler.reseed_rng"]], "sample_independent() (optuna.samplers.qmcsampler method)": [[127, "optuna.samplers.QMCSampler.sample_independent"]], "sample_relative() (optuna.samplers.qmcsampler method)": [[127, "optuna.samplers.QMCSampler.sample_relative"]], "randomsampler (class in optuna.samplers)": [[128, "optuna.samplers.RandomSampler"]], "after_trial() (optuna.samplers.randomsampler method)": [[128, "optuna.samplers.RandomSampler.after_trial"]], "infer_relative_search_space() (optuna.samplers.randomsampler method)": [[128, "optuna.samplers.RandomSampler.infer_relative_search_space"]], "reseed_rng() (optuna.samplers.randomsampler method)": [[128, "optuna.samplers.RandomSampler.reseed_rng"]], "sample_independent() (optuna.samplers.randomsampler method)": [[128, "optuna.samplers.RandomSampler.sample_independent"]], "sample_relative() (optuna.samplers.randomsampler method)": [[128, "optuna.samplers.RandomSampler.sample_relative"]], "tpesampler (class in optuna.samplers)": [[129, "optuna.samplers.TPESampler"]], "after_trial() (optuna.samplers.tpesampler method)": [[129, "optuna.samplers.TPESampler.after_trial"]], "hyperopt_parameters() (optuna.samplers.tpesampler static method)": [[129, "optuna.samplers.TPESampler.hyperopt_parameters"]], "infer_relative_search_space() (optuna.samplers.tpesampler method)": [[129, "optuna.samplers.TPESampler.infer_relative_search_space"]], "reseed_rng() (optuna.samplers.tpesampler method)": [[129, "optuna.samplers.TPESampler.reseed_rng"]], "sample_independent() (optuna.samplers.tpesampler method)": [[129, "optuna.samplers.TPESampler.sample_independent"]], "sample_relative() (optuna.samplers.tpesampler method)": [[129, "optuna.samplers.TPESampler.sample_relative"]], "intersection_search_space() (in module optuna.samplers)": [[130, "optuna.samplers.intersection_search_space"]], "blxalphacrossover (class in optuna.samplers.nsgaii)": [[131, "optuna.samplers.nsgaii.BLXAlphaCrossover"]], "crossover() (optuna.samplers.nsgaii.blxalphacrossover method)": [[131, "optuna.samplers.nsgaii.BLXAlphaCrossover.crossover"]], "basecrossover (class in optuna.samplers.nsgaii)": [[132, "optuna.samplers.nsgaii.BaseCrossover"]], "crossover() (optuna.samplers.nsgaii.basecrossover method)": [[132, "optuna.samplers.nsgaii.BaseCrossover.crossover"]], "n_parents (optuna.samplers.nsgaii.basecrossover property)": [[132, "optuna.samplers.nsgaii.BaseCrossover.n_parents"]], "sbxcrossover (class in optuna.samplers.nsgaii)": [[133, "optuna.samplers.nsgaii.SBXCrossover"]], "crossover() (optuna.samplers.nsgaii.sbxcrossover method)": [[133, "optuna.samplers.nsgaii.SBXCrossover.crossover"]], "spxcrossover (class in optuna.samplers.nsgaii)": [[134, "optuna.samplers.nsgaii.SPXCrossover"]], "crossover() (optuna.samplers.nsgaii.spxcrossover method)": [[134, "optuna.samplers.nsgaii.SPXCrossover.crossover"]], "undxcrossover (class in optuna.samplers.nsgaii)": [[135, "optuna.samplers.nsgaii.UNDXCrossover"]], "crossover() (optuna.samplers.nsgaii.undxcrossover method)": [[135, "optuna.samplers.nsgaii.UNDXCrossover.crossover"]], "uniformcrossover (class in optuna.samplers.nsgaii)": [[136, "optuna.samplers.nsgaii.UniformCrossover"]], "crossover() (optuna.samplers.nsgaii.uniformcrossover method)": [[136, "optuna.samplers.nsgaii.UniformCrossover.crossover"]], "vsbxcrossover (class in optuna.samplers.nsgaii)": [[137, "optuna.samplers.nsgaii.VSBXCrossover"]], "crossover() (optuna.samplers.nsgaii.vsbxcrossover method)": [[137, "optuna.samplers.nsgaii.VSBXCrossover.crossover"]], "optuna.samplers": [[138, "module-optuna.samplers"]], "optuna.samplers.nsgaii": [[139, "module-optuna.samplers.nsgaii"]], "optuna.storages": [[140, "module-optuna.storages"]], "optuna.study": [[141, "module-optuna.study"]], "optuna.trial": [[142, "module-optuna.trial"]], "is_available() (in module optuna.visualization)": [[143, "optuna.visualization.is_available"]], "is_available() (in module optuna.visualization.matplotlib)": [[144, "optuna.visualization.matplotlib.is_available"]], "plot_contour() (in module optuna.visualization.matplotlib)": [[145, "optuna.visualization.matplotlib.plot_contour"]], "plot_edf() (in module optuna.visualization.matplotlib)": [[146, "optuna.visualization.matplotlib.plot_edf"]], "plot_intermediate_values() (in module optuna.visualization.matplotlib)": [[147, "optuna.visualization.matplotlib.plot_intermediate_values"]], "plot_optimization_history() (in module optuna.visualization.matplotlib)": [[148, "optuna.visualization.matplotlib.plot_optimization_history"]], "plot_parallel_coordinate() (in module optuna.visualization.matplotlib)": [[149, "optuna.visualization.matplotlib.plot_parallel_coordinate"]], "plot_param_importances() (in module optuna.visualization.matplotlib)": [[150, "optuna.visualization.matplotlib.plot_param_importances"]], "plot_pareto_front() (in module optuna.visualization.matplotlib)": [[151, "optuna.visualization.matplotlib.plot_pareto_front"]], "plot_slice() (in module optuna.visualization.matplotlib)": [[152, "optuna.visualization.matplotlib.plot_slice"]], "plot_contour() (in module optuna.visualization)": [[153, "optuna.visualization.plot_contour"]], "plot_edf() (in module optuna.visualization)": [[154, "optuna.visualization.plot_edf"]], "plot_intermediate_values() (in module optuna.visualization)": [[155, "optuna.visualization.plot_intermediate_values"]], "plot_optimization_history() (in module optuna.visualization)": [[156, "optuna.visualization.plot_optimization_history"]], "plot_parallel_coordinate() (in module optuna.visualization)": [[157, "optuna.visualization.plot_parallel_coordinate"]], "plot_param_importances() (in module optuna.visualization)": [[158, "optuna.visualization.plot_param_importances"]], "plot_pareto_front() (in module optuna.visualization)": [[159, "optuna.visualization.plot_pareto_front"]], "plot_slice() (in module optuna.visualization)": [[160, "optuna.visualization.plot_slice"]], "optuna.visualization": [[161, "module-optuna.visualization"]], "optuna.visualization.matplotlib": [[162, "module-optuna.visualization.matplotlib"]]}})