Search.setIndex({"docnames": ["faq", "index", "installation", "license_thirdparty", "privacy", "reference/cli", "reference/distributions", "reference/exceptions", "reference/generated/optuna.TrialPruned", "reference/generated/optuna.copy_study", "reference/generated/optuna.create_study", "reference/generated/optuna.delete_study", "reference/generated/optuna.distributions.CategoricalDistribution", "reference/generated/optuna.distributions.DiscreteUniformDistribution", "reference/generated/optuna.distributions.FloatDistribution", "reference/generated/optuna.distributions.IntDistribution", "reference/generated/optuna.distributions.IntLogUniformDistribution", "reference/generated/optuna.distributions.IntUniformDistribution", "reference/generated/optuna.distributions.LogUniformDistribution", "reference/generated/optuna.distributions.UniformDistribution", "reference/generated/optuna.distributions.check_distribution_compatibility", "reference/generated/optuna.distributions.distribution_to_json", "reference/generated/optuna.distributions.json_to_distribution", "reference/generated/optuna.exceptions.CLIUsageError", "reference/generated/optuna.exceptions.DuplicatedStudyError", "reference/generated/optuna.exceptions.OptunaError", "reference/generated/optuna.exceptions.StorageInternalError", "reference/generated/optuna.exceptions.TrialPruned", "reference/generated/optuna.get_all_study_summaries", "reference/generated/optuna.importance.FanovaImportanceEvaluator", "reference/generated/optuna.importance.MeanDecreaseImpurityImportanceEvaluator", "reference/generated/optuna.importance.get_param_importances", "reference/generated/optuna.integration.AllenNLPExecutor", "reference/generated/optuna.integration.AllenNLPPruningCallback", "reference/generated/optuna.integration.BoTorchSampler", "reference/generated/optuna.integration.CatBoostPruningCallback", "reference/generated/optuna.integration.CatalystPruningCallback", "reference/generated/optuna.integration.ChainerMNStudy", "reference/generated/optuna.integration.ChainerPruningExtension", "reference/generated/optuna.integration.CmaEsSampler", "reference/generated/optuna.integration.DaskStorage", "reference/generated/optuna.integration.FastAIPruningCallback", "reference/generated/optuna.integration.FastAIV1PruningCallback", "reference/generated/optuna.integration.FastAIV2PruningCallback", "reference/generated/optuna.integration.KerasPruningCallback", "reference/generated/optuna.integration.LightGBMPruningCallback", "reference/generated/optuna.integration.MLflowCallback", "reference/generated/optuna.integration.MXNetPruningCallback", "reference/generated/optuna.integration.OptunaSearchCV", "reference/generated/optuna.integration.PyCmaSampler", "reference/generated/optuna.integration.PyTorchIgnitePruningHandler", "reference/generated/optuna.integration.PyTorchLightningPruningCallback", "reference/generated/optuna.integration.ShapleyImportanceEvaluator", "reference/generated/optuna.integration.SkoptSampler", "reference/generated/optuna.integration.SkorchPruningCallback", "reference/generated/optuna.integration.TFKerasPruningCallback", "reference/generated/optuna.integration.TensorBoardCallback", "reference/generated/optuna.integration.TensorFlowPruningHook", "reference/generated/optuna.integration.TorchDistributedTrial", "reference/generated/optuna.integration.WeightsAndBiasesCallback", "reference/generated/optuna.integration.XGBoostPruningCallback", "reference/generated/optuna.integration.allennlp.dump_best_config", "reference/generated/optuna.integration.botorch.qehvi_candidates_func", "reference/generated/optuna.integration.botorch.qei_candidates_func", "reference/generated/optuna.integration.botorch.qnehvi_candidates_func", "reference/generated/optuna.integration.botorch.qparego_candidates_func", "reference/generated/optuna.integration.lightgbm.LightGBMTuner", "reference/generated/optuna.integration.lightgbm.LightGBMTunerCV", "reference/generated/optuna.integration.lightgbm.train", "reference/generated/optuna.load_study", "reference/generated/optuna.logging.disable_default_handler", "reference/generated/optuna.logging.disable_propagation", "reference/generated/optuna.logging.enable_default_handler", "reference/generated/optuna.logging.enable_propagation", "reference/generated/optuna.logging.get_verbosity", "reference/generated/optuna.logging.set_verbosity", "reference/generated/optuna.pruners.BasePruner", "reference/generated/optuna.pruners.HyperbandPruner", "reference/generated/optuna.pruners.MedianPruner", "reference/generated/optuna.pruners.NopPruner", "reference/generated/optuna.pruners.PatientPruner", "reference/generated/optuna.pruners.PercentilePruner", "reference/generated/optuna.pruners.SuccessiveHalvingPruner", "reference/generated/optuna.pruners.ThresholdPruner", "reference/generated/optuna.storages.JournalFileOpenLock", "reference/generated/optuna.storages.JournalFileStorage", "reference/generated/optuna.storages.JournalFileSymlinkLock", "reference/generated/optuna.storages.JournalRedisStorage", "reference/generated/optuna.storages.JournalStorage", "reference/generated/optuna.storages.RDBStorage", "reference/generated/optuna.storages.RetryFailedTrialCallback", "reference/generated/optuna.storages.fail_stale_trials", "reference/generated/optuna.study.MaxTrialsCallback", "reference/generated/optuna.study.Study", "reference/generated/optuna.study.StudyDirection", "reference/generated/optuna.study.StudySummary", "reference/generated/optuna.study.copy_study", "reference/generated/optuna.study.create_study", "reference/generated/optuna.study.delete_study", "reference/generated/optuna.study.get_all_study_summaries", "reference/generated/optuna.study.load_study", "reference/generated/optuna.trial.FixedTrial", "reference/generated/optuna.trial.FrozenTrial", "reference/generated/optuna.trial.Trial", "reference/generated/optuna.trial.TrialState", "reference/generated/optuna.trial.create_trial", "reference/importance", "reference/index", "reference/integration", "reference/logging", "reference/optuna", "reference/pruners", "reference/samplers/generated/optuna.samplers.BaseSampler", "reference/samplers/generated/optuna.samplers.BruteForceSampler", "reference/samplers/generated/optuna.samplers.CmaEsSampler", "reference/samplers/generated/optuna.samplers.GridSampler", "reference/samplers/generated/optuna.samplers.IntersectionSearchSpace", "reference/samplers/generated/optuna.samplers.MOTPESampler", "reference/samplers/generated/optuna.samplers.NSGAIISampler", "reference/samplers/generated/optuna.samplers.PartialFixedSampler", "reference/samplers/generated/optuna.samplers.QMCSampler", "reference/samplers/generated/optuna.samplers.RandomSampler", "reference/samplers/generated/optuna.samplers.TPESampler", "reference/samplers/generated/optuna.samplers.intersection_search_space", "reference/samplers/generated/optuna.samplers.nsgaii.BLXAlphaCrossover", "reference/samplers/generated/optuna.samplers.nsgaii.BaseCrossover", "reference/samplers/generated/optuna.samplers.nsgaii.SBXCrossover", "reference/samplers/generated/optuna.samplers.nsgaii.SPXCrossover", "reference/samplers/generated/optuna.samplers.nsgaii.UNDXCrossover", "reference/samplers/generated/optuna.samplers.nsgaii.UniformCrossover", "reference/samplers/generated/optuna.samplers.nsgaii.VSBXCrossover", "reference/samplers/index", "reference/samplers/nsgaii", "reference/storages", "reference/study", "reference/trial", "reference/visualization/generated/optuna.visualization.is_available", "reference/visualization/generated/optuna.visualization.matplotlib.is_available", "reference/visualization/generated/optuna.visualization.matplotlib.plot_contour", "reference/visualization/generated/optuna.visualization.matplotlib.plot_edf", "reference/visualization/generated/optuna.visualization.matplotlib.plot_intermediate_values", "reference/visualization/generated/optuna.visualization.matplotlib.plot_optimization_history", "reference/visualization/generated/optuna.visualization.matplotlib.plot_parallel_coordinate", "reference/visualization/generated/optuna.visualization.matplotlib.plot_param_importances", "reference/visualization/generated/optuna.visualization.matplotlib.plot_pareto_front", "reference/visualization/generated/optuna.visualization.matplotlib.plot_slice", "reference/visualization/generated/optuna.visualization.plot_contour", "reference/visualization/generated/optuna.visualization.plot_edf", "reference/visualization/generated/optuna.visualization.plot_intermediate_values", "reference/visualization/generated/optuna.visualization.plot_optimization_history", "reference/visualization/generated/optuna.visualization.plot_parallel_coordinate", "reference/visualization/generated/optuna.visualization.plot_param_importances", "reference/visualization/generated/optuna.visualization.plot_pareto_front", "reference/visualization/generated/optuna.visualization.plot_slice", "reference/visualization/index", "reference/visualization/matplotlib", "tutorial/10_key_features/001_first", "tutorial/10_key_features/002_configurations", "tutorial/10_key_features/003_efficient_optimization_algorithms", "tutorial/10_key_features/004_distributed", "tutorial/10_key_features/005_visualization", "tutorial/10_key_features/index", "tutorial/10_key_features/sg_execution_times", "tutorial/20_recipes/001_rdb", "tutorial/20_recipes/002_multi_objective", "tutorial/20_recipes/003_attributes", "tutorial/20_recipes/004_cli", "tutorial/20_recipes/005_user_defined_sampler", "tutorial/20_recipes/006_user_defined_pruner", "tutorial/20_recipes/007_optuna_callback", "tutorial/20_recipes/008_specify_params", "tutorial/20_recipes/009_ask_and_tell", "tutorial/20_recipes/010_reuse_best_trial", "tutorial/20_recipes/index", "tutorial/20_recipes/sg_execution_times", "tutorial/index"], "filenames": ["faq.rst", "index.rst", "installation.rst", "license_thirdparty.rst", "privacy.rst", "reference/cli.rst", "reference/distributions.rst", "reference/exceptions.rst", "reference/generated/optuna.TrialPruned.rst", "reference/generated/optuna.copy_study.rst", "reference/generated/optuna.create_study.rst", "reference/generated/optuna.delete_study.rst", "reference/generated/optuna.distributions.CategoricalDistribution.rst", "reference/generated/optuna.distributions.DiscreteUniformDistribution.rst", "reference/generated/optuna.distributions.FloatDistribution.rst", "reference/generated/optuna.distributions.IntDistribution.rst", "reference/generated/optuna.distributions.IntLogUniformDistribution.rst", "reference/generated/optuna.distributions.IntUniformDistribution.rst", "reference/generated/optuna.distributions.LogUniformDistribution.rst", "reference/generated/optuna.distributions.UniformDistribution.rst", "reference/generated/optuna.distributions.check_distribution_compatibility.rst", "reference/generated/optuna.distributions.distribution_to_json.rst", "reference/generated/optuna.distributions.json_to_distribution.rst", "reference/generated/optuna.exceptions.CLIUsageError.rst", "reference/generated/optuna.exceptions.DuplicatedStudyError.rst", "reference/generated/optuna.exceptions.OptunaError.rst", "reference/generated/optuna.exceptions.StorageInternalError.rst", "reference/generated/optuna.exceptions.TrialPruned.rst", "reference/generated/optuna.get_all_study_summaries.rst", "reference/generated/optuna.importance.FanovaImportanceEvaluator.rst", "reference/generated/optuna.importance.MeanDecreaseImpurityImportanceEvaluator.rst", "reference/generated/optuna.importance.get_param_importances.rst", "reference/generated/optuna.integration.AllenNLPExecutor.rst", "reference/generated/optuna.integration.AllenNLPPruningCallback.rst", "reference/generated/optuna.integration.BoTorchSampler.rst", "reference/generated/optuna.integration.CatBoostPruningCallback.rst", "reference/generated/optuna.integration.CatalystPruningCallback.rst", "reference/generated/optuna.integration.ChainerMNStudy.rst", "reference/generated/optuna.integration.ChainerPruningExtension.rst", "reference/generated/optuna.integration.CmaEsSampler.rst", "reference/generated/optuna.integration.DaskStorage.rst", "reference/generated/optuna.integration.FastAIPruningCallback.rst", "reference/generated/optuna.integration.FastAIV1PruningCallback.rst", "reference/generated/optuna.integration.FastAIV2PruningCallback.rst", "reference/generated/optuna.integration.KerasPruningCallback.rst", "reference/generated/optuna.integration.LightGBMPruningCallback.rst", "reference/generated/optuna.integration.MLflowCallback.rst", "reference/generated/optuna.integration.MXNetPruningCallback.rst", "reference/generated/optuna.integration.OptunaSearchCV.rst", "reference/generated/optuna.integration.PyCmaSampler.rst", "reference/generated/optuna.integration.PyTorchIgnitePruningHandler.rst", "reference/generated/optuna.integration.PyTorchLightningPruningCallback.rst", "reference/generated/optuna.integration.ShapleyImportanceEvaluator.rst", "reference/generated/optuna.integration.SkoptSampler.rst", "reference/generated/optuna.integration.SkorchPruningCallback.rst", "reference/generated/optuna.integration.TFKerasPruningCallback.rst", "reference/generated/optuna.integration.TensorBoardCallback.rst", "reference/generated/optuna.integration.TensorFlowPruningHook.rst", "reference/generated/optuna.integration.TorchDistributedTrial.rst", "reference/generated/optuna.integration.WeightsAndBiasesCallback.rst", "reference/generated/optuna.integration.XGBoostPruningCallback.rst", "reference/generated/optuna.integration.allennlp.dump_best_config.rst", "reference/generated/optuna.integration.botorch.qehvi_candidates_func.rst", "reference/generated/optuna.integration.botorch.qei_candidates_func.rst", "reference/generated/optuna.integration.botorch.qnehvi_candidates_func.rst", "reference/generated/optuna.integration.botorch.qparego_candidates_func.rst", "reference/generated/optuna.integration.lightgbm.LightGBMTuner.rst", "reference/generated/optuna.integration.lightgbm.LightGBMTunerCV.rst", "reference/generated/optuna.integration.lightgbm.train.rst", "reference/generated/optuna.load_study.rst", "reference/generated/optuna.logging.disable_default_handler.rst", "reference/generated/optuna.logging.disable_propagation.rst", "reference/generated/optuna.logging.enable_default_handler.rst", "reference/generated/optuna.logging.enable_propagation.rst", "reference/generated/optuna.logging.get_verbosity.rst", "reference/generated/optuna.logging.set_verbosity.rst", "reference/generated/optuna.pruners.BasePruner.rst", "reference/generated/optuna.pruners.HyperbandPruner.rst", "reference/generated/optuna.pruners.MedianPruner.rst", "reference/generated/optuna.pruners.NopPruner.rst", "reference/generated/optuna.pruners.PatientPruner.rst", "reference/generated/optuna.pruners.PercentilePruner.rst", "reference/generated/optuna.pruners.SuccessiveHalvingPruner.rst", "reference/generated/optuna.pruners.ThresholdPruner.rst", "reference/generated/optuna.storages.JournalFileOpenLock.rst", "reference/generated/optuna.storages.JournalFileStorage.rst", "reference/generated/optuna.storages.JournalFileSymlinkLock.rst", "reference/generated/optuna.storages.JournalRedisStorage.rst", "reference/generated/optuna.storages.JournalStorage.rst", "reference/generated/optuna.storages.RDBStorage.rst", "reference/generated/optuna.storages.RetryFailedTrialCallback.rst", "reference/generated/optuna.storages.fail_stale_trials.rst", "reference/generated/optuna.study.MaxTrialsCallback.rst", "reference/generated/optuna.study.Study.rst", "reference/generated/optuna.study.StudyDirection.rst", "reference/generated/optuna.study.StudySummary.rst", "reference/generated/optuna.study.copy_study.rst", "reference/generated/optuna.study.create_study.rst", "reference/generated/optuna.study.delete_study.rst", "reference/generated/optuna.study.get_all_study_summaries.rst", "reference/generated/optuna.study.load_study.rst", "reference/generated/optuna.trial.FixedTrial.rst", "reference/generated/optuna.trial.FrozenTrial.rst", "reference/generated/optuna.trial.Trial.rst", "reference/generated/optuna.trial.TrialState.rst", "reference/generated/optuna.trial.create_trial.rst", "reference/importance.rst", "reference/index.rst", "reference/integration.rst", "reference/logging.rst", "reference/optuna.rst", "reference/pruners.rst", "reference/samplers/generated/optuna.samplers.BaseSampler.rst", "reference/samplers/generated/optuna.samplers.BruteForceSampler.rst", "reference/samplers/generated/optuna.samplers.CmaEsSampler.rst", "reference/samplers/generated/optuna.samplers.GridSampler.rst", "reference/samplers/generated/optuna.samplers.IntersectionSearchSpace.rst", "reference/samplers/generated/optuna.samplers.MOTPESampler.rst", "reference/samplers/generated/optuna.samplers.NSGAIISampler.rst", "reference/samplers/generated/optuna.samplers.PartialFixedSampler.rst", "reference/samplers/generated/optuna.samplers.QMCSampler.rst", "reference/samplers/generated/optuna.samplers.RandomSampler.rst", "reference/samplers/generated/optuna.samplers.TPESampler.rst", "reference/samplers/generated/optuna.samplers.intersection_search_space.rst", "reference/samplers/generated/optuna.samplers.nsgaii.BLXAlphaCrossover.rst", "reference/samplers/generated/optuna.samplers.nsgaii.BaseCrossover.rst", "reference/samplers/generated/optuna.samplers.nsgaii.SBXCrossover.rst", "reference/samplers/generated/optuna.samplers.nsgaii.SPXCrossover.rst", "reference/samplers/generated/optuna.samplers.nsgaii.UNDXCrossover.rst", "reference/samplers/generated/optuna.samplers.nsgaii.UniformCrossover.rst", "reference/samplers/generated/optuna.samplers.nsgaii.VSBXCrossover.rst", "reference/samplers/index.rst", "reference/samplers/nsgaii.rst", "reference/storages.rst", "reference/study.rst", "reference/trial.rst", "reference/visualization/generated/optuna.visualization.is_available.rst", "reference/visualization/generated/optuna.visualization.matplotlib.is_available.rst", "reference/visualization/generated/optuna.visualization.matplotlib.plot_contour.rst", "reference/visualization/generated/optuna.visualization.matplotlib.plot_edf.rst", "reference/visualization/generated/optuna.visualization.matplotlib.plot_intermediate_values.rst", "reference/visualization/generated/optuna.visualization.matplotlib.plot_optimization_history.rst", "reference/visualization/generated/optuna.visualization.matplotlib.plot_parallel_coordinate.rst", "reference/visualization/generated/optuna.visualization.matplotlib.plot_param_importances.rst", "reference/visualization/generated/optuna.visualization.matplotlib.plot_pareto_front.rst", "reference/visualization/generated/optuna.visualization.matplotlib.plot_slice.rst", "reference/visualization/generated/optuna.visualization.plot_contour.rst", "reference/visualization/generated/optuna.visualization.plot_edf.rst", "reference/visualization/generated/optuna.visualization.plot_intermediate_values.rst", "reference/visualization/generated/optuna.visualization.plot_optimization_history.rst", "reference/visualization/generated/optuna.visualization.plot_parallel_coordinate.rst", "reference/visualization/generated/optuna.visualization.plot_param_importances.rst", "reference/visualization/generated/optuna.visualization.plot_pareto_front.rst", "reference/visualization/generated/optuna.visualization.plot_slice.rst", "reference/visualization/index.rst", "reference/visualization/matplotlib.rst", "tutorial/10_key_features/001_first.rst", "tutorial/10_key_features/002_configurations.rst", "tutorial/10_key_features/003_efficient_optimization_algorithms.rst", "tutorial/10_key_features/004_distributed.rst", "tutorial/10_key_features/005_visualization.rst", "tutorial/10_key_features/index.rst", "tutorial/10_key_features/sg_execution_times.rst", "tutorial/20_recipes/001_rdb.rst", "tutorial/20_recipes/002_multi_objective.rst", "tutorial/20_recipes/003_attributes.rst", "tutorial/20_recipes/004_cli.rst", "tutorial/20_recipes/005_user_defined_sampler.rst", "tutorial/20_recipes/006_user_defined_pruner.rst", "tutorial/20_recipes/007_optuna_callback.rst", "tutorial/20_recipes/008_specify_params.rst", "tutorial/20_recipes/009_ask_and_tell.rst", "tutorial/20_recipes/010_reuse_best_trial.rst", "tutorial/20_recipes/index.rst", "tutorial/20_recipes/sg_execution_times.rst", "tutorial/index.rst"], "titles": ["FAQ", "Optuna: A hyperparameter optimization framework", "Installation", "Third-party License", "Privacy Policy", "optuna.cli", "optuna.distributions", "optuna.exceptions", "optuna.TrialPruned", "optuna.copy_study", "optuna.create_study", "optuna.delete_study", "optuna.distributions.CategoricalDistribution", "optuna.distributions.DiscreteUniformDistribution", "optuna.distributions.FloatDistribution", "optuna.distributions.IntDistribution", "optuna.distributions.IntLogUniformDistribution", "optuna.distributions.IntUniformDistribution", "optuna.distributions.LogUniformDistribution", "optuna.distributions.UniformDistribution", "optuna.distributions.check_distribution_compatibility", "optuna.distributions.distribution_to_json", "optuna.distributions.json_to_distribution", "optuna.exceptions.CLIUsageError", "optuna.exceptions.DuplicatedStudyError", "optuna.exceptions.OptunaError", "optuna.exceptions.StorageInternalError", "optuna.exceptions.TrialPruned", "optuna.get_all_study_summaries", "optuna.importance.FanovaImportanceEvaluator", "optuna.importance.MeanDecreaseImpurityImportanceEvaluator", "optuna.importance.get_param_importances", "optuna.integration.AllenNLPExecutor", "optuna.integration.AllenNLPPruningCallback", "optuna.integration.BoTorchSampler", "optuna.integration.CatBoostPruningCallback", "optuna.integration.CatalystPruningCallback", "optuna.integration.ChainerMNStudy", "optuna.integration.ChainerPruningExtension", "optuna.integration.CmaEsSampler", "optuna.integration.DaskStorage", "optuna.integration.FastAIPruningCallback", "optuna.integration.FastAIV1PruningCallback", "optuna.integration.FastAIV2PruningCallback", "optuna.integration.KerasPruningCallback", "optuna.integration.LightGBMPruningCallback", "optuna.integration.MLflowCallback", "optuna.integration.MXNetPruningCallback", "optuna.integration.OptunaSearchCV", "optuna.integration.PyCmaSampler", "optuna.integration.PyTorchIgnitePruningHandler", "optuna.integration.PyTorchLightningPruningCallback", "optuna.integration.ShapleyImportanceEvaluator", "optuna.integration.SkoptSampler", "optuna.integration.SkorchPruningCallback", "optuna.integration.TFKerasPruningCallback", "optuna.integration.TensorBoardCallback", "optuna.integration.TensorFlowPruningHook", "optuna.integration.TorchDistributedTrial", "optuna.integration.WeightsAndBiasesCallback", "optuna.integration.XGBoostPruningCallback", "optuna.integration.allennlp.dump_best_config", "optuna.integration.botorch.qehvi_candidates_func", "optuna.integration.botorch.qei_candidates_func", "optuna.integration.botorch.qnehvi_candidates_func", "optuna.integration.botorch.qparego_candidates_func", "optuna.integration.lightgbm.LightGBMTuner", "optuna.integration.lightgbm.LightGBMTunerCV", "optuna.integration.lightgbm.train", "optuna.load_study", "optuna.logging.disable_default_handler", "optuna.logging.disable_propagation", "optuna.logging.enable_default_handler", "optuna.logging.enable_propagation", "optuna.logging.get_verbosity", "optuna.logging.set_verbosity", "optuna.pruners.BasePruner", "optuna.pruners.HyperbandPruner", "optuna.pruners.MedianPruner", "optuna.pruners.NopPruner", "optuna.pruners.PatientPruner", "optuna.pruners.PercentilePruner", "optuna.pruners.SuccessiveHalvingPruner", "optuna.pruners.ThresholdPruner", "optuna.storages.JournalFileOpenLock", "optuna.storages.JournalFileStorage", "optuna.storages.JournalFileSymlinkLock", "optuna.storages.JournalRedisStorage", "optuna.storages.JournalStorage", "optuna.storages.RDBStorage", "optuna.storages.RetryFailedTrialCallback", "optuna.storages.fail_stale_trials", "optuna.study.MaxTrialsCallback", "optuna.study.Study", "optuna.study.StudyDirection", "optuna.study.StudySummary", "optuna.study.copy_study", "optuna.study.create_study", "optuna.study.delete_study", "optuna.study.get_all_study_summaries", "optuna.study.load_study", "optuna.trial.FixedTrial", "optuna.trial.FrozenTrial", "optuna.trial.Trial", "optuna.trial.TrialState", "optuna.trial.create_trial", "optuna.importance", "API Reference", "optuna.integration", "optuna.logging", "optuna", "optuna.pruners", "optuna.samplers.BaseSampler", "optuna.samplers.BruteForceSampler", "optuna.samplers.CmaEsSampler", "optuna.samplers.GridSampler", "optuna.samplers.IntersectionSearchSpace", "optuna.samplers.MOTPESampler", "optuna.samplers.NSGAIISampler", "optuna.samplers.PartialFixedSampler", "optuna.samplers.QMCSampler", "optuna.samplers.RandomSampler", "optuna.samplers.TPESampler", "optuna.samplers.intersection_search_space", "optuna.samplers.nsgaii.BLXAlphaCrossover", "optuna.samplers.nsgaii.BaseCrossover", "optuna.samplers.nsgaii.SBXCrossover", "optuna.samplers.nsgaii.SPXCrossover", "optuna.samplers.nsgaii.UNDXCrossover", "optuna.samplers.nsgaii.UniformCrossover", "optuna.samplers.nsgaii.VSBXCrossover", "optuna.samplers", "optuna.samplers.nsgaii", "optuna.storages", "optuna.study", "optuna.trial", "optuna.visualization.is_available", "optuna.visualization.matplotlib.is_available", "optuna.visualization.matplotlib.plot_contour", "optuna.visualization.matplotlib.plot_edf", "optuna.visualization.matplotlib.plot_intermediate_values", "optuna.visualization.matplotlib.plot_optimization_history", "optuna.visualization.matplotlib.plot_parallel_coordinate", "optuna.visualization.matplotlib.plot_param_importances", "optuna.visualization.matplotlib.plot_pareto_front", "optuna.visualization.matplotlib.plot_slice", "optuna.visualization.plot_contour", "optuna.visualization.plot_edf", "optuna.visualization.plot_intermediate_values", "optuna.visualization.plot_optimization_history", "optuna.visualization.plot_parallel_coordinate", "optuna.visualization.plot_param_importances", "optuna.visualization.plot_pareto_front", "optuna.visualization.plot_slice", "optuna.visualization", "optuna.visualization.matplotlib", "1. Lightweight, versatile, and platform agnostic architecture", "2. Pythonic Search Space", "3. Efficient Optimization Algorithms", "4. Easy Parallelization", "5. Quick Visualization for Hyperparameter Optimization Analysis", "Key Features", "Computation times", "Saving/Resuming Study with RDB Backend", "Multi-objective Optimization with Optuna", "User Attributes", "Command-Line Interface", "User-Defined Sampler", "User-Defined Pruner", "Callback for Study.optimize", "Specify Hyperparameters Manually", "Ask-and-Tell Interface", "Re-use the best trial", "Recipes", "Computation times", "Tutorial"], "terms": {"compat": [0, 12, 20, 39, 40, 55, 89], "most": [0, 77, 105, 108, 120, 158, 164, 172], "": [0, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 33, 34, 35, 36, 39, 40, 46, 47, 48, 49, 53, 57, 63, 66, 67, 69, 70, 72, 73, 74, 75, 77, 78, 82, 89, 93, 96, 97, 98, 100, 103, 106, 108, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 128, 135, 138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 156, 158, 159, 161, 163, 164, 166, 168, 170, 171, 172, 175], "easi": [0, 1, 131, 156, 161, 162, 163, 175], "those": [0, 46, 59, 91, 138, 139, 141, 147, 149, 167, 170], "pleas": [0, 1, 5, 9, 10, 11, 28, 29, 30, 32, 34, 35, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 58, 59, 60, 66, 67, 69, 72, 73, 77, 82, 89, 93, 96, 97, 98, 99, 100, 101, 102, 103, 105, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 127, 129, 131, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 152, 154, 159, 160, 163, 166, 167, 168], "refer": [0, 10, 29, 30, 32, 34, 35, 37, 38, 39, 42, 43, 44, 45, 46, 47, 49, 50, 52, 53, 58, 59, 60, 68, 72, 77, 82, 89, 93, 97, 101, 102, 103, 106, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 127, 129, 138, 139, 140, 141, 142, 143, 144, 145, 152, 160, 163, 166, 167, 168], "exampl": [0, 5, 8, 9, 10, 11, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 88, 89, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 105, 111, 113, 114, 115, 117, 119, 120, 121, 122, 131, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 163, 164, 165, 166, 169, 170, 171, 172, 175], "There": [0, 44, 70, 74, 75], "wai": [0, 3, 84, 86, 123, 166, 167, 172], "realiz": [0, 122], "first": [0, 29, 30, 31, 45, 49, 52, 53, 63, 71, 77, 82, 90, 93, 103, 114, 120, 143, 151, 156, 167, 169, 172], "callabl": [0, 29, 30, 31, 33, 34, 37, 46, 48, 52, 59, 66, 67, 89, 93, 117, 118, 122, 138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153], "class": [0, 6, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 25, 27, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 67, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 101, 102, 103, 104, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 158, 163, 167, 168, 169, 171], "purpos": [0, 3, 168], "follow": [0, 1, 3, 8, 27, 48, 66, 67, 74, 75, 88, 89, 93, 105, 112, 113, 114, 115, 117, 118, 120, 122, 124, 127, 129, 131, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 166, 167, 171, 172], "import": [0, 1, 7, 8, 9, 10, 11, 27, 28, 46, 48, 49, 52, 53, 59, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 88, 89, 90, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 105, 107, 113, 114, 115, 117, 119, 120, 121, 122, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "def": [0, 1, 8, 9, 10, 11, 27, 28, 46, 49, 53, 59, 69, 77, 78, 79, 80, 81, 82, 83, 88, 89, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 113, 114, 115, 117, 119, 120, 121, 122, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "__init__": [0, 66, 67, 167, 168, 169], "self": [0, 48, 66, 67, 84, 86, 93, 167, 168, 169], "min_x": 0, "max_x": 0, "hold": [0, 91], "thi": [0, 3, 4, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 58, 59, 63, 64, 66, 67, 68, 71, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 92, 93, 95, 97, 101, 102, 103, 105, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 156, 158, 159, 160, 163, 164, 165, 167, 168, 169, 170, 171, 172], "implement": [0, 5, 10, 29, 30, 34, 39, 48, 49, 52, 53, 69, 76, 77, 78, 79, 80, 81, 82, 83, 93, 97, 100, 106, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 125, 131, 134, 158, 164, 169], "specif": [0, 3, 6, 7, 25, 93, 103, 108, 112, 118, 131, 144, 152, 164, 167, 170], "field": [0, 93, 102], "__call__": [0, 169], "calcul": [0, 52, 116, 117, 122, 166, 167, 171, 172], "an": [0, 1, 6, 8, 10, 11, 13, 14, 15, 17, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 69, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 97, 98, 99, 100, 101, 102, 103, 104, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 151, 152, 156, 158, 159, 163, 165, 166, 172], "extra": 0, "suggest_float": [0, 1, 8, 9, 10, 11, 13, 14, 18, 19, 27, 28, 46, 49, 53, 58, 59, 69, 77, 78, 79, 80, 81, 82, 89, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 113, 114, 115, 117, 119, 120, 121, 122, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "execut": [0, 1, 34, 38, 39, 48, 49, 53, 82, 88, 89, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 136, 137, 156, 159, 160, 162, 167, 174], "instanc": [0, 34, 38, 39, 40, 48, 49, 53, 61, 66, 67, 89, 102, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 135, 147, 163], "create_studi": [0, 1, 8, 9, 11, 27, 28, 46, 49, 53, 59, 69, 70, 71, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 88, 89, 90, 92, 93, 96, 98, 99, 100, 102, 103, 113, 114, 115, 117, 119, 120, 121, 122, 134, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "100": [0, 1, 8, 27, 77, 78, 79, 80, 81, 82, 83, 89, 101, 103, 115, 131, 138, 141, 142, 143, 145, 146, 149, 150, 151, 153, 156, 157, 158, 159, 160, 166, 167, 168, 170, 171], "n_trial": [0, 1, 8, 9, 10, 11, 27, 28, 37, 46, 48, 49, 53, 59, 63, 69, 70, 71, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 89, 92, 93, 95, 96, 97, 98, 99, 100, 102, 103, 114, 115, 117, 119, 120, 121, 122, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "second": [0, 29, 48, 63, 66, 67, 71, 89, 93, 103, 120, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 171, 172], "you": [0, 1, 2, 4, 10, 29, 32, 33, 34, 35, 37, 38, 40, 42, 43, 44, 45, 47, 50, 51, 55, 56, 57, 58, 59, 60, 66, 67, 71, 77, 87, 88, 89, 92, 93, 97, 111, 114, 119, 123, 131, 139, 141, 147, 149, 156, 157, 158, 159, 160, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175], "lambda": [0, 29, 30, 31, 52, 139, 143, 147, 151, 160, 164], "functool": 0, "partial": [0, 119, 158, 172], "creat": [0, 1, 9, 10, 34, 40, 46, 48, 58, 59, 66, 67, 71, 73, 74, 84, 86, 88, 89, 93, 96, 97, 105, 117, 118, 120, 122, 124, 125, 134, 154, 156, 158, 163, 166, 167, 169, 170, 171], "closur": 0, "below": [0, 1, 66, 67, 133, 158, 159, 168, 175], "take": [0, 28, 29, 34, 39, 49, 53, 76, 77, 78, 79, 80, 81, 82, 83, 99, 106, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 126, 130, 144, 152, 154, 157, 168, 169, 170, 171], "three": [0, 34, 62, 65, 112, 128, 144, 152, 167, 171], "abov": [0, 3, 112, 120, 156, 159, 166, 167, 169, 171, 172], "wrap": [0, 40, 80, 167], "also": [0, 2, 9, 10, 11, 28, 29, 30, 32, 33, 48, 52, 69, 93, 95, 96, 97, 98, 99, 100, 114, 121, 122, 157, 158, 159, 160, 163, 165, 170], "sklearn_addtitional_arg": 0, "py": [0, 82, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174], "reus": 0, "dataset": [0, 1, 8, 27, 35, 48, 66, 67, 77, 78, 79, 80, 81, 82, 103, 158, 160, 164, 165, 168, 170, 171, 172], "instead": [0, 6, 10, 13, 16, 17, 18, 19, 34, 44, 45, 49, 58, 66, 67, 68, 76, 77, 78, 79, 80, 81, 82, 83, 86, 89, 93, 97, 101, 102, 103, 114, 115, 117, 122, 134, 144, 152, 160, 163, 166, 171], "load": [0, 33, 69, 87, 93, 100, 134, 163], "each": [0, 30, 34, 35, 39, 46, 48, 49, 52, 53, 59, 63, 66, 67, 69, 77, 82, 89, 93, 100, 101, 102, 108, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 156, 158, 159, 164, 167, 171, 172], "ye": [0, 158], "possibl": [0, 3, 48, 77, 82, 102, 120, 122, 123, 170], "In": [0, 1, 10, 14, 15, 29, 32, 34, 39, 46, 49, 51, 53, 59, 77, 84, 86, 88, 97, 101, 105, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 129, 136, 137, 154, 156, 157, 163, 166, 167, 168, 170, 171, 172], "simplest": 0, "form": [0, 3, 48, 93, 117, 122, 158], "work": [0, 4, 9, 29, 48, 87, 89, 93, 96, 131, 159, 169, 170, 172], "storag": [0, 1, 9, 10, 11, 12, 20, 24, 26, 28, 33, 40, 51, 69, 93, 96, 97, 98, 99, 100, 102, 107, 122, 159, 163, 165, 166], "If": [0, 9, 10, 13, 14, 15, 17, 20, 29, 30, 31, 32, 34, 35, 40, 45, 46, 47, 48, 49, 52, 53, 59, 63, 66, 67, 69, 77, 78, 80, 81, 82, 83, 85, 87, 88, 89, 90, 92, 93, 96, 97, 100, 103, 114, 116, 118, 120, 122, 123, 126, 127, 128, 130, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 158, 159, 164, 167, 171, 175], "want": [0, 10, 33, 35, 37, 38, 42, 43, 44, 45, 47, 50, 51, 55, 57, 58, 59, 60, 66, 67, 89, 92, 97, 111, 123, 131, 139, 141, 147, 149, 158, 159, 164, 171, 172, 175], "handi": 0, "sqlite": [0, 9, 11, 28, 40, 69, 89, 90, 96, 98, 99, 100, 159, 160, 163, 165, 166], "local": [0, 40, 114, 163], "study_nam": [0, 9, 10, 11, 28, 40, 46, 69, 88, 89, 93, 95, 96, 97, 98, 99, 100, 139, 147, 159, 163, 166], "foo_studi": 0, "db": [0, 9, 11, 26, 28, 40, 69, 87, 89, 96, 98, 99, 100, 160, 163, 165, 166], "The": [0, 1, 3, 5, 6, 7, 9, 10, 13, 16, 17, 18, 19, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 42, 44, 45, 46, 48, 49, 51, 52, 53, 54, 56, 58, 59, 62, 63, 64, 65, 66, 67, 71, 74, 77, 80, 82, 84, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 163, 166, 167, 168, 169, 171], "state": [0, 1, 34, 39, 40, 48, 49, 53, 88, 89, 91, 92, 93, 102, 103, 104, 105, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 135, 156, 158, 163, 166, 167, 168, 169, 171], "persist": [0, 10, 85, 97, 102, 160, 163], "file": [0, 32, 57, 61, 71, 73, 84, 85, 86, 93, 162, 163, 166, 174], "see": [0, 1, 5, 9, 10, 11, 13, 16, 17, 18, 19, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 67, 68, 69, 77, 80, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 130, 131, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 152, 156, 157, 158, 159, 160, 163, 167, 169, 170], "backend": [0, 10, 26, 49, 53, 58, 85, 87, 88, 89, 97, 114, 133, 154, 155, 160, 166, 173, 174, 175], "more": [0, 4, 29, 31, 32, 40, 46, 48, 59, 77, 88, 89, 93, 103, 112, 117, 118, 121, 122, 131, 157, 158, 160, 168, 171, 172], "detail": [0, 5, 9, 10, 11, 28, 34, 35, 36, 37, 38, 42, 43, 44, 45, 46, 47, 49, 50, 58, 59, 60, 66, 69, 77, 82, 89, 93, 96, 97, 98, 99, 100, 101, 102, 103, 114, 117, 120, 121, 122, 131, 158, 160, 166, 167], "depend": [0, 28, 29, 51, 54, 93, 99, 101, 131, 136, 137, 156, 157, 166], "default": [0, 10, 31, 40, 44, 45, 46, 47, 48, 49, 53, 59, 62, 63, 65, 66, 67, 69, 70, 71, 72, 73, 74, 77, 82, 88, 89, 90, 92, 93, 97, 100, 101, 106, 114, 117, 118, 120, 122, 126, 127, 128, 130, 133, 138, 142, 143, 144, 145, 146, 150, 151, 152, 153, 154, 158, 170], "databas": [0, 9, 10, 11, 28, 40, 69, 88, 96, 97, 98, 99, 100, 133, 159], "like": [0, 29, 30, 32, 38, 47, 52, 59, 103, 131, 159, 163, 166, 172], "usual": [0, 63, 156], "python": [0, 1, 2, 29, 30, 33, 40, 48, 52, 93, 103, 109, 131, 154, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175], "pickl": [0, 163], "joblib": 0, "For": [0, 5, 29, 30, 31, 32, 34, 35, 47, 48, 51, 52, 59, 77, 89, 102, 103, 108, 113, 114, 117, 118, 120, 122, 124, 127, 129, 131, 143, 147, 151, 157, 158, 159, 160, 163, 164, 167, 168, 171, 172], "dump": [0, 163, 165], "pkl": [0, 66, 67, 163], "And": [0, 53], "print": [0, 32, 74, 156, 158, 163, 164, 166, 167, 168, 172], "until": [0, 48, 49, 53, 77, 78, 80, 81, 82, 83, 92, 93, 114, 115, 117, 122], "now": [0, 44, 102, 166], "best_trial": [0, 93, 95, 102, 103, 156, 163, 164, 167], "param": [0, 29, 30, 31, 48, 52, 66, 67, 93, 101, 102, 103, 105, 118, 138, 142, 143, 145, 146, 150, 151, 153, 154, 156, 158, 160, 163, 164, 166, 167, 170, 171], "kei": [0, 29, 30, 31, 32, 40, 46, 48, 52, 58, 87, 88, 89, 93, 101, 102, 103, 115, 116, 123, 164, 165], "item": [0, 90, 164, 167], "f": [0, 71, 73, 93, 117, 140, 148, 158, 164, 168], "note": [0, 20, 45, 46, 49, 53, 61, 66, 67, 71, 76, 77, 78, 79, 80, 81, 82, 83, 88, 89, 93, 102, 103, 105, 113, 114, 115, 116, 120, 131, 138, 139, 142, 146, 147, 150, 153, 158, 163, 165, 168, 171], "doe": [0, 31, 48, 66, 67, 82, 93, 101, 102, 103, 114, 115, 144, 152, 158, 169, 172], "support": [0, 2, 33, 35, 48, 58, 77, 84, 103, 108, 114, 117, 131, 136, 137, 167, 170, 171], "reload": 0, "across": [0, 40, 93, 108, 159], "differ": [0, 34, 39, 48, 49, 53, 77, 102, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 131, 138, 144, 152, 156, 158, 171], "version": [0, 2, 31, 32, 33, 34, 35, 39, 40, 46, 48, 49, 51, 52, 53, 54, 56, 58, 59, 62, 63, 64, 65, 80, 82, 87, 88, 89, 90, 91, 103, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 130, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 152], "To": [0, 4, 31, 34, 39, 49, 53, 59, 66, 67, 68, 90, 93, 103, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 156, 158, 159, 163, 167, 171], "upgrad": [0, 44, 89, 166], "schema": [0, 89, 166], "necessari": [0, 29, 59, 157], "By": [0, 29, 31, 44, 45, 48, 49, 66, 67, 89, 114, 156, 158, 160], "show": [0, 66, 67, 73, 77, 93, 131, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 158, 163, 164, 166, 167, 169, 170, 171, 172], "info": [0, 35, 71, 73, 74, 75, 109], "level": [0, 48, 66, 67, 74, 75, 105, 108, 109], "chang": [0, 1, 13, 16, 17, 18, 19, 31, 32, 33, 34, 35, 36, 39, 40, 42, 44, 46, 48, 49, 52, 53, 56, 58, 59, 62, 63, 64, 65, 66, 67, 77, 80, 82, 87, 88, 90, 91, 93, 95, 101, 102, 103, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 130, 137, 138, 139, 140, 141, 142, 143, 144, 145, 152, 158], "set_verbos": [0, 66, 67, 109], "stop": [0, 10, 35, 69, 70, 71, 73, 77, 78, 80, 82, 92, 93, 97, 100, 115, 158, 168], "warn": [0, 49, 53, 66, 74, 75, 103, 109, 114, 120, 122], "2020": [0, 70, 158, 159], "07": [0, 159, 162, 174], "21": [0, 156, 159, 164, 170], "13": [0, 120, 156, 158, 159, 170], "41": [0, 156, 170], "45": [0, 156, 159, 168, 170], "627": 0, "0": [0, 1, 8, 10, 13, 14, 16, 17, 18, 19, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 42, 43, 44, 46, 48, 49, 51, 52, 53, 54, 56, 58, 59, 62, 63, 64, 65, 66, 67, 69, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 87, 88, 90, 91, 93, 95, 97, 99, 100, 101, 102, 103, 105, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174], "finish": [0, 9, 34, 39, 40, 49, 53, 59, 70, 74, 75, 78, 81, 88, 89, 93, 96, 102, 104, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 131, 158, 159, 163, 164, 166, 169, 170, 171], "disabl": [0, 66, 67, 70, 71, 73, 78, 80, 81, 83, 93], "further": [0, 9, 10, 11, 20, 28, 35, 37, 38, 42, 43, 44, 45, 47, 49, 50, 58, 60, 69, 96, 97, 98, 99, 100, 114, 117, 118, 120, 122, 124, 127, 129, 167], "hyperparamet": [0, 6, 29, 30, 31, 32, 48, 52, 59, 61, 66, 67, 68, 77, 93, 103, 106, 114, 120, 122, 143, 151, 154, 156, 157, 158, 161, 162, 164, 168, 171, 172, 173, 174, 175], "its": [0, 3, 13, 31, 34, 38, 39, 49, 53, 77, 106, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 168], "correspond": [0, 10, 32, 33, 35, 38, 40, 42, 43, 44, 45, 47, 48, 50, 51, 54, 55, 57, 60, 63, 77, 88, 89, 93, 97, 108, 115, 156, 167], "discard": 0, "intermedi": [0, 40, 45, 77, 78, 80, 81, 82, 83, 88, 89, 102, 103, 105, 108, 111, 140, 148, 158, 168], "neural": [0, 37, 40, 58, 77, 88, 89, 102, 103], "network": [0, 37, 40, 58, 77, 87, 88, 89, 102, 103, 147], "weight": [0, 32, 59, 117, 122], "featur": [0, 13, 16, 17, 18, 19, 30, 31, 32, 33, 34, 35, 36, 39, 40, 42, 44, 46, 48, 49, 52, 53, 56, 58, 59, 62, 63, 64, 65, 66, 67, 68, 78, 80, 81, 87, 88, 90, 91, 93, 95, 101, 102, 103, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 130, 131, 137, 138, 139, 140, 141, 142, 143, 144, 145, 152, 157, 158, 160, 163, 164, 165, 167, 168], "we": [0, 1, 2, 4, 29, 77, 78, 82, 89, 103, 120, 131, 156, 157, 158, 159, 163, 164, 165, 166, 168, 169, 170, 172, 175], "recommend": [0, 2, 12, 29, 48, 77, 89, 93, 103, 113, 114, 115, 117, 120, 122, 131, 134, 157, 158, 159, 175], "number": [0, 28, 29, 30, 31, 33, 34, 39, 40, 46, 48, 49, 52, 53, 56, 59, 60, 62, 63, 65, 66, 67, 77, 78, 81, 82, 83, 85, 87, 88, 89, 90, 92, 93, 95, 99, 101, 102, 103, 108, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 125, 131, 156, 158, 159, 163, 164, 166, 168, 169, 170, 171], "order": [0, 29, 31, 46, 48, 59, 66, 67, 73, 89, 90, 93, 113, 115, 144, 152], "identifi": [0, 40, 69, 82, 90, 100, 163], "svm": [0, 1, 48, 103, 157, 165], "svc_c": [0, 157, 165], "1e": [0, 1, 48, 93, 103, 140, 148, 157, 158, 164, 165, 170, 171, 172], "10": [0, 1, 9, 10, 11, 28, 34, 46, 48, 53, 59, 69, 70, 71, 73, 74, 75, 77, 78, 81, 83, 89, 92, 93, 96, 97, 98, 99, 100, 105, 117, 119, 121, 122, 131, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 153, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 169, 170, 171, 172], "1e10": [0, 1, 48, 157, 165], "true": [0, 1, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 27, 28, 31, 32, 33, 39, 40, 46, 48, 49, 53, 59, 66, 67, 77, 78, 79, 80, 81, 82, 84, 86, 87, 88, 89, 93, 99, 103, 114, 116, 117, 118, 120, 122, 123, 136, 137, 140, 144, 148, 152, 157, 158, 160, 163, 164, 165, 168, 170, 171, 172], "clf": [0, 8, 27, 48, 77, 78, 79, 80, 81, 82, 103, 158, 165, 168, 171, 172], "sklearn": [0, 1, 8, 27, 29, 30, 48, 52, 77, 78, 79, 80, 81, 82, 103, 157, 158, 160, 165, 168, 170, 171, 172], "svc": [0, 48, 103, 157, 165], "c": [0, 1, 2, 3, 48, 93, 113, 157, 165, 171, 172], "fit": [0, 1, 3, 29, 30, 42, 43, 48, 52, 103, 122, 171, 172], "x_train": [0, 1, 8, 27, 77, 78, 79, 80, 81, 82, 103, 168, 171, 172], "y_train": [0, 1, 8, 27, 77, 78, 79, 80, 81, 82, 103, 168, 171, 172], "open": [0, 71, 73, 84, 163], "format": [0, 21, 22, 51, 54, 106, 156, 157, 158, 163, 164, 166], "wb": [0, 163], "fout": [0, 163], "accuracy_scor": [0, 160, 170, 172], "y_valid": [0, 8, 27, 77, 78, 79, 80, 81, 82, 103, 168, 171], "predict": [0, 1, 29, 30, 48, 52, 160, 170, 172], "x_valid": [0, 8, 27, 77, 78, 79, 80, 81, 82, 103, 168, 171], "rb": [0, 163], "fin": 0, "best_clf": 0, "paramet": [0, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 158, 159, 160, 163, 164, 166, 167, 169, 170], "specifi": [0, 10, 24, 28, 29, 30, 31, 32, 34, 38, 39, 40, 45, 48, 49, 52, 53, 66, 67, 69, 77, 81, 82, 88, 89, 90, 93, 97, 99, 100, 102, 103, 105, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 126, 127, 128, 130, 138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 158, 163, 164, 166, 169, 173, 174, 175], "fix": [0, 77, 93, 101, 103, 113, 114, 115, 119, 158], "random": [0, 29, 30, 34, 39, 40, 48, 49, 52, 53, 66, 67, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 158, 160, 167], "seed": [0, 29, 30, 34, 39, 48, 49, 52, 53, 66, 67, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 153, 160, 163], "via": [0, 2, 31, 35, 46, 49, 53, 103, 114, 120, 163, 165, 166], "sampler": [0, 1, 10, 12, 13, 14, 15, 16, 17, 18, 19, 29, 34, 39, 49, 53, 69, 77, 93, 97, 100, 107, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 153, 160, 163, 166, 171, 173, 174, 175], "tpesampl": [0, 10, 49, 53, 66, 67, 69, 77, 93, 97, 100, 114, 117, 120, 131, 138, 140, 141, 142, 145, 146, 148, 149, 150, 153, 158, 160, 166], "behav": [0, 172], "determinist": [0, 29, 66, 67], "prune": [0, 1, 7, 8, 27, 33, 35, 36, 38, 42, 43, 44, 45, 47, 48, 50, 51, 53, 54, 55, 57, 60, 76, 77, 78, 79, 80, 81, 82, 83, 93, 102, 103, 104, 108, 110, 111, 114, 116, 118, 122, 123, 131, 160, 170, 171, 172], "hyperbandprun": [0, 114, 158, 171], "hash": 0, "howev": [0, 3, 34, 48, 114, 117, 156, 158, 166], "caveat": 0, "mode": [0, 59, 71, 73], "inher": 0, "non": [0, 10, 31, 80, 85, 87, 97, 115, 144, 152, 158], "determin": [0, 34, 49, 53, 77, 82, 83, 93, 101, 103, 111, 112, 114, 116, 120, 123, 144, 152, 167, 168], "thu": [0, 34, 39, 49, 51, 53, 54, 77, 93, 103, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 171], "veri": 0, "difficult": 0, "same": [0, 10, 20, 33, 34, 37, 39, 40, 46, 49, 53, 58, 59, 67, 78, 81, 82, 88, 89, 93, 97, 101, 102, 103, 105, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 144, 152, 159, 167, 168, 170, 172], "condit": [0, 1, 3, 31, 34, 84, 86, 90, 118, 131, 157, 158], "sequenti": [0, 40, 88, 89, 157, 164], "would": [0, 33, 89, 138, 156, 158], "e": [0, 1, 33, 34, 35, 38, 39, 40, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 54, 55, 57, 59, 60, 66, 67, 68, 74, 75, 77, 81, 82, 88, 89, 93, 102, 103, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 127, 139, 147, 158, 159, 160, 163, 167, 168], "even": [0, 3, 9, 90, 93, 96, 166, 168], "were": [0, 158], "cannot": [0, 35, 66, 67, 103, 113, 114, 115, 120, 144, 152, 154, 166, 167], "deal": 0, "problem": [0, 48, 88, 102, 105, 114, 117, 122, 164, 172], "set": [0, 1, 10, 32, 33, 34, 35, 40, 46, 48, 49, 53, 58, 59, 63, 66, 67, 75, 77, 88, 89, 90, 92, 93, 94, 95, 97, 102, 103, 109, 113, 114, 115, 120, 122, 135, 156, 158, 163, 164, 165, 166, 168, 169, 170], "option": [0, 9, 10, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 45, 46, 48, 49, 52, 53, 58, 59, 62, 63, 64, 65, 66, 67, 69, 80, 83, 84, 85, 87, 88, 89, 90, 92, 93, 95, 96, 97, 100, 102, 103, 105, 106, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 126, 127, 128, 130, 131, 138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 157, 166, 168], "g": [0, 1, 33, 35, 38, 40, 42, 43, 44, 45, 46, 47, 50, 51, 54, 55, 57, 59, 60, 66, 67, 68, 74, 75, 77, 81, 82, 88, 89, 102, 103, 112, 115, 122, 163, 167], "behavior": [0, 10, 29, 77, 93, 97, 118, 122, 167], "target": [0, 29, 30, 31, 34, 35, 39, 45, 48, 49, 52, 53, 76, 77, 78, 79, 80, 81, 82, 83, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 158, 160, 164, 165, 168, 170], "provid": [0, 3, 5, 6, 10, 37, 40, 46, 47, 48, 49, 53, 58, 59, 76, 77, 78, 79, 80, 81, 82, 83, 87, 88, 89, 93, 97, 103, 106, 114, 120, 123, 133, 135, 154, 156, 157, 158, 160, 163, 165, 166, 167, 170, 171, 172], "rais": [0, 7, 8, 9, 10, 23, 24, 26, 27, 31, 35, 40, 46, 48, 66, 67, 77, 78, 79, 80, 81, 82, 83, 88, 89, 93, 96, 97, 103, 108, 110, 116, 140, 148, 158, 167, 168, 169], "catch": [0, 37, 93], "treat": 0, "failur": [0, 89, 90, 91, 103], "statu": [0, 32, 102], "all": [0, 3, 12, 14, 15, 28, 29, 30, 31, 34, 40, 44, 46, 48, 52, 58, 59, 73, 77, 78, 81, 82, 85, 87, 88, 89, 92, 93, 99, 101, 103, 113, 115, 118, 120, 122, 131, 138, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 156, 158, 159, 163, 168, 169, 171, 175], "trialprun": [0, 7, 35, 77, 78, 79, 80, 81, 82, 83, 93, 103, 104, 108, 110, 140, 148, 158, 168, 169], "propag": [0, 71, 73], "caller": [0, 167], "other": [0, 3, 16, 29, 30, 33, 35, 52, 53, 58, 89, 90, 93, 110, 113, 114, 118, 131, 133, 163, 167, 168, 171, 172], "word": 0, "abort": 0, "It": [0, 1, 8, 9, 12, 20, 27, 28, 29, 34, 40, 48, 66, 67, 68, 88, 89, 93, 96, 99, 102, 114, 118, 122, 144, 152, 159, 166, 168, 170], "might": [0, 93, 173, 175], "desir": [0, 10, 97, 170], "continu": [0, 16, 34, 35, 48, 92, 93, 103, 124, 125, 126, 127, 128, 129, 130, 156, 158], "remain": [0, 111, 122, 131], "so": [0, 48, 49, 53, 56, 69, 77, 88, 100, 112, 114, 116, 120, 123, 135, 156, 157, 164, 166, 169, 170, 171, 172], "type": [0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 46, 48, 49, 52, 53, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 167], "caught": 0, "insid": [0, 59, 82, 93, 105, 156, 165, 167], "find": [0, 1, 4, 40, 66, 103, 130, 156, 170], "w": [0, 59, 71, 73], "2018": 0, "12": [0, 156, 158, 163, 168, 170], "16": [0, 75, 140, 148, 156, 158, 170], "38": [0, 156, 170], "36": [0, 156, 168, 170], "889": 0, "trialstat": [0, 34, 39, 40, 49, 53, 88, 89, 90, 92, 93, 102, 105, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 156, 163, 166, 168, 169, 171], "becaus": [0, 35, 49, 53, 77, 88, 159, 167, 172], "valueerror": [0, 40, 66, 67, 88, 89, 116], "A": [0, 3, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 42, 43, 44, 45, 47, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 63, 66, 67, 69, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 87, 88, 89, 90, 93, 95, 97, 100, 101, 102, 103, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 158, 159, 163, 165, 167, 169, 170], "sampl": [0, 1, 34, 39, 40, 48, 49, 53, 66, 67, 88, 89, 93, 102, 103, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 127, 131, 157, 167, 170, 171], "check": [0, 20, 33, 40, 44, 45, 69, 71, 78, 80, 81, 83, 88, 89, 91, 100, 102, 103, 131, 156, 159, 160, 164, 168], "trials_datafram": [0, 48, 93, 163], "system_attr": [0, 58, 93, 95, 102, 103, 105, 156, 163], "complet": [0, 29, 30, 31, 40, 52, 77, 78, 81, 82, 88, 89, 92, 93, 102, 104, 105, 106, 116, 122, 123, 131, 139, 143, 144, 147, 151, 152, 156, 158, 163, 166, 167, 168, 170], "1269": 0, "float": [0, 12, 13, 14, 15, 16, 17, 18, 19, 29, 30, 31, 32, 34, 37, 39, 40, 48, 49, 52, 53, 58, 66, 67, 80, 81, 83, 88, 89, 93, 101, 102, 103, 105, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 131, 138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 157, 168], "shown": [0, 8, 27, 72, 144, 152, 166], "59": [0, 75, 156, 164, 170, 174], "000": [0, 159, 162], "sinc": [0, 46, 56, 63, 66, 67, 102, 113, 115], "call": [0, 20, 29, 30, 32, 34, 35, 39, 40, 45, 48, 49, 52, 53, 58, 59, 61, 71, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 89, 90, 93, 103, 108, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 156, 158, 163, 167, 168, 169, 171], "api": [0, 1, 44, 46, 59, 60, 68, 88, 105, 108, 120, 156, 167, 170, 171], "suggest_int": [0, 1, 6, 15, 16, 17, 49, 53, 103, 113, 114, 115, 119, 120, 122, 143, 151, 157, 160, 164, 170], "rang": [0, 8, 12, 13, 14, 15, 16, 17, 18, 19, 27, 29, 49, 77, 78, 79, 80, 81, 82, 93, 103, 113, 114, 116, 117, 123, 140, 148, 156, 157, 158, 164, 168, 171], "individu": [0, 80, 118, 124, 125, 126, 127, 128, 129, 130, 160], "discuss": [0, 1], "about": [0, 4, 77, 82, 103, 114, 117, 118, 120, 122, 124, 127, 129, 166, 168], "tpe": [0, 34, 39, 49, 53, 93, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 158], "http": [0, 2, 4, 13, 16, 17, 18, 19, 29, 31, 32, 33, 34, 35, 36, 39, 40, 42, 44, 46, 48, 49, 52, 53, 56, 58, 59, 62, 63, 64, 65, 80, 87, 88, 90, 91, 93, 95, 101, 102, 103, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 130, 137, 138, 139, 140, 141, 142, 143, 144, 145, 152, 159, 164], "github": [0, 1, 2, 13, 16, 17, 18, 19, 29, 31, 32, 33, 34, 35, 36, 39, 40, 42, 44, 46, 48, 49, 52, 53, 56, 58, 59, 62, 63, 64, 65, 80, 87, 88, 90, 91, 93, 95, 101, 102, 103, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 130, 137, 138, 139, 140, 141, 142, 143, 144, 145, 152, 160], "com": [0, 2, 4, 13, 16, 17, 18, 19, 31, 32, 33, 34, 35, 36, 39, 40, 42, 44, 46, 48, 49, 52, 53, 56, 58, 59, 62, 63, 64, 65, 80, 87, 88, 90, 91, 93, 95, 101, 102, 103, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 130, 137, 138, 139, 140, 141, 142, 143, 144, 145, 152, 164], "issu": [0, 1, 34, 35, 39, 49, 53, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 159], "822": 0, "cuda": [0, 34, 164], "acceler": [0, 1, 29], "script": [0, 33, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "main": [0, 38, 171], "easiest": 0, "cuda_visible_devic": 0, "environ": [0, 32, 33, 61, 66, 67, 84, 86, 88, 89, 90, 136, 137, 163], "On": [0, 33, 53, 84, 86, 114, 122], "termin": [0, 48, 93, 122, 158, 159, 168], "export": [0, 93], "anoth": [0, 9, 80, 93, 96, 122, 131, 159, 172], "program": 0, "guid": [0, 1, 32, 33, 106, 154], "mai": [0, 3, 16, 28, 31, 32, 33, 34, 35, 39, 40, 44, 46, 48, 49, 52, 53, 56, 58, 59, 62, 63, 64, 65, 66, 67, 77, 80, 82, 87, 88, 90, 91, 92, 93, 99, 103, 109, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 130, 131, 137, 138, 139, 140, 141, 142, 143, 144, 145, 152, 159, 168, 172], "prefer": 0, "ones": 0, "case": [0, 5, 10, 14, 15, 34, 39, 46, 48, 49, 53, 59, 77, 88, 89, 93, 97, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 136, 137, 147, 154, 170, 171, 172], "fixedtri": 0, "base": [0, 1, 7, 25, 29, 30, 31, 34, 46, 48, 52, 59, 62, 63, 64, 65, 76, 77, 78, 79, 80, 81, 82, 83, 93, 102, 103, 106, 111, 112, 121, 122, 125, 131, 138, 143, 151, 158, 159, 167], "given": [0, 21, 29, 30, 31, 34, 39, 40, 48, 49, 52, 53, 59, 66, 67, 77, 78, 81, 83, 88, 89, 93, 101, 103, 106, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 144, 152, 159], "dictionari": [0, 31, 32, 33, 34, 39, 40, 48, 49, 51, 53, 54, 66, 67, 88, 89, 93, 95, 101, 102, 103, 105, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 156, 168], "input": [0, 34, 48, 61, 106, 164], "arbitrari": 0, "y": [0, 1, 8, 27, 48, 49, 53, 77, 78, 79, 80, 81, 82, 83, 93, 101, 103, 105, 114, 115, 118, 119, 120, 122, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 165, 167, 171, 172], "5": [0, 35, 48, 51, 67, 74, 78, 81, 83, 93, 103, 105, 113, 115, 118, 121, 124, 128, 129, 139, 140, 143, 144, 147, 148, 151, 152, 154, 156, 157, 158, 161, 162, 163, 164, 167, 168, 169, 170, 175], "4": [0, 32, 34, 39, 42, 44, 46, 49, 53, 62, 63, 65, 77, 82, 93, 103, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 131, 136, 139, 140, 143, 144, 147, 148, 151, 152, 156, 157, 158, 160, 161, 162, 163, 164, 167, 168, 169, 170, 175], "write": [0, 87, 88, 133, 159, 166], "unit": [0, 38], "pytest": 0, "test_object": 0, "assert": [0, 28, 69, 71, 73, 79, 93, 99, 100, 101, 102, 103, 105], "footprint": 0, "increas": [0, 28, 44, 53, 93, 99, 113, 114, 115, 157], "try": [0, 77, 93, 113, 163, 170, 171], "period": [0, 89, 93, 158], "garbag": [0, 89, 93], "collector": [0, 89], "gc_after_tri": [0, 93], "gc": [0, 93], "collect": [0, 4, 29, 30, 31, 52, 77, 93, 116, 123, 131], "callback": [0, 33, 35, 36, 42, 43, 44, 45, 46, 47, 48, 51, 54, 55, 56, 59, 60, 66, 67, 89, 90, 91, 92, 93, 108, 158, 160, 170, 173, 174, 175], "less": [0, 13, 14, 15, 16, 17, 18, 19, 62, 78, 81, 83, 102, 103], "ident": [0, 63, 90], "trade": [0, 48, 77], "off": [0, 48, 77, 89, 103, 158], "could": [0, 111, 131, 168], "neglig": [0, 3], "fast": [0, 29, 118], "otherwis": [0, 3, 10, 12, 13, 14, 15, 16, 17, 18, 19, 34, 35, 48, 66, 67, 82, 87, 89, 93, 97, 103, 120, 136, 137, 168], "therefor": [0, 89, 102, 113, 115], "fals": [0, 10, 12, 13, 14, 15, 16, 17, 18, 19, 32, 35, 40, 46, 48, 53, 59, 66, 67, 79, 87, 88, 89, 90, 93, 97, 102, 103, 114, 116, 120, 122, 123, 136, 137, 141, 149, 156, 163, 164, 166, 167, 168, 171, 172], "similar": [0, 114, 122, 127, 172], "fact": 0, "includ": [0, 1, 3, 13, 14, 15, 16, 17, 18, 19, 28, 32, 34, 39, 40, 48, 49, 53, 60, 63, 88, 89, 90, 93, 99, 103, 108, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 131, 139, 144, 147, 152, 157, 168], "chainermnstudi": 0, "current": [0, 8, 13, 16, 17, 18, 19, 27, 32, 33, 35, 36, 38, 39, 40, 42, 43, 44, 45, 47, 50, 51, 54, 55, 57, 58, 60, 66, 67, 74, 77, 78, 81, 88, 89, 93, 95, 101, 102, 103, 108, 110, 114, 117, 144, 152, 167, 172], "nor": [0, 3, 34, 102, 144, 152], "here": [0, 118, 144, 152, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "replac": [0, 13, 14, 15, 17, 68, 93, 139, 160], "pass": [0, 10, 12, 13, 14, 15, 16, 17, 18, 19, 32, 34, 39, 46, 48, 49, 53, 59, 66, 67, 68, 89, 93, 97, 102, 103, 105, 106, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 135, 139, 141, 147, 149, 154, 156, 163, 167, 170, 171, 172], "turn": [0, 89, 158], "logging_callback": 0, "frozen_tri": 0, "previous_best_valu": 0, "user_attr": [0, 46, 93, 95, 102, 103, 105, 156, 163, 165], "get": [0, 9, 28, 29, 30, 31, 48, 52, 74, 89, 90, 93, 96, 99, 103, 135, 143, 151, 156, 159, 163, 168, 170], "none": [0, 9, 10, 11, 12, 14, 15, 20, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 46, 48, 49, 52, 53, 58, 59, 61, 63, 66, 67, 69, 70, 71, 72, 73, 75, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 103, 105, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 126, 127, 128, 130, 138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 156, 163, 167, 168, 169], "best_valu": [0, 93, 102, 156, 163, 166], "set_user_attr": [0, 48, 93, 95, 102, 103, 165], "incorrect": 0, "n_job": [0, 34, 37, 39, 48, 49, 53, 59, 93, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122], "due": [0, 87, 90, 103, 104, 114, 168], "read": [0, 40, 71, 85, 87, 88, 89, 133], "prone": 0, "race": [0, 84, 86], "n": [0, 44, 45, 53, 71, 73, 77, 114, 120, 125, 126, 130, 131, 166], "p": [0, 131, 164], "satisfi": [0, 122], "le": [0, 103], "k": [0, 13, 14, 15, 17, 103, 126, 158], "ani": [0, 1, 3, 13, 14, 18, 19, 33, 34, 35, 39, 40, 46, 48, 49, 53, 58, 59, 66, 67, 68, 77, 82, 85, 87, 88, 89, 90, 93, 95, 101, 102, 103, 104, 105, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 130, 144, 152, 165], "interpol": 0, "loss": [0, 3, 35, 38, 42, 43, 50, 57, 67, 68, 156, 168], "These": 0, "flat": 0, "numpi": [0, 8, 27, 48, 77, 78, 79, 80, 81, 82, 103, 124, 125, 126, 127, 128, 129, 130, 160, 167, 168, 170, 171], "np": [0, 8, 27, 77, 78, 79, 80, 81, 82, 103, 160, 167, 168, 170, 171], "matplotlib": [0, 154, 160], "pyplot": [0, 139, 140, 141], "plt": [0, 141], "append": [0, 85, 87, 117, 157, 164, 171], "x_": 0, "sum": [0, 31, 164], "p_": 0, "randomsampl": [0, 29, 49, 53, 77, 114, 120, 131, 139, 143, 147, 151, 158, 167], "1000": [0, 29, 48, 66, 67, 131], "ax": [0, 64, 138, 139, 140, 141, 142, 143, 144, 145], "subplot": 0, "figsiz": 0, "20": [0, 8, 27, 49, 74, 77, 78, 79, 80, 81, 82, 89, 114, 126, 130, 139, 147, 156, 158, 164, 166, 170, 171], "j": [0, 124, 130], "scatter": 0, "marker": 0, "set_xlim": 0, "set_ylim": 0, "set_xlabel": 0, "set_ylabel": 0, "savefig": [0, 141], "sampled_p": 0, "png": 0, "method": [0, 1, 12, 13, 14, 15, 16, 17, 18, 19, 20, 29, 30, 32, 33, 34, 35, 37, 39, 40, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 66, 67, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 101, 102, 103, 104, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 156, 158, 163, 165, 167, 168, 171], "justifi": 0, "appli": [0, 44, 93, 103, 118, 120], "transform": [0, 34, 48, 124, 125, 126, 127, 128, 129, 130, 164], "u": [0, 4, 136, 137, 156, 159, 166, 171], "uniform": [0, 13, 16, 17, 18, 19, 125, 129, 147, 167], "uni": 0, "interv": [0, 38, 44, 45, 57, 78, 81, 83, 89, 124], "exponenti": [0, 157], "exp": [0, 139, 147, 167], "scale": [0, 1, 14, 15, 34, 39, 49, 53, 103, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 159], "furthermor": [0, 114], "independ": [0, 34, 49, 53, 112, 114, 120, 121, 122, 167], "normal": [0, 31, 63, 114, 128], "sum_i": 0, "vector": [0, 171], "dir": [0, 164], "alpha": [0, 8, 27, 77, 78, 79, 80, 81, 82, 124, 158, 168, 171], "verifi": 0, "element": [0, 12, 40, 88, 89], "jacobian": 0, "nsgaiisampl": [0, 10, 97, 124, 125, 126, 127, 128, 129, 130, 131, 132, 144, 152, 158], "botorchsampl": [0, 62, 63, 65, 131], "benchmark": [0, 66, 77, 114, 158], "binh": 0, "korn": 0, "one": [0, 9, 10, 12, 34, 35, 40, 44, 46, 59, 63, 77, 82, 87, 88, 89, 90, 93, 96, 97, 102, 103, 109, 115, 116, 118, 120, 122, 131, 133, 159, 163, 167], "ha": [0, 1, 33, 40, 66, 67, 69, 73, 74, 75, 77, 78, 81, 83, 88, 89, 91, 94, 100, 101, 102, 104, 118, 120, 122, 131, 156, 167, 168, 170, 171], "c_0": 0, "25": [0, 81, 156, 158, 160, 170], "c_1": 0, "8": [0, 35, 80, 90, 103, 120, 122, 144, 156, 158, 159, 163, 164, 170], "7": [0, 2, 35, 36, 103, 156, 158, 160, 163, 164, 166, 168, 169, 170, 171, 172], "solut": [0, 48, 126, 130, 133], "15": [0, 156, 158, 170], "30": [0, 78, 81, 93, 138, 146, 156, 164, 170, 171], "consid": [0, 31, 34, 53, 77, 82, 112, 114, 115, 118, 122, 123, 139, 144, 147, 152, 159, 167, 168, 171, 172], "feasibl": [0, 34, 118, 122, 144, 152], "than": [0, 13, 14, 15, 16, 17, 18, 19, 29, 34, 40, 51, 53, 63, 64, 65, 77, 78, 81, 83, 85, 87, 88, 89, 93, 102, 103, 105, 118, 120, 122, 133, 144, 152, 168, 171], "equal": [0, 13, 14, 15, 16, 17, 18, 19, 34, 51, 85, 87, 103, 118, 122, 129, 144, 152], "zero": [0, 78, 81, 102, 103], "region": [0, 130], "basic": [0, 95, 110, 135, 158], "intersect": [0, 116, 122, 123], "circl": 0, "center": 0, "complement": 0, "c0": 0, "c1": 0, "store": [0, 28, 34, 39, 40, 49, 53, 56, 59, 66, 67, 88, 89, 99, 102, 103, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 163, 166, 171], "user": [0, 1, 6, 7, 9, 16, 20, 29, 30, 32, 35, 40, 46, 48, 52, 59, 66, 67, 76, 77, 78, 79, 80, 81, 82, 83, 87, 88, 89, 93, 96, 101, 102, 103, 105, 106, 109, 111, 131, 133, 134, 135, 166, 173, 174, 175], "attribut": [0, 9, 13, 29, 30, 40, 46, 48, 52, 58, 66, 67, 88, 89, 93, 94, 95, 96, 101, 102, 103, 104, 105, 124, 125, 126, 127, 128, 129, 130, 135, 166, 173, 174, 175], "restor": [0, 33, 163], "after": [0, 8, 27, 32, 34, 35, 39, 44, 45, 46, 49, 53, 71, 89, 93, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 158, 166, 168, 171, 172], "v0": [0, 48, 93, 117, 122, 144, 152], "v1": [0, 32, 46, 51, 55, 93, 144, 152], "constraints_func": [0, 34, 118, 122, 144, 152], "direct": [0, 3, 8, 9, 10, 27, 40, 48, 77, 78, 79, 80, 81, 82, 88, 89, 93, 94, 95, 96, 97, 103, 117, 134, 138, 142, 144, 146, 150, 152, 160, 164, 168, 170, 171, 172], "minim": [0, 1, 10, 40, 48, 77, 78, 82, 88, 89, 94, 97, 111, 117, 138, 142, 144, 146, 150, 152, 156, 164, 165, 166], "32": [0, 1, 156, 157, 163, 170], "timeout": [0, 37, 48, 77, 89, 93, 160, 164, 170], "600": [0, 160, 170], "len": [0, 28, 49, 69, 93, 99, 100, 118, 127, 128, 156, 164, 168], "pareto": [0, 93, 144, 152, 164, 166, 172], "front": [0, 93, 144, 152, 164, 166, 172], "sort": [0, 116, 118, 123, 158, 168], "t": [0, 29, 30, 31, 35, 52, 80, 93, 112, 118, 122, 136, 137, 138, 139, 142, 143, 146, 147, 150, 151, 156, 160, 163, 164, 166, 167, 168], "interest": [0, 109, 156, 167], "code": [0, 1, 3, 103, 110, 115, 124, 127, 128, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175], "kind": [0, 20], "constrain": [0, 65, 114, 118, 131], "soft": 0, "hard": 0, "penal": [0, 122], "unsatisfi": 0, "hand": [0, 33, 53, 114, 166], "must": [0, 3, 10, 12, 13, 14, 15, 16, 17, 18, 19, 31, 34, 35, 46, 48, 59, 60, 61, 66, 67, 81, 83, 84, 86, 89, 90, 92, 93, 97, 102, 103, 105, 106, 113, 115, 116, 118, 120, 122, 144, 152], "adopt": [0, 1, 158], "NOT": [0, 3, 159], "built": [0, 34, 49, 53, 114, 120, 125, 167, 168], "variat": 0, "achiev": [0, 114, 167], "faster": [0, 34, 44, 53, 77, 123, 164, 171], "gil": [0, 48, 93], "while": [0, 48, 67, 92, 130], "limit": [0, 3, 48, 82, 92, 93, 117, 122, 158], "situat": [0, 172], "wait": [0, 90, 104], "request": [0, 1], "etc": [0, 59, 160, 171], "inform": [0, 4, 32, 46, 56, 59, 114, 117, 118, 120, 122, 124, 127, 129], "apirefer": 0, "journalfilestorag": [0, 88], "client": [0, 40, 88], "postgresql": [0, 159, 163], "mysql": [0, 89, 159, 163], "tutorialeasyparallel": 0, "instal": [0, 1, 136, 137, 154, 160], "never": [0, 79, 82, 89], "reason": [0, 34, 88, 103], "concurr": [0, 115], "enqueu": [0, 14, 15, 93], "enqueue_tri": [0, 93, 113, 115, 170], "rdbstorag": [0, 10, 90, 91, 97, 122], "select": [0, 48, 124, 125, 126, 127, 128, 129, 130, 156, 160], "FOR": [0, 3], "syntax": [0, 1, 157, 171], "unsupport": [0, 164], "As": [0, 53, 77, 117, 120, 156, 158, 165, 167, 169], "describ": [0, 103, 112, 131, 163, 166, 167, 168], "sqlalchemi": [0, 10, 89, 97, 163], "document": [0, 3, 9, 10, 11, 28, 32, 36, 46, 59, 64, 69, 93, 96, 97, 98, 99, 100, 118, 131, 133, 163, 167, 168], "pysqlit": 0, "driver": 0, "high": [0, 1, 6, 13, 14, 15, 16, 17, 18, 19, 29, 49, 58, 101, 102, 103, 114, 122, 139, 142, 147, 150, 156, 160, 163, 166, 167, 168], "lock": [0, 84, 85, 86], "exclus": [0, 84, 85, 86, 158], "connect": [0, 40, 88, 89], "realiti": 0, "time": [0, 10, 14, 15, 17, 48, 58, 66, 67, 77, 78, 81, 82, 83, 88, 89, 90, 91, 93, 97, 102, 103, 105, 114, 123, 131, 144, 152, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "releas": [0, 13, 16, 17, 18, 19, 31, 32, 33, 34, 35, 36, 39, 40, 42, 44, 46, 48, 49, 52, 53, 56, 58, 59, 62, 63, 64, 65, 80, 84, 86, 87, 88, 90, 91, 93, 95, 101, 102, 103, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 130, 137, 138, 139, 140, 141, 142, 143, 144, 145, 152], "engine_kwarg": [0, 89], "connect_arg": [0, 89], "though": [0, 158], "nf": [0, 66, 67, 84, 86, 159], "section": [0, 77, 163, 167, 170, 171], "org": [0, 48, 64, 159], "scenario": [0, 93], "journalstorag": 0, "journal": [0, 85, 87, 88, 120], "medium": 0, "blog": [0, 66], "post": [0, 34, 39, 49, 53, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122], "heartbeat": [0, 89, 91], "mechan": [0, 76, 77, 78, 79, 80, 81, 82, 83, 89, 102, 103, 158], "experiment": [0, 31, 32, 33, 34, 35, 39, 40, 46, 48, 49, 52, 53, 56, 58, 59, 62, 63, 64, 65, 80, 87, 88, 90, 91, 93, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 130, 137, 138, 139, 140, 141, 142, 143, 144, 145, 152], "futur": [0, 13, 16, 17, 18, 19, 36, 39, 42, 44, 58, 66, 67, 93, 95, 101, 102, 103, 117, 118, 122, 144, 152], "typic": [0, 82], "job": [0, 48, 93], "schedul": [0, 13, 16, 17, 18, 19, 36, 39, 40, 42, 44, 58, 66, 67, 93, 95, 101, 102, 103, 117, 144, 152], "cluster": [0, 40, 87, 89], "left": [0, 46, 59], "remov": [0, 13, 16, 17, 18, 19, 36, 39, 42, 44, 58, 66, 67, 84, 86, 89, 93, 95, 101, 102, 103, 117, 144, 152], "manual": [0, 35, 77, 82, 93, 120, 159, 173, 174, 175], "wa": [0, 8, 27, 48, 56, 120, 166, 170], "consum": [0, 77], "comput": [0, 30, 34, 48, 52, 114, 118, 122, 128, 144, 152, 158], "record": [0, 20, 88, 89, 122, 158, 163], "everi": [0, 44, 45, 88, 89, 169], "60": [0, 90, 156, 170], "120": [0, 90, 171, 174], "last": [0, 77, 82, 89, 90, 156, 168], "url": [0, 9, 10, 11, 28, 40, 69, 87, 89, 90, 96, 97, 98, 99, 100, 163], "heartbeat_interv": [0, 89, 90, 122], "grace_period": [0, 89, 90], "suppos": [0, 8, 20, 27, 76, 77, 78, 79, 80, 81, 82, 83, 88, 89, 116, 165, 172], "ask": [0, 89, 93, 166, 173, 174, 175], "tell": [0, 8, 27, 89, 93, 166, 173, 174, 175], "explicitli": [0, 89, 93, 166, 171], "retri": [0, 89, 90], "retryfailedtrialcallback": [0, 89], "invok": [0, 1, 48, 58, 66, 67, 89, 93, 112, 115, 166, 167], "begin": [0, 34, 39, 49, 53, 88, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 167, 168], "mean": [0, 9, 30, 31, 34, 48, 49, 52, 87, 96, 114, 118, 122, 131, 144, 152, 156, 165, 168], "new": [0, 1, 10, 34, 39, 40, 46, 48, 49, 53, 54, 59, 71, 73, 74, 88, 89, 93, 97, 103, 105, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 158, 159, 166, 167, 169, 170, 175], "start": [0, 66, 67, 73, 78, 81, 95, 102, 103, 114, 156, 159, 166, 169], "failed_trial_callback": [0, 89, 90], "max_retri": [0, 90], "i": [1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 58, 59, 62, 63, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "automat": [1, 10, 34, 40, 49, 53, 77, 89, 93, 97, 103, 115, 117, 158, 163], "softwar": [1, 3], "particularli": [1, 89], "design": [1, 120, 147], "machin": [1, 108, 120, 156, 158], "learn": [1, 35, 42, 43, 48, 60, 103, 114, 120, 127, 154, 156, 158, 160, 164, 170], "imper": 1, "defin": [1, 6, 7, 16, 32, 35, 40, 88, 89, 93, 101, 103, 111, 113, 131, 132, 133, 135, 160, 164, 165, 170, 172, 173, 174, 175], "run": [1, 32, 40, 44, 46, 48, 49, 59, 66, 67, 77, 78, 81, 82, 88, 89, 90, 91, 92, 93, 104, 115, 122, 156, 157, 158, 159, 160, 163, 165, 166, 167, 168, 169, 170, 172], "style": [1, 139, 140, 166], "thank": [1, 167], "our": [1, 4, 32, 33, 156], "written": [1, 3, 37, 58, 131, 156, 158], "enjoi": 1, "modular": 1, "can": [1, 2, 4, 10, 29, 30, 31, 32, 33, 38, 40, 44, 46, 48, 52, 56, 59, 66, 67, 68, 77, 78, 81, 87, 88, 89, 90, 93, 97, 101, 102, 103, 105, 112, 114, 117, 119, 122, 135, 139, 141, 147, 149, 156, 157, 158, 159, 160, 163, 165, 166, 167, 168, 169, 171, 172], "dynam": [1, 116, 123], "construct": [1, 101, 103, 122, 124, 125, 126, 127, 128, 129, 130, 168, 170], "search": [1, 29, 32, 34, 39, 48, 49, 53, 63, 77, 103, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 139, 147, 156, 158, 161, 162, 166, 167, 175], "space": [1, 29, 32, 34, 39, 49, 53, 63, 77, 103, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 139, 147, 158, 161, 162, 166, 167, 175], "modern": 1, "function": [1, 5, 6, 20, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 64, 66, 67, 68, 71, 76, 77, 78, 79, 80, 81, 82, 83, 88, 89, 90, 93, 94, 101, 102, 103, 105, 106, 108, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 126, 130, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 163, 164, 165, 167, 168, 170, 171, 172], "lightweight": [1, 161, 162, 163, 175], "versatil": [1, 161, 162, 163, 175], "platform": [1, 161, 162, 163, 175], "agnost": [1, 161, 162, 163, 175], "architectur": [1, 122, 161, 162, 163, 175], "handl": [1, 10, 97, 118, 131, 158], "wide": [1, 29], "varieti": 1, "task": [1, 48, 93, 114, 158, 163, 167], "simpl": [1, 48, 49, 53, 67, 68, 114, 120, 156, 163, 168, 171], "few": [1, 29, 156], "requir": [1, 29, 30, 48, 52, 69, 77, 82, 88, 100, 105, 125, 154, 171], "us": [1, 3, 4, 5, 6, 9, 10, 13, 16, 17, 18, 19, 29, 30, 31, 32, 33, 34, 35, 39, 40, 44, 45, 46, 47, 48, 49, 52, 53, 56, 57, 58, 59, 60, 61, 66, 67, 68, 69, 71, 77, 78, 81, 82, 84, 86, 87, 88, 89, 90, 93, 96, 97, 100, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 163, 164, 166, 167, 168, 169, 170, 171, 173, 174, 175], "familiar": [1, 157], "loop": [1, 93, 157], "effici": [1, 29, 111, 122, 131, 161, 162, 175], "algorithm": [1, 10, 29, 31, 34, 39, 49, 53, 66, 69, 77, 82, 97, 100, 102, 103, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 128, 129, 130, 131, 143, 151, 161, 162, 167, 175], "art": [1, 158], "unpromis": [1, 10, 33, 35, 36, 38, 42, 43, 44, 45, 47, 50, 51, 54, 55, 57, 60, 69, 97, 100, 158], "trial": [1, 6, 7, 8, 9, 10, 11, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 66, 67, 69, 70, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 131, 133, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 163, 164, 166, 167, 168, 170, 171, 173, 174, 175], "parallel": [1, 34, 39, 40, 48, 49, 51, 53, 58, 59, 66, 67, 68, 77, 89, 93, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 131, 158, 161, 162, 163, 175], "studi": [1, 8, 9, 10, 11, 24, 27, 28, 29, 30, 31, 33, 34, 37, 39, 40, 46, 48, 49, 51, 52, 53, 59, 61, 66, 67, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 88, 89, 90, 91, 101, 102, 103, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 158, 160, 164, 166, 167, 168, 170, 171, 172, 173, 174, 175], "ten": 1, "hundr": [1, 122], "worker": [1, 58, 115, 120, 122], "littl": 1, "quick": [1, 154, 161, 162, 175], "visual": [1, 107, 161, 162, 164, 175], "inspect": 1, "histori": [1, 28, 35, 93, 99, 133, 141, 149, 159, 160], "from": [1, 2, 3, 6, 7, 8, 9, 27, 31, 32, 34, 40, 46, 48, 51, 54, 59, 71, 77, 78, 79, 80, 81, 82, 83, 87, 88, 89, 90, 92, 93, 96, 102, 103, 105, 106, 110, 111, 112, 114, 117, 118, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 138, 156, 158, 159, 160, 164, 167, 168, 170, 171, 172], "plot": [1, 31, 59, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "term": [1, 4, 93, 131], "object": [1, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 63, 65, 66, 67, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175], "singl": [1, 10, 12, 13, 14, 15, 16, 17, 18, 19, 29, 30, 31, 40, 46, 52, 59, 63, 69, 88, 89, 93, 95, 97, 100, 112, 114, 122, 126, 127, 130, 131, 138, 139, 141, 142, 143, 145, 146, 147, 149, 150, 151, 153, 156, 165, 171], "goal": [1, 156], "out": [1, 3, 4, 93, 160, 170], "valu": [1, 6, 10, 12, 13, 14, 15, 16, 17, 18, 19, 29, 30, 31, 32, 34, 35, 39, 40, 45, 46, 48, 49, 52, 53, 58, 59, 62, 63, 64, 65, 69, 70, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 87, 88, 89, 90, 92, 93, 94, 95, 97, 100, 101, 102, 103, 104, 105, 106, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 130, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "classifi": [1, 48, 144, 152, 157, 168, 171], "svm_c": 1, "through": [1, 114, 116, 135, 160, 168, 170], "multipl": [1, 35, 40, 59, 69, 77, 82, 87, 93, 100, 103, 112, 116, 120, 122, 123, 130, 139, 141, 147, 149], "autom": [1, 158], "suggest": [1, 6, 10, 32, 34, 39, 49, 53, 59, 69, 93, 97, 100, 101, 102, 103, 105, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 135, 156, 158, 159, 166, 167, 171], "gener": [1, 10, 12, 13, 14, 15, 16, 17, 18, 19, 34, 39, 40, 48, 49, 53, 59, 66, 67, 88, 89, 93, 97, 103, 105, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 126, 128, 130, 139, 140, 154, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175], "regressor_nam": 1, "suggest_categor": [1, 12, 101, 103, 113, 122, 138, 141, 142, 145, 146, 149, 150, 153, 157, 168, 171], "svr": 1, "randomforest": [1, 157], "svr_c": 1, "log": [1, 14, 15, 16, 18, 32, 40, 46, 48, 56, 59, 66, 67, 68, 85, 87, 88, 93, 103, 107, 131, 140, 148, 156, 157, 158, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "regressor_obj": 1, "els": [1, 93, 122, 157, 164, 167, 169, 171], "rf_max_depth": [1, 157], "2": [1, 9, 10, 11, 28, 35, 42, 43, 44, 46, 49, 53, 54, 59, 63, 69, 75, 83, 84, 89, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 110, 114, 115, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 158, 159, 161, 162, 163, 164, 166, 167, 169, 170, 171, 175], "ensembl": [1, 30, 52, 103, 157], "randomforestregressor": 1, "max_depth": [1, 29, 30, 52, 157], "x": [1, 8, 9, 10, 11, 27, 28, 46, 48, 49, 53, 59, 69, 77, 78, 79, 80, 81, 82, 89, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 105, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 159, 163, 165, 166, 167, 169, 171, 172], "fetch_california_h": 1, "return_x_i": [1, 8, 27, 48, 77, 78, 79, 80, 81, 82, 103, 160, 170, 171], "x_val": 1, "y_val": 1, "model_select": [1, 8, 27, 48, 77, 78, 79, 80, 81, 82, 103, 158, 160, 165, 168, 170, 171, 172], "train_test_split": [1, 8, 27, 77, 78, 79, 80, 81, 82, 103, 158, 160, 168, 170, 171, 172], "random_st": [1, 48, 103, 158, 168, 172], "y_pred": [1, 48], "error": [1, 8, 24, 25, 26, 27, 31, 40, 48, 60, 66, 67, 74, 75, 87, 88, 89, 93, 103, 104, 109, 131, 141, 149, 158, 165, 168], "metric": [1, 32, 33, 35, 38, 42, 43, 44, 45, 46, 47, 50, 51, 54, 55, 56, 57, 59, 60, 67, 83, 160, 170, 172], "mean_squared_error": 1, "return": [1, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 46, 48, 49, 51, 52, 53, 54, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "link": [1, 86], "question": 1, "bug": 1, "report": [1, 8, 27, 35, 38, 40, 45, 76, 77, 78, 79, 80, 81, 82, 83, 88, 89, 90, 93, 102, 103, 108, 111, 122, 127, 140, 148, 158, 168, 171], "ar": [1, 3, 4, 9, 10, 12, 20, 29, 30, 31, 32, 33, 34, 39, 40, 45, 46, 48, 49, 51, 52, 53, 54, 58, 59, 63, 66, 67, 69, 70, 71, 74, 75, 77, 78, 81, 87, 88, 89, 93, 96, 97, 100, 102, 103, 105, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 128, 131, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 158, 160, 164, 165, 166, 167, 168, 170, 171, 175], "welcom": 1, "when": [1, 10, 14, 15, 23, 24, 26, 29, 33, 34, 35, 39, 40, 46, 49, 53, 58, 59, 60, 62, 65, 66, 67, 71, 77, 80, 81, 82, 84, 86, 87, 88, 89, 90, 92, 93, 97, 103, 105, 106, 110, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 138, 139, 142, 144, 146, 147, 150, 152, 156, 157, 159, 163, 167, 168, 171], "send": 1, "pull": 1, "mit": 1, "scipi": [1, 120], "fdlibm": 1, "project": [1, 3, 59], "third": 1, "parti": 1, "takuya": 1, "akiba": [1, 93, 165], "shotaro": 1, "sano": [1, 93, 165], "toshihiko": 1, "yanas": 1, "takeru": 1, "ohta": 1, "masanori": 1, "koyama": 1, "2019": 1, "next": [1, 34, 63, 82, 93, 167], "kdd": 1, "arxiv": [1, 114], "tutori": [1, 5, 10, 32, 33, 48, 64, 89, 93, 97, 103, 111, 114, 131, 152, 154, 160, 164, 169, 171, 172], "recip": [1, 93, 103], "cli": [1, 23, 32, 107, 166], "distribut": [1, 3, 34, 39, 40, 48, 49, 51, 53, 58, 66, 67, 88, 89, 93, 102, 103, 105, 107, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 139, 147, 156, 159, 160, 163, 166, 167, 170, 171], "except": [1, 8, 33, 37, 40, 48, 67, 88, 89, 93, 107, 110, 131, 169], "integr": [1, 107, 114, 160, 167, 170], "pruner": [1, 10, 33, 45, 69, 93, 97, 100, 102, 103, 107, 160, 170, 171, 173, 174, 175], "faq": [1, 89, 159], "where": [1, 10, 13, 14, 15, 17, 29, 30, 31, 48, 49, 52, 59, 82, 90, 95, 97, 102, 103, 114, 115, 118, 139], "your": [1, 10, 34, 89, 93, 97, 111, 114, 131, 136, 137, 160, 164, 167, 168, 171], "favorit": 1, "ml": [1, 108], "librari": [1, 6, 7, 20, 29, 30, 34, 49, 52, 71, 73, 76, 77, 78, 79, 80, 81, 82, 83, 88, 89, 103, 109, 114, 133, 134, 158, 167], "how": [1, 4, 29, 30, 34, 40, 48, 51, 52, 54, 89, 93, 105, 112, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 158, 159, 163, 167, 168, 169, 170, 171, 172], "have": [1, 12, 32, 40, 48, 61, 77, 82, 88, 89, 92, 93, 103, 105, 115, 116, 120, 122, 123, 168, 171, 172], "own": [1, 34, 111, 131, 167, 168, 171], "argument": [1, 10, 13, 16, 29, 30, 31, 34, 37, 40, 45, 46, 49, 52, 53, 59, 62, 63, 64, 65, 66, 67, 68, 77, 88, 89, 92, 93, 95, 97, 103, 114, 117, 118, 120, 122, 138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 157, 159, 163, 166, 168, 169, 171, 172], "without": [1, 3, 31, 32, 33, 34, 35, 39, 40, 46, 48, 49, 52, 53, 56, 58, 59, 62, 63, 64, 65, 78, 80, 81, 87, 88, 90, 91, 93, 104, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 130, 137, 138, 139, 140, 141, 142, 143, 144, 145, 152, 158, 171], "remot": 1, "rdb": [1, 10, 51, 89, 97, 159, 160, 166, 173, 174, 175], "server": [1, 46, 87, 159], "save": [1, 10, 32, 61, 66, 67, 71, 73, 87, 93, 97, 103, 166, 173, 174, 175], "resum": [1, 10, 66, 67, 68, 70, 97, 166, 173, 174, 175], "suppress": [1, 66, 67, 75], "messag": [1, 40, 48, 49, 53, 66, 67, 88, 89, 93, 103, 114, 120, 122, 158, 163, 168, 169, 170], "model": [1, 29, 30, 32, 35, 45, 48, 52, 60, 66, 67, 108, 114, 122, 156, 160, 164, 171], "train": [1, 32, 33, 34, 35, 37, 40, 45, 48, 51, 58, 66, 67, 77, 88, 89, 102, 103, 108, 158, 160, 164, 168, 170, 171, 172], "obtain": [1, 29, 51, 54, 156], "reproduc": [1, 3, 66, 67, 163, 172], "result": [1, 5, 34, 39, 40, 49, 53, 58, 66, 67, 77, 78, 81, 93, 95, 101, 102, 108, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 151, 156, 158, 160, 166, 167, 168, 170, 172], "nan": [1, 34, 48, 83], "what": 1, "happen": [1, 40, 88, 89, 93], "alter": 1, "two": [1, 20, 34, 35, 46, 48, 59, 66, 67, 89, 93, 106, 110, 112, 120, 124, 126, 129, 167, 169, 170, 171], "gpu": [1, 35], "evalu": [1, 29, 30, 31, 32, 33, 34, 35, 38, 39, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 60, 93, 101, 102, 103, 106, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 135, 143, 151, 156, 158, 164, 167, 168, 169, 171, 172], "simultan": [1, 93, 112], "test": [1, 12, 13, 14, 15, 16, 17, 18, 19, 44, 55], "my": [1, 46, 59], "do": [1, 34, 39, 49, 53, 93, 103, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 159, 168, 171], "avoid": [1, 46, 93, 122, 159], "memori": [1, 10, 40, 88, 89, 90, 93, 97, 133, 158, 169, 170], "oom": [1, 93], "output": [1, 32, 34, 61, 71, 73, 138, 156], "onli": [1, 31, 34, 35, 39, 40, 44, 48, 49, 53, 55, 59, 66, 67, 71, 82, 84, 88, 89, 90, 93, 95, 102, 103, 108, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 135, 139, 147, 167], "best": [1, 28, 40, 48, 61, 66, 67, 78, 81, 82, 88, 89, 93, 95, 99, 122, 144, 152, 156, 158, 159, 163, 166, 167, 169, 170, 173, 174, 175], "updat": [1, 40, 48, 88, 89, 91, 93, 102, 114, 156], "variabl": [1, 32, 33, 48, 61, 117, 156], "which": [1, 31, 32, 33, 35, 38, 42, 43, 44, 45, 47, 48, 50, 51, 55, 57, 59, 60, 67, 68, 79, 80, 81, 83, 85, 87, 89, 90, 93, 101, 103, 111, 112, 114, 118, 119, 120, 122, 128, 131, 133, 143, 151, 156, 160, 163, 164, 165, 166, 168, 169, 170, 171, 172], "repres": [1, 6, 31, 76, 77, 78, 79, 80, 81, 82, 83, 93, 104, 111, 124, 125, 126, 127, 128, 129, 130, 131, 135], "proport": [1, 48], "accord": [1, 45, 64, 77, 89, 103, 108, 126, 147], "dirichlet": 1, "some": [1, 44, 77, 114, 166, 167, 170, 172], "constraint": [1, 34, 63, 118, 122, 144, 152], "solv": [1, 88, 89, 114], "occur": [1, 48, 89, 90, 93, 118], "perform": [1, 29, 44, 45, 48, 49, 61, 64, 66, 67, 80, 89, 93, 113, 114, 117, 120, 124, 125, 126, 127, 128, 129, 130, 159, 167], "sqlite3": [1, 89], "monitor": [1, 33, 42, 43, 44, 51, 54, 55, 158], "make": [1, 58, 66, 67, 77, 102, 103, 122, 160, 171], "them": [1, 33, 73, 88, 89, 93, 117, 122, 154, 167, 170], "fail": [1, 26, 34, 39, 49, 53, 89, 90, 91, 92, 93, 103, 104, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122], "thei": [1, 34, 39, 49, 53, 58, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 158, 159], "kill": [1, 89], "unexpectedli": [1, 89], "index": [1, 35, 60, 126, 130], "modul": [1, 5, 6, 7, 48, 49, 53, 106, 108, 109, 110, 111, 114, 120, 131, 132, 133, 134, 135, 136, 137, 154, 160], "page": [1, 89, 114], "optuna": [2, 3, 107, 156, 157, 158, 159, 160, 161, 163, 165, 166, 167, 168, 169, 172, 173, 174, 175], "3": [2, 9, 10, 11, 28, 46, 53, 69, 77, 90, 93, 96, 97, 98, 99, 100, 102, 103, 111, 113, 118, 131, 137, 139, 140, 143, 144, 147, 148, 151, 152, 156, 157, 159, 161, 162, 163, 164, 167, 169, 170, 171, 175], "newer": [2, 31, 32, 33, 34, 35, 39, 40, 46, 48, 49, 52, 53, 56, 58, 59, 62, 63, 64, 65, 80, 87, 88, 90, 91, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 130, 137, 138, 139, 140, 141, 142, 143, 144, 145, 152], "pip": [2, 136, 137, 160], "develop": [2, 3, 166], "master": 2, "branch": [2, 157], "git": 2, "repositori": [2, 160], "conda": 2, "forg": 2, "contain": [3, 9, 12, 13, 14, 15, 16, 17, 18, 19, 29, 31, 32, 34, 35, 39, 40, 48, 49, 53, 69, 85, 87, 88, 89, 92, 93, 95, 96, 100, 101, 102, 103, 108, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 135, 138, 142, 144, 146, 150, 152, 153, 159, 165, 171], "copyright": 3, "2001": 3, "2002": 3, "enthought": 3, "inc": [3, 129], "2003": [3, 130], "2022": [3, 114, 166], "right": [3, 34, 39, 49, 53, 90, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122], "reserv": 3, "redistribut": 3, "sourc": [3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175], "binari": [3, 48, 126, 130, 160, 170], "modif": [3, 114], "permit": [3, 48], "met": 3, "retain": 3, "notic": [3, 31, 32, 33, 34, 35, 39, 40, 46, 48, 49, 52, 53, 56, 58, 59, 62, 63, 64, 65, 80, 87, 88, 90, 91, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 130, 137, 138, 139, 140, 141, 142, 143, 144, 145, 152], "list": [3, 28, 29, 30, 31, 32, 40, 46, 48, 52, 59, 66, 67, 85, 87, 88, 89, 90, 93, 99, 114, 118, 138, 142, 143, 144, 145, 146, 150, 151, 152, 153, 154, 158, 164, 166, 172], "disclaim": 3, "materi": 3, "neither": [3, 116, 123, 144, 152], "name": [3, 9, 10, 11, 24, 29, 30, 31, 33, 34, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 59, 69, 88, 89, 93, 95, 96, 97, 98, 100, 101, 102, 103, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 156, 158, 159, 163, 166, 167, 169, 170], "holder": 3, "contributor": [3, 93, 165], "endors": 3, "promot": [3, 77, 82], "product": 3, "deriv": [3, 7, 106, 131], "prior": [3, 31, 32, 33, 34, 35, 39, 40, 46, 48, 49, 52, 53, 56, 58, 59, 62, 63, 64, 65, 80, 84, 86, 87, 88, 90, 91, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 130, 137, 138, 139, 140, 141, 142, 143, 144, 145, 152], "permiss": 3, "BY": 3, "THE": 3, "AND": 3, "AS": 3, "express": 3, "OR": 3, "impli": [3, 31, 167], "warranti": 3, "BUT": 3, "TO": 3, "OF": 3, "merchant": 3, "particular": [3, 78, 81, 83, 92, 122], "IN": 3, "NO": 3, "event": 3, "shall": 3, "owner": 3, "BE": 3, "liabl": 3, "indirect": 3, "incident": 3, "special": [3, 7], "exemplari": 3, "consequenti": 3, "damag": 3, "procur": 3, "substitut": 3, "good": [3, 122, 172], "servic": [3, 4], "data": [3, 34, 48, 51, 58, 108, 158, 160, 164, 165, 168, 170], "profit": 3, "busi": 3, "interrupt": [3, 93], "caus": [3, 87, 131, 159], "ON": 3, "theori": 3, "liabil": 3, "whether": [3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 31, 40, 46, 69, 76, 77, 78, 79, 80, 81, 82, 83, 87, 88, 89, 93, 100, 102, 103, 104, 111, 116, 123, 136, 137, 144, 152], "contract": 3, "strict": 3, "tort": 3, "aris": 3, "IF": [3, 159], "advis": 3, "SUCH": 3, "1993": 3, "sun": 3, "microsystem": 3, "sunpro": 3, "copi": [3, 9, 34, 39, 40, 49, 53, 76, 77, 78, 79, 80, 81, 82, 83, 88, 89, 93, 96, 102, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122], "modifi": [3, 34, 39, 49, 53, 76, 77, 78, 79, 80, 81, 82, 83, 93, 103, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 130], "freeli": 3, "grant": 3, "preserv": [3, 87], "visitor": 4, "websit": [4, 164], "improv": [4, 34, 62, 63, 64, 80, 114, 117, 122, 147, 156], "www": [4, 159], "html": [4, 29, 48, 118, 159], "hl": 4, "en": [4, 118], "opt": 4, "add": [4, 33, 35, 38, 40, 42, 43, 44, 45, 46, 47, 50, 51, 55, 56, 57, 59, 60, 88, 89, 93, 157, 158, 160, 163, 169, 170], "tool": 4, "dlpage": 4, "gaoptout": 4, "command": [5, 159, 160, 165, 173, 174, 175], "line": [5, 32, 165, 173, 174, 175], "help": [5, 90, 111, 131, 173, 175], "interfac": [5, 31, 32, 33, 34, 35, 37, 39, 40, 46, 48, 49, 52, 53, 56, 58, 59, 62, 63, 64, 65, 76, 77, 78, 79, 80, 81, 82, 83, 87, 88, 90, 91, 93, 102, 103, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 130, 131, 133, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 152, 165, 172, 173, 174, 175], "variou": [6, 93, 157, 160], "probabl": [6, 114, 118, 126, 129, 167], "mainli": [6, 89], "initi": [6, 34, 46, 49, 59, 93, 106, 114, 117, 120, 163, 170], "optim": [6, 8, 9, 10, 11, 27, 28, 29, 30, 31, 34, 35, 37, 40, 46, 48, 49, 52, 53, 58, 59, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 88, 89, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 111, 113, 114, 115, 117, 119, 120, 121, 122, 130, 131, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 163, 165, 166, 167, 168, 170, 172, 173, 174, 175], "inherit": [6, 90, 111, 167, 168], "intern": [6, 10, 12, 13, 14, 15, 16, 17, 18, 19, 33, 35, 40, 88, 89, 93, 95, 97, 103, 114, 115, 129, 133, 156, 167, 168], "basedistribut": [6, 20, 21, 22, 34, 39, 40, 48, 49, 53, 88, 89, 93, 102, 103, 105, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123], "low": [6, 13, 14, 15, 16, 17, 18, 19, 49, 58, 101, 102, 103, 105, 114, 117, 120, 122, 139, 147, 156, 158, 163, 166, 167], "endpoint": [6, 13, 14, 15, 16, 17, 18, 19, 103, 117, 122], "intdistribut": [6, 16, 17, 114, 117, 122, 166, 170], "should": [6, 7, 29, 30, 31, 32, 34, 40, 44, 45, 46, 51, 52, 59, 76, 77, 78, 79, 80, 81, 82, 83, 88, 89, 93, 102, 103, 105, 106, 111, 116, 120, 123, 131, 133, 134, 168], "directli": [6, 48, 88, 89, 158], "util": [6, 93, 106, 154, 163, 164], "optunaerror": 7, "Of": [7, 159], "should_prun": [7, 8, 27, 76, 77, 78, 79, 80, 81, 82, 83, 93, 102, 103, 108, 140, 148, 158, 168, 171, 172], "trainer": [8, 27, 33, 38, 50], "alia": [8, 10, 11, 27, 28, 36, 41, 69, 97, 98, 99, 100, 110], "load_iri": [8, 27, 48, 77, 78, 79, 80, 81, 82, 103, 158, 165, 168, 171], "linear_model": [8, 27, 77, 78, 79, 80, 81, 82, 103, 158, 168, 171, 172], "sgdclassifi": [8, 27, 77, 78, 79, 80, 81, 82, 103, 158, 168, 171], "uniqu": [8, 10, 27, 40, 69, 77, 78, 79, 80, 81, 82, 88, 89, 97, 100, 102, 103, 163, 168, 171], "1": [8, 15, 16, 17, 27, 28, 29, 31, 32, 34, 35, 38, 39, 40, 44, 45, 48, 49, 53, 54, 58, 59, 64, 71, 74, 75, 77, 78, 79, 80, 81, 82, 83, 87, 88, 92, 93, 95, 99, 101, 102, 103, 105, 110, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 153, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 175], "n_train_it": [8, 27, 77, 78, 79, 80, 81, 82, 171], "step": [8, 13, 14, 15, 16, 17, 27, 40, 48, 59, 77, 78, 79, 80, 81, 82, 83, 88, 89, 93, 102, 103, 108, 113, 114, 115, 119, 140, 148, 156, 157, 158, 163, 164, 166, 167, 168, 171], "partial_fit": [8, 27, 48, 77, 78, 79, 80, 81, 82, 103, 158, 168, 171], "intermediate_valu": [8, 27, 40, 77, 78, 79, 80, 81, 82, 88, 89, 90, 102, 103, 105, 156, 158, 163, 168, 171], "score": [8, 27, 46, 48, 66, 67, 77, 78, 79, 80, 81, 82, 103, 108, 158, 168, 171, 172], "maxim": [8, 10, 27, 34, 40, 48, 77, 78, 79, 80, 81, 82, 88, 89, 94, 97, 103, 122, 160, 164, 167, 168, 170, 171, 172], "from_study_nam": [9, 96], "from_storag": [9, 96], "to_storag": [9, 96], "to_study_nam": [9, 96], "system": [9, 40, 84, 86, 88, 89, 93, 96, 103, 105], "example_copi": [9, 96], "load_studi": [9, 93, 96, 134, 159], "str": [9, 10, 11, 12, 21, 22, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 66, 67, 69, 77, 82, 84, 85, 86, 87, 88, 89, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 165], "union": [9, 10, 11, 12, 14, 28, 32, 38, 40, 46, 48, 59, 66, 67, 69, 77, 82, 88, 89, 93, 96, 97, 98, 99, 100, 103, 105, 115, 139, 141, 147, 149], "basestorag": [9, 10, 11, 28, 40, 69, 93, 96, 97, 98, 99, 100, 133], "destin": [9, 96], "omit": [9, 34, 45, 96, 131], "duplicatedstudyerror": [9, 10, 40, 88, 89, 96, 97], "conflict": [9, 10, 96, 97], "alreadi": [9, 10, 24, 40, 63, 82, 88, 89, 93, 96, 97, 115, 171], "exist": [9, 10, 24, 28, 32, 40, 46, 66, 67, 69, 88, 89, 96, 97, 99, 100, 105, 159, 163], "load_if_exist": [10, 97, 163], "engin": [10, 50, 89, 97, 159], "instanti": [10, 12, 13, 14, 15, 16, 17, 18, 19, 33, 51, 88, 89, 97, 103, 117, 122, 156, 163], "basesampl": [10, 34, 39, 49, 53, 69, 93, 97, 100, 114, 119, 120, 121, 122, 131, 158, 167], "background": [10, 69, 97, 100], "dure": [10, 16, 34, 40, 48, 88, 89, 93, 95, 97, 112, 113, 115, 118, 122, 129, 156, 167], "multi": [10, 29, 30, 31, 46, 52, 59, 62, 65, 89, 93, 97, 102, 103, 105, 117, 118, 122, 126, 128, 130, 131, 138, 139, 141, 142, 143, 145, 146, 147, 149, 150, 151, 152, 153, 160, 163, 172, 173, 174, 175], "baseprun": [10, 69, 80, 93, 97, 100, 103, 111, 168], "decid": [10, 69, 97, 100, 158, 170], "earli": [10, 69, 77, 80, 82, 97, 100, 158], "medianprun": [10, 69, 80, 97, 100, 102, 103, 114, 158, 160, 170], "studydirect": [10, 40, 88, 89, 93, 95, 97], "bool": [10, 12, 13, 14, 15, 16, 17, 18, 19, 28, 31, 32, 33, 35, 39, 40, 46, 48, 49, 53, 59, 66, 67, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 93, 97, 99, 102, 103, 104, 114, 115, 116, 117, 120, 122, 123, 136, 137, 141, 144, 149, 152, 168], "flag": [10, 33, 46, 53, 66, 67, 87, 89, 93, 97, 103, 114, 116, 122, 123, 141, 144, 149, 152], "control": [10, 29, 77, 93, 97], "creation": [10, 89, 97], "skip": [10, 89, 93, 97], "sequenc": [10, 12, 34, 39, 40, 46, 49, 53, 59, 88, 89, 93, 95, 97, 102, 103, 105, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 139, 141, 144, 147, 149, 152], "concret": [10, 29, 30, 52, 97, 125, 131], "delet": [11, 34, 39, 40, 49, 53, 84, 86, 88, 89, 98, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 166], "choic": [12, 20, 49, 93, 103], "categor": [12, 34, 49, 63, 103, 114, 125, 131, 157, 158], "int": [12, 15, 16, 17, 29, 30, 33, 34, 35, 37, 38, 39, 40, 44, 45, 48, 49, 52, 53, 57, 66, 67, 74, 75, 77, 78, 80, 81, 82, 83, 85, 87, 88, 89, 90, 92, 93, 95, 101, 102, 103, 105, 113, 114, 115, 117, 118, 120, 121, 122, 125, 144, 152, 169], "candid": [12, 34, 48, 63, 103, 115, 117, 122], "least": [12, 77, 81, 83, 158], "Not": 12, "guarante": [12, 34, 39, 49, 53, 77, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122], "restrict": 12, "just": [12, 13, 14, 15, 16, 17, 18, 19, 32, 56, 89, 103, 115, 159], "to_external_repr": [12, 13, 14, 15, 16, 17, 18, 19], "param_value_in_internal_repr": [12, 13, 14, 15, 16, 17, 18, 19], "convert": [12, 13, 14, 15, 16, 17, 18, 19, 103], "represent": [12, 13, 14, 15, 16, 17, 18, 19, 34, 40, 88, 89], "extern": [12, 13, 14, 15, 16, 17, 18, 19, 90, 108], "to_internal_repr": [12, 13, 14, 15, 16, 17, 18, 19], "param_value_in_external_repr": [12, 13, 14, 15, 16, 17, 18, 19], "q": [13, 58, 101, 102, 103], "discret": [13, 14, 15, 16, 17, 103, 114, 115, 157], "linear": [13, 19, 103, 114, 157, 164], "domain": [13, 14, 15, 16, 18, 19, 103, 114, 117, 122, 131], "mathsf": [13, 14, 15, 17, 82, 103], "divis": [13, 14, 15, 17, 103], "maximum": [13, 14, 15, 17, 29, 30, 48, 52, 77, 82, 83, 90, 92, 102], "integ": [13, 14, 15, 16, 17, 32, 48, 85, 87, 89, 90, 92, 103, 114, 115, 120, 131, 157, 168], "lower": [13, 14, 15, 16, 17, 18, 19, 63, 83, 103, 114, 120, 168], "upper": [13, 14, 15, 16, 17, 18, 19, 63, 83, 103], "greater": [13, 14, 15, 16, 17, 18, 19, 85, 87, 93, 102, 103, 105, 118], "larger": [13, 14, 15, 16, 18, 34, 63, 65, 77, 83, 88, 103, 118, 122, 144, 152, 170], "deprec": [13, 16, 17, 18, 19, 36, 39, 42, 44, 49, 58, 66, 67, 93, 95, 101, 102, 103, 117, 144, 152], "v3": [13, 16, 17, 18, 19, 31, 35, 40, 46, 52, 58, 59, 64, 87, 88, 90, 93, 95, 101, 102, 103, 113, 114, 120, 122, 124, 126, 127, 128, 130, 144, 152], "v6": [13, 16, 17, 18, 19, 58, 93, 95, 101, 102, 103], "subject": [13, 16, 17, 18, 19, 36, 39, 42, 44, 58, 66, 67, 93, 95, 101, 102, 103, 117, 118, 122, 144, 152], "tag": [13, 16, 17, 18, 19, 31, 32, 33, 34, 35, 36, 39, 40, 42, 44, 46, 48, 49, 52, 53, 56, 58, 59, 62, 63, 64, 65, 80, 87, 88, 90, 91, 93, 95, 101, 102, 103, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 130, 137, 138, 139, 140, 141, 142, 143, 144, 145, 152], "floatdistribut": [13, 18, 19, 48, 93, 105, 113, 114, 117, 122, 156, 163, 166, 167, 170, 171], "properti": [13, 48, 58, 66, 67, 93, 101, 102, 103, 120, 125, 130, 156, 163, 165], "subtyp": 13, "proxi": 13, "posit": [14, 15, 16, 17, 89, 103, 120], "v2": [16, 32, 33, 34, 36, 39, 42, 44, 46, 49, 53, 55, 56, 58, 59, 62, 63, 65, 66, 67, 80, 90, 91, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 137, 138, 139, 140, 141, 142, 143, 144, 145], "v4": [16, 36, 39, 42, 44, 66, 67, 117], "compon": [16, 48], "reli": 16, "ignor": [16, 34, 39, 45, 49, 53, 103, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 144, 152], "assum": [16, 34, 48, 78, 81, 87, 102, 103, 113, 131, 147, 159, 164, 166, 170], "alwai": [16, 48, 49, 53, 79, 102, 114, 118, 172], "besid": 16, "dist_old": 20, "dist_new": 20, "categoricaldistribut": [20, 93, 103, 105, 114, 117, 118, 122, 171], "between": [20, 34, 39, 49, 53, 59, 77, 78, 81, 83, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122], "previous": [20, 63, 93, 103, 111], "newli": 20, "ad": [20, 31, 32, 33, 34, 35, 39, 40, 46, 48, 49, 52, 53, 56, 58, 59, 62, 63, 64, 65, 80, 87, 88, 90, 91, 93, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 130, 137, 138, 139, 140, 141, 142, 143, 144, 145, 152, 170], "dist": 21, "serial": [21, 22, 66, 67, 87], "json": [21, 22, 40, 61, 66, 67, 85, 87, 88, 89, 93, 103, 165], "string": [21, 48, 93, 103], "json_str": 22, "deseri": 22, "receiv": [23, 48, 93], "invalid": 23, "configur": [23, 29, 30, 32, 34, 52, 63, 73, 77, 82, 89, 103, 115, 122], "duplic": [24, 93, 113, 115], "oper": [26, 87, 88, 124, 125, 126, 127, 129, 130, 131, 132, 158, 164, 171], "include_best_tri": [28, 99], "study_summari": [28, 99, 165], "potenti": [28, 99], "queri": [28, 99], "longer": [28, 53, 89, 99], "fetch": [28, 99, 164], "summari": [28, 57, 99], "summar": [28, 99], "studysummari": [28, 99, 165], "n_tree": [29, 30, 52], "64": [29, 30, 52, 156, 168, 170], "fanova": 29, "approach": [29, 67], "assess": [29, 30, 31, 52, 143, 151], "forest": [29, 30, 52], "regress": [29, 30, 52], "accur": 29, "reliabl": 29, "over": [29, 77, 82, 88, 93, 147, 171], "minut": [29, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "publish": [29, 129], "cython": 29, "within": [29, 40, 46, 59, 88, 89, 114, 127, 156], "packag": [29, 30, 32, 44, 52, 109, 154], "underli": [29, 40, 48], "cover": 29, "explor": 29, "orient": 29, "cite": 29, "origin": [29, 77, 90, 103, 117, 122, 171], "automl": 29, "io": [29, 88, 118], "tree": [29, 30, 52, 103, 117, 122, 158], "depth": [29, 30, 52], "meant": [29, 30, 52], "get_param_import": [29, 30, 52, 106, 151], "present": [29, 30, 31, 48, 52, 143, 151], "frozentri": [29, 30, 31, 34, 39, 40, 48, 49, 52, 53, 66, 67, 76, 77, 78, 79, 80, 81, 82, 83, 88, 89, 90, 93, 95, 105, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 156, 163, 168, 169, 171, 172], "being": [29, 30, 31, 40, 52, 78, 81, 90, 93, 114, 138, 139, 141, 142, 143, 145, 146, 147, 149, 150, 151, 153], "durat": [29, 30, 52, 93, 102, 122, 160], "total_second": [29, 30, 52, 160], "ordereddict": [29, 30, 31, 52, 116, 123], "dict": [29, 30, 31, 33, 34, 39, 40, 46, 48, 49, 52, 53, 58, 59, 66, 67, 85, 87, 88, 89, 93, 95, 101, 102, 103, 105, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123], "decreas": [30, 167, 168], "impur": 30, "mdi": 30, "sklean": 30, "randomforestclassifi": [30, 52, 103, 157], "feature_importances_": 30, "consist": [31, 87], "neg": [31, 80, 85, 87], "point": [31, 32, 44, 82, 103, 114, 115, 139, 147, 157, 167], "higher": [31, 48, 51, 103, 136, 137], "descend": 31, "exclud": [31, 116, 123, 130], "found": [31, 48, 66, 67, 87, 156, 172], "empti": [31, 90, 93, 122], "plot_param_import": [31, 154, 160, 164], "baseimportanceevalu": [31, 106, 143, 151], "fanovaimportanceevalu": [31, 106, 143, 151], "boolean": [31, 35, 76, 77, 78, 79, 80, 81, 82, 83, 103, 111, 116, 123, 168], "config_fil": 32, "serialization_dir": 32, "best_validation_accuraci": 32, "include_packag": 32, "forc": [32, 113], "file_friendly_log": 32, "allennlp": [32, 33], "extens": [32, 38, 46, 128, 131], "jsonnet": [32, 61], "config": [32, 61], "cast": 32, "std": 32, "parseint": 32, "parsejson": 32, "either": [32, 34, 40, 48, 88, 89, 104, 106, 115, 117, 120, 122, 144, 152, 171], "both": [32, 46, 67, 77, 118, 171], "executor": 32, "mask": 32, "extvar": 32, "path": [32, 84, 85, 86], "gradientdescrenttrain": 32, "access": [32, 66, 67, 88, 89, 93, 103, 108, 163, 165, 168], "overwrit": [32, 40, 88, 89], "directori": [32, 56, 66, 67], "tqdm": 32, "separ": [32, 114], "slow": 32, "refresh": 32, "rate": [32, 82, 103, 114, 127, 170], "addit": [32, 46, 51, 59, 93, 163, 171], "observ": [33, 35, 38, 44, 45, 47, 50, 51, 55, 60, 63, 77, 156], "mandatori": 33, "allennlpexecutor": [33, 61], "id": [33, 40, 77, 88, 89, 103], "Then": [33, 112, 159, 167, 170, 171], "build": [33, 34, 39, 49, 53, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 168], "patientprun": [33, 158], "validation_loss": 33, "validation_accuraci": 33, "on_epoch": 33, "epoch": [33, 38, 40, 44, 48, 77, 82, 88, 89, 102, 103, 164], "is_primari": 33, "_": [33, 82, 93, 171], "reach": [33, 82, 83, 93], "satur": 33, "gradientdescenttrain": 33, "classmethod": 33, "regist": [33, 40, 42, 43, 88, 89, 165, 170], "arg": [33, 36, 68], "kwarg": [33, 36, 68], "stub": 33, "trainercallback": 33, "signatur": 33, "registr": 33, "candidates_func": [34, 62, 63, 65], "n_startup_tri": [34, 39, 49, 53, 78, 81, 114, 117, 122], "independent_sampl": [34, 39, 49, 53, 114, 120, 167], "devic": [34, 164], "botorch": 34, "bayesian": 34, "top": [34, 81, 82], "pytorch": [34, 50, 51, 58, 164], "allow": [34, 48, 80, 89, 92, 93, 113, 126, 130, 131, 168], "back": [34, 108], "hot": [34, 63], "encod": [34, 63], "homepag": 34, "keep": [34, 81, 88, 89], "torch": [34, 58, 62, 63, 64, 65, 157, 164], "tensor": [34, 58, 62, 63, 64, 65], "bound": [34, 48, 49, 62, 63, 64, 65, 93, 114, 124, 125, 126, 127, 128, 129, 130], "quasi": [34, 62, 63, 64, 65, 120, 158], "mc": [34, 62, 63, 64, 65], "batch": [34, 62, 63, 64, 131], "expect": [34, 58, 62, 63, 64, 117, 122, 125, 169], "qei": [34, 63], "hypervolum": [34, 62, 64, 117, 122], "qehvi": [34, 62, 64], "extend": [34, 40, 65], "parego": [34, 65], "qparego": [34, 65], "qei_candidates_func": [34, 62, 64, 65], "strictli": [34, 48, 63, 118, 122, 144, 152, 167], "violat": [34, 63, 118, 122, 144, 152], "smaller": [34, 77, 83, 118, 122, 144, 152], "taken": [34, 80, 102], "account": [34, 117, 122, 170], "resort": 34, "fasten": 34, "after_tri": [34, 39, 49, 53, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122], "process": [34, 39, 40, 48, 49, 53, 58, 59, 84, 85, 86, 90, 93, 103, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 135, 154], "befor": [34, 39, 40, 44, 49, 53, 59, 76, 77, 78, 79, 80, 81, 82, 83, 88, 89, 90, 92, 93, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 158, 170, 171], "succeed": [34, 39, 49, 53, 84, 86, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122], "infer_relative_search_spac": [34, 39, 49, 53, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 167], "infer": [34, 39, 49, 53, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 167], "rel": [34, 39, 49, 53, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 167], "sample_rel": [34, 39, 49, 53, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 167], "sample_independ": [34, 39, 49, 53, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 167], "intersection_search_spac": [34, 39, 49, 53, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 167], "reseed_rng": [34, 39, 49, 53, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122], "rese": [34, 39, 49, 53, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122], "replic": [34, 39, 49, 53, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122], "prevent": [34, 39, 49, 53, 66, 67, 73, 89, 93, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122], "assign": [34, 39, 46, 48, 49, 53, 59, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122], "param_nam": [34, 39, 40, 49, 53, 88, 89, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 167], "param_distribut": [34, 39, 48, 49, 53, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 167], "suitabl": [34, 39, 49, 53, 93, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 166], "relationship": [34, 39, 49, 53, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 138, 142, 145, 146, 150, 153, 160], "regard": [34, 39, 49, 53, 110, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 157], "perspect": [34, 39, 49, 53, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 131], "search_spac": [34, 39, 49, 53, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 127, 128, 167], "onc": [34, 39, 49, 53, 58, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 156, 169], "gaussian": [34, 39, 49, 53, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122], "cma": [34, 39, 49, 53, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 158], "eval_set_index": 35, "catboost": 35, "valid": [35, 38, 40, 42, 43, 44, 45, 48, 50, 55, 60, 67, 68, 88, 89, 93, 158, 164, 171], "accuraci": [35, 38, 42, 43, 44, 45, 47, 50, 51, 55, 56, 57, 60, 156, 160, 164, 165, 170, 171], "after_iter": 35, "check_prun": 35, "unlik": [35, 93], "doesn": [35, 80, 139, 147, 163, 167], "logloss": 35, "auc": [35, 56, 160, 170], "eval_set": [35, 60], "iter": [35, 45, 48, 66, 67, 77, 93, 158, 170], "simplenamespac": 35, "iteraion": 35, "validation_nam": 35, "metric_nam": [35, 46, 47, 56, 59], "6": [35, 49, 58, 77, 84, 103, 114, 156, 158, 159, 163, 164, 168, 169, 170], "9": [35, 46, 59, 91, 117, 118, 126, 129, 156, 158, 163, 164, 167, 168, 170], "logic": [35, 158, 168], "catalyst": 36, "optunapruningcallback": 36, "descript": [36, 62, 64, 65, 82, 166], "comm": 37, "wrapper": [37, 39, 58, 68], "incorpor": [37, 58], "chainermn": 37, "communicatorbas": 37, "commun": [37, 58], "func": [37, 48, 93], "absenc": 37, "chainermntri": 37, "tupl": [37, 38, 40, 67, 88, 89, 92, 93, 144], "observation_kei": [38, 60], "pruner_trigg": 38, "chainer": 38, "intervaltrigg": 38, "manualscheduletrigg": 38, "trigger": 38, "length": [38, 102, 105], "x0": [39, 49, 114], "sigma0": [39, 49, 114], "cma_std": [39, 49], "cma_opt": [39, 49], "warn_independent_sampl": [39, 49, 53, 114, 120, 122], "pycmasampl": [39, 114], "backward": [39, 164], "renam": [39, 49], "dask": 40, "live": 40, "custom": [40, 47, 89, 106, 135, 168], "sometim": 40, "debug": [40, 74, 75, 109], "attempt": 40, "check_trial_is_updat": [40, 88, 89], "trial_id": [40, 88, 89, 102, 103, 156, 163], "trial_stat": [40, 88, 89], "runtimeerror": [40, 88, 89, 93], "create_new_studi": [40, 88, 89], "among": [40, 81, 82, 88, 89], "whose": [40, 84, 86, 88, 89, 91, 115, 138, 140, 141, 142, 144, 145, 146, 148, 149, 150, 152, 153, 156, 163], "create_new_tri": [40, 88, 89], "study_id": [40, 88, 89, 95], "template_tri": [40, 88, 89], "templat": [40, 88, 89, 168], "keyerror": [40, 88, 89], "match": [40, 77, 88, 89], "delete_studi": [40, 88, 89], "get_all_studi": [40, 88, 89], "frozenstudi": [40, 88, 89], "get_all_tri": [40, 88, 89], "deepcopi": [40, 88, 89, 93, 102, 168], "intend": [40, 55, 88, 89], "filter": [40, 88, 89, 93], "get_base_storag": 40, "retriev": [40, 165], "conveni": 40, "extract": [40, 164], "get_best_tri": [40, 88, 89], "been": [40, 61, 73, 78, 81, 83, 88, 89, 91, 94, 103, 104, 115, 116, 123, 168], "get_n_trial": [40, 88, 89], "count": [40, 48, 88, 89, 92, 93], "get_study_direct": [40, 88, 89], "get_study_id_from_nam": [40, 88, 89], "get_study_name_from_id": [40, 88, 89], "get_study_system_attr": [40, 88, 89], "get_study_user_attr": [40, 88, 89], "get_trial": [40, 88, 89, 93, 168], "get_trial_id_from_study_id_trial_numb": [40, 88, 89], "trial_numb": [40, 66, 67, 88, 89, 171], "get_trial_number_from_id": [40, 88, 89], "get_trial_param": [40, 88, 89], "get_trial_system_attr": [40, 88, 89], "get_trial_user_attr": [40, 88, 89], "remove_sess": [40, 88, 89], "clean": [40, 88], "up": [40, 88, 90, 120, 158, 163], "set_study_system_attr": [40, 88, 89], "serializ": [40, 85, 87, 88, 89, 93, 103, 165], "set_study_user_attr": [40, 88, 89], "set_trial_intermediate_valu": [40, 88, 89], "associ": [40, 88, 89, 102, 103, 111, 122, 168], "set_trial_param": [40, 88, 89], "param_value_intern": [40, 88, 89], "set_trial_state_valu": [40, 88, 89], "successfulli": [40, 88, 89, 92], "kept": [40, 81, 88, 89], "latter": [40, 46, 48, 88, 89], "tri": [40, 88, 89, 170], "set_trial_system_attr": [40, 88, 89], "set_trial_user_attr": [40, 88, 89], "fastaiv2pruningcallback": 41, "fastai": [42, 43], "learner": [42, 43], "fit_one_cycl": [42, 43], "n_epoch": [42, 43], "fastaipruningcallback": [42, 43], "valid_loss": [42, 43], "cyc_len": 42, "max_lr": 42, "basic_train": 42, "trackercallback": [42, 43], "cnn_learner": 43, "dl": 43, "resnet18": 43, "error_r": 43, "cb": 43, "lr_max": 43, "kera": [44, 55], "val_loss": [44, 51, 54, 55], "val_accuraci": [44, 171], "th": [44, 45], "sever": [44, 77, 88, 93, 119, 158], "recent": 44, "simpli": [44, 102, 103, 160], "redirect": 44, "standalon": [44, 87], "tf": [44, 55, 57], "break": [44, 93, 171], "workflow": 44, "ref": 44, "team": 44, "altern": [44, 93, 159], "tfkeraspruningcallback": 44, "valid_nam": [45, 66], "valid_0": 45, "report_interv": 45, "lightgbm": [45, 160, 170], "binary_error": 45, "multi_error": 45, "cv": [45, 48, 67], "boost": 45, "itself": [45, 56, 93, 102, 122], "definit": [45, 168], "tracking_uri": 46, "create_experi": 46, "mlflow_kwarg": 46, "tag_study_user_attr": 46, "tag_trial_user_attr": 46, "track": [46, 56, 59], "mlflow": 46, "relev": [46, 56], "mlflc": 46, "your_tracking_uri": 46, "my_studi": [46, 69, 100], "uri": 46, "set_tracking_uri": 46, "broadcast": [46, 59], "suffix": [46, 59], "value_0": [46, 59], "value_1": [46, 59], "experi": [46, 59, 163, 165, 166, 167], "let": [46, 93, 156, 159, 163, 166, 168, 170, 171, 172], "under": [46, 89], "set_experi": 46, "experiment_id": 46, "databrick": 46, "notebook": [46, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175], "nest_trial": 46, "part": [46, 93], "anyon": 46, "migrat": 46, "nest": [46, 48, 93], "typeerror": [46, 103], "indic": [46, 48, 85, 87, 90, 144, 152, 168], "attr": [46, 93, 163, 165, 166], "pair": [46, 165, 171], "supersed": 46, "former": 46, "collis": 46, "track_in_mlflow": 46, "decor": [46, 59], "enabl": [46, 59, 66, 67, 72, 73, 117, 120, 122, 158, 163, 171], "log_param": 46, "power": [46, 59, 120], "log_metr": 46, "my_other_studi": 46, "eval_metr": [47, 60], "mxnet": 47, "cross": [47, 48, 67], "entropi": 47, "constructor": [47, 49, 53, 93, 103, 134, 168], "estim": [48, 57, 77, 108, 114, 117, 122, 158], "enable_prun": 48, "error_scor": 48, "max_it": 48, "refit": 48, "return_train_scor": 48, "subsampl": 48, "verbos": [48, 66, 67, 74, 75, 109, 160, 170], "baseestim": [48, 108], "scikit": [48, 53, 60, 154], "need": [48, 51, 59, 71, 77, 82, 88, 89, 93, 141, 158, 163, 167, 171], "map": [48, 115, 168], "basecrossvalid": [48, 67], "strategi": [48, 111, 112, 114, 117, 131, 168], "fold": [48, 67], "splitter": 48, "yield": 48, "split": [48, 71, 103], "arrai": [48, 171], "multiclass": 48, "stratifiedkfold": 48, "kfold": 48, "numer": [48, 124, 125, 126, 127, 128, 129, 130], "fitfailedwarn": 48, "affect": [48, 49, 66, 67, 93, 160, 164], "thread": [48, 89, 93], "cpu": [48, 58, 93, 164], "suffer": [48, 93], "signal": [48, 93], "ctrl": [48, 93], "sigterm": [48, 93], "runtim": 48, "v": 48, "qualiti": 48, "randomst": [48, 124, 125, 126, 127, 128, 129, 130, 167], "pseudo": 48, "global": [48, 58, 139, 147], "made": [48, 103, 111], "avail": [48, 95, 108, 118, 134, 136, 137, 158], "best_estimator_": 48, "insight": 48, "impact": 48, "overfit": [48, 168], "underfit": 48, "computation": [48, 117, 122], "expens": [48, 117, 122], "draw": [48, 93], "shape": [48, 63, 93], "appropri": [48, 89], "end": [48, 66, 67, 92, 93, 120], "accept": [48, 66, 67, 89, 93, 103, 125, 167], "chosen": 48, "n_splits_": 48, "refit_time_": 48, "sample_indices_": 48, "scorer_": 48, "scorer": 48, "study_": 48, "actual": [48, 63, 115, 131], "gamma": [48, 103, 117, 122], "auto": [48, 66, 67, 77, 82], "optuna_search": 48, "convent": [48, 88], "stabl": [48, 118], "model_evalu": 48, "multipli": [48, 49, 114], "17": [48, 70, 74, 156, 158, 170], "best_index_": 48, "retun": [48, 171], "equiv": 48, "best_trial_": 48, "best_params_": 48, "best_score_": 48, "classes_": 48, "ndarrai": [48, 117, 122, 124, 125, 126, 127, 128, 129, 130, 171], "seri": [48, 90], "label": [48, 139, 141, 142, 143, 145, 147, 149, 150, 151, 153, 160, 164, 170], "decision_funct": 48, "datafram": [48, 93, 163], "spmatrix": 48, "group": [48, 58, 122, 131], "fit_param": 48, "get_param": 48, "deep": [48, 93, 158], "subobject": 48, "inverse_transform": 48, "n_trials_": 48, "predict_log_proba": 48, "predict_proba": 48, "scaler": 48, "score_sampl": 48, "set_param": 48, "well": [48, 90, 118, 122, 163], "pipelin": [48, 167], "__": 48, "trials_": 48, "user_attrs_": 48, "quadrat": [49, 53, 93, 114, 120], "especi": [49, 109], "exce": [49, 78, 81, 83, 115, 131], "popul": [49, 114, 131], "size": [49, 114, 115, 131, 141], "cmaessampl": [49, 131, 158, 171], "cmaevolutionstrategi": 49, "standard": [49, 114, 120], "deviat": [49, 114], "min_rang": [49, 114], "denot": [49, 103, 114], "minimum": [49, 77, 78, 81, 82, 83, 114], "cma_default_opt": 49, "boundaryhandl": 49, "emit": [49, 53, 114, 120, 122], "ignit": 50, "handler": [50, 70, 71, 72, 73, 158, 163, 169, 170], "lightn": 51, "val_acc": [51, 54, 55], "pytorch_lightn": 51, "lightningmodul": 51, "training_step": 51, "validation_epoch_end": 51, "pytorchlightn": 51, "shaplei": 52, "shap": 52, "absolut": 52, "skopt_kwarg": 53, "consider_pruned_tri": [53, 114], "keyword": [53, 66, 67, 68, 89], "skopt": 53, "dimens": [53, 93, 122, 124, 125, 126, 127, 128, 129, 130, 131], "o": [53, 131], "slower": 53, "skorch": 54, "net": 54, "histroi": 54, "tensorflow": [55, 57], "dirnam": 56, "tensorboard": 56, "give": [56, 77, 158], "know": 56, "later": [56, 84, 86, 163], "roc": 56, "run_every_step": 57, "sessionrunhook": 57, "hook": 57, "watch": 57, "rank": 58, "node": [58, 163], "processgroup": 58, "sure": 58, "gloo": 58, "world": 58, "nccl": 58, "synchron": [58, 84, 86], "transmiss": 58, "share": [58, 66, 67, 120, 172], "set_system_attr": [58, 93, 101, 102, 103], "suggest_discrete_uniform": [58, 101, 102, 103], "suggest_loguniform": [58, 101, 102, 103], "suggest_uniform": [58, 101, 102, 103], "wandb_kwarg": 59, "as_multirun": 59, "bias": 59, "onlin": 59, "wandb": 59, "setup": [59, 71, 73], "who": [59, 133], "subsequ": [59, 122], "per": [59, 131], "ensur": [59, 78, 81, 87, 93, 113, 115, 159], "correct": [59, 164, 168], "wandbc": 59, "multirun": 59, "track_in_wandb": 59, "b": [59, 77, 113, 122, 139, 147], "sweep": 59, "panel": 59, "ex": 59, "coordin": 59, "xgboost": 60, "merror": 60, "validation_0": 60, "input_config_fil": 61, "output_config_fil": 61, "train_x": [62, 63, 64, 65, 158, 160, 170], "train_obj": [62, 63, 64, 65], "train_con": [62, 63, 64, 65], "previou": [63, 78, 90, 120, 167, 168, 171], "n_param": 63, "n_object": [63, 144, 152], "n_constraint": 63, "involv": 63, "row": 63, "respect": [63, 90, 93, 115, 134], "optimize_acqf": 63, "noisi": 64, "qnehvi": 64, "better": [64, 77, 120, 158, 170], "qehvi_candidates_func": 64, "cf": 64, "constrained_multi_objective_bo": 64, "train_set": [66, 67], "num_boost_round": [66, 67], "valid_set": [66, 160, 170], "fobj": [66, 67], "feval": [66, 67], "feature_nam": [66, 67], "categorical_featur": [66, 67], "early_stopping_round": [66, 67], "evals_result": 66, "verbose_ev": [66, 67], "learning_r": [66, 157], "keep_training_boost": 66, "time_budget": [66, 67], "sample_s": [66, 67], "optuna_callback": [66, 67], "model_dir": [66, 67], "show_progress_bar": [66, 67, 93], "optuna_se": [66, 67], "tuner": [66, 67, 68], "stepwis": [66, 67, 68], "manner": [66, 68], "lambda_l1": [66, 67], "lambda_l2": [66, 67], "num_leav": [66, 67], "feature_fract": [66, 68], "bagging_fract": [66, 67, 160, 170], "bagging_freq": [66, 67, 160, 170], "min_child_sampl": [66, 68, 160, 170], "articl": 66, "kohei": 66, "ozaki": [66, 114, 158], "kaggl": 66, "grandmast": 66, "budget": [66, 67, 77, 131], "tune": [66, 67, 68, 172], "elapsed_sec": [66, 67], "elaps": [66, 67, 93, 102], "average_iteration_tim": [66, 67], "averag": [66, 67, 77], "booster": [66, 67], "lgbm_param": [66, 67], "get_best_boost": [66, 67], "filenam": [66, 67], "align": [66, 67], "progress": [66, 67, 93, 127], "bar": [66, 67, 93, 138, 141, 146, 149], "fragment": [66, 67], "properli": [66, 67, 93], "lgb": [66, 67, 160, 170], "valid_set_typ": 66, "best_param": [66, 67, 93, 119, 156, 163, 166], "best_scor": [66, 67], "sample_train_set": [66, 67], "subset": [66, 67, 122, 164], "nfold": 67, "stratifi": 67, "shuffl": [67, 113, 115, 164], "fpreproc": 67, "show_stdv": 67, "return_cvboost": 67, "emploi": [67, 93], "lightgbmtun": [67, 68], "cancer": [67, 68, 160], "detect": [67, 68, 83, 89], "init_model": 67, "eval_train_metr": 67, "cvbooster": 67, "drop": 68, "suspend": 68, "loaded_studi": [69, 100], "root": [70, 71, 72, 73, 74, 75, 159], "logger": [70, 71, 72, 73, 74, 75], "sy": [70, 73, 158, 163, 169, 170], "stderr": [70, 73], "enable_default_handl": 70, "02": [70, 75, 159], "23": [70, 156, 163, 170], "00": [70, 162, 164, 174], "54": [70, 156, 163, 170], "314": 70, "356": 70, "11": [70, 117, 156, 158, 163, 164, 170], "enable_propag": 71, "disable_default_handl": [71, 72, 73], "getlogg": [71, 73], "setlevel": [71, 73], "addhandl": [71, 73, 158, 163, 169, 170], "filehandl": [71, 73], "foo": [71, 73, 159], "propog": 71, "readlin": [71, 73], "startswith": [71, 73], "doubl": 73, "2021": [74, 75, 114], "31": [74, 75, 156, 170], "05": [74, 156, 158, 159, 166], "35": [74, 75, 128, 156, 170], "232": 74, "238": 74, "245": 74, "critic": [74, 75, 109], "fatal": [74, 75, 109], "088": 75, "091": 75, "096": 75, "abstract": [76, 111, 112, 125, 133, 167, 168], "judg": [76, 77, 78, 79, 80, 81, 82, 83], "min_resourc": [77, 82, 171], "max_resourc": [77, 171], "reduction_factor": [77, 82, 171], "bootstrap_count": [77, 82], "hyperband": [77, 158, 171], "successivehalv": 77, "sha": 77, "finit": [77, 113], "resourc": [77, 82, 158], "attack": 77, "paper": [77, 82, 114, 117, 118, 120, 122, 124, 127, 129, 147, 158], "counterpart": 77, "full": [77, 90, 93, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "characterist": [77, 158], "startup": 77, "successivehalvingprun": [77, 158], "bracket": 77, "adapt": 77, "factor": [77, 82, 103], "mathrm": 77, "floor": 77, "log_": 77, "texttt": 77, "frac": 77, "too": 77, "larg": 77, "alloc": [77, 82], "r": [77, 82, 114, 126], "success": [77, 82, 93, 118, 122, 158], "With": [77, 115, 157], "largest": 77, "No": [77, 128, 158], "reduct": [77, 82], "eta": [77, 82, 126, 128, 130], "rung": [77, 82], "incompat": 77, "n_warmup_step": [78, 81, 83, 102, 103, 160], "interval_step": [78, 81, 83], "n_min_trial": [78, 81], "median": [78, 158], "rule": [78, 122, 158], "wors": 78, "offset": [78, 81, 83], "warmup": [78, 81, 83, 102, 103, 168], "postpon": [78, 81, 83], "wrapped_prun": 80, "patienc": 80, "min_delta": 80, "toler": [80, 158], "equival": [80, 171], "consecut": [80, 102, 103], "percentil": [81, 158], "bottom": 81, "inclus": 81, "25th": 81, "min_early_stopping_r": 82, "asynchron": [82, 120, 158], "halv": [82, 158], "bandit": 82, "care": [82, 103, 115, 166], "simple_prun": 82, "chainer_integr": 82, "heurist": [82, 117, 122], "look": 82, "min": [82, 167, 170], "place": [82, 102, 168], "fraction": 82, "won": [82, 93, 118, 122], "competit": 82, "repeat": 82, "procedur": [82, 89, 112], "At": [82, 112, 125, 167], "outli": 83, "threshold": [83, 158, 169], "fall": 83, "behind": [83, 103, 122], "objective_for_upp": 83, "enumer": [83, 164], "ys_for_upp": 83, "objective_for_low": 83, "ys_for_low": 83, "90": [83, 156, 170], "filepath": [84, 86], "nfsv3": [84, 86], "acquir": [84, 86], "o_excl": 84, "kernel": [84, 103], "journalfilesymlinklock": 84, "protect": [84, 86], "block": [84, 86, 171], "_lock_fil": 84, "file_path": [85, 88], "lock_obj": [85, 88], "journalfilebaselock": 85, "append_log": [85, 87], "read_log": [85, 87], "log_number_from": [85, 87], "nfsv2": 86, "journalfileopenlock": [86, 88], "symbol": 86, "_lock_target_fil": 86, "use_clust": 87, "prefix": 87, "redi": 87, "password": 87, "ie": 87, "localhost": [87, 159], "6379": 87, "atom": 87, "inconsist": 87, "load_snapshot": 87, "snapshot": [87, 88], "byte": 87, "save_snapshot": 87, "log_storag": 88, "latest": [88, 89, 168], "crash": 88, "re": [88, 93, 102, 103, 119, 167, 173, 174, 175], "establish": 88, "content": 88, "replai": 88, "benefit": 88, "reduc": [88, 114, 123, 172], "granular": 88, "simpler": [88, 158], "cach": 88, "window": 88, "privileg": 88, "held": [88, 93], "appear": [88, 168], "basejournallogstorag": 88, "skip_compatibility_check": 89, "skip_table_cr": 89, "pool_siz": 89, "create_engin": 89, "grace": 89, "stale": [89, 91], "tabl": [89, 131, 158, 160, 166], "pool_pre_p": 89, "wait_timeout": 89, "often": [89, 122], "get_all_vers": 89, "get_current_vers": 89, "get_failed_trial_callback": 89, "get_head_vers": 89, "get_heartbeat_interv": 89, "record_heartbeat": 89, "session": [89, 156], "threadlocalregistri": 89, "close": [89, 106, 156], "destruct": 89, "occasion": [89, 115], "touch": 89, "inherit_intermediate_valu": 90, "recreat": 90, "queue": [90, 93], "again": [90, 93, 156, 172], "retried_trial_numb": 90, "repetit": 90, "retry_histori": 90, "preempt": 90, "usag": [90, 103, 160, 168], "max": [90, 92, 164, 167], "indefinit": 90, "mani": [90, 93, 131, 159], "static": [90, 117, 122], "ascend": 90, "long": 91, "certain": [92, 168, 169], "toward": [92, 127], "add_trial": [93, 105, 170], "create_tri": [93, 170], "other_studi": 93, "is_finish": [93, 104], "fixed_distribut": 93, "lifetim": [93, 112, 116], "outsid": 93, "scope": 93, "adam": [93, 157, 164], "sgd": [93, 103], "lr": [93, 140, 148, 164], "0001": 93, "locat": [93, 166], "domin": [93, 118, 144, 152], "t0": 93, "t1": 93, "zip": [93, 171, 175], "skip_if_exist": 93, "memo": 93, "produc": [93, 127], "relat": [93, 134, 135], "shouldn": 93, "mutat": [93, 118], "corrupt": 93, "unexpect": 93, "done": [93, 108], "choos": [93, 122], "sigint": 93, "cleanli": 93, "maxtrialscallback": [93, 159], "consumpt": 93, "ne": 93, "invoc": [93, 156], "exit": 93, "immedi": 93, "spawn": 93, "skip_if_finish": 93, "df": [93, 140, 148, 163], "gradient": [93, 168], "descent": [93, 168], "128": [93, 103, 117, 140, 148, 157, 164], "gy": [93, 140, 148], "final": [93, 159], "succe": 93, "told": [93, 166], "short": 93, "datetime_start": [93, 95, 102, 103, 156, 163], "datetime_complet": [93, 102, 156, 163], "multi_index": 93, "panda": [93, 163], "analyz": [93, 147, 156, 160, 172], "histogram": 93, "csv": 93, "isinst": [93, 105, 167], "multiindex": 93, "column": 93, "hierarch": 93, "natur": [93, 114, 170], "flatten": 93, "params_x": [93, 163], "pd": 93, "implicitli": 93, "not_set": 94, "aggreg": 95, "get_all_study_summari": [95, 165], "datetim": [95, 102, 103, 156, 163], "ran": 95, "pre": [101, 120, 171], "contrast": 101, "deploi": [101, 102], "mutabl": 102, "despit": 102, "overwritten": 102, "best_trial_copi": 102, "timedelta": 102, "last_step": [102, 168], "noth": 102, "regardless": 102, "combin": [102, 108, 112, 115, 124, 125, 126, 127, 128, 129, 130, 131], "manag": [103, 135, 156, 160], "seamlessli": 103, "henc": 103, "float32": 103, "convers": 103, "neural_network": 103, "mlpclassifi": 103, "batchsiz": [103, 164], "momentum": 103, "hidden_layer_s": 103, "50": [103, 115, 118, 144, 152, 156, 166, 168, 170], "batch_siz": [103, 164, 171], "solver": [103, 171], "meaning": 103, "similarli": 103, "exact": 103, "poli": 103, "rbf": 103, "flexibl": [103, 166, 171], "dot": 103, "round": 103, "learning_rate_init": 103, "power_t": 103, "n_estim": 103, "400": 103, "ge": 103, "divid": 103, "grid": [103, 115, 158], "width": [103, 167], "uniformli": [103, 114, 124, 127, 156], "nearest": 103, "tend": 103, "unfinish": 104, "uncaught": 104, "meandecreaseimpurityimportanceevalu": 106, "pai": 106, "attent": 106, "framework": [108, 158], "serv": 108, "compliant": 108, "mlflowcallback": [108, 169], "optunasearchcv": 108, "aka": 109, "primarili": 110, "alias": 110, "lifecycl": 110, "character": 111, "child": [111, 118, 124, 126, 127, 128, 130, 131, 133], "explain": [111, 131, 171], "concept": 111, "correl": [112, 167], "don": [112, 156, 166, 167], "belong": [112, 167], "figur": [112, 138, 146, 147, 148, 149, 150, 151, 152, 153, 154], "depict": 112, "brute": 113, "exhaust": 113, "elif": 113, "entir": [113, 156, 158], "randomli": [113, 115, 120], "restart_strategi": 114, "popsiz": 114, "inc_pops": 114, "use_separable_cma": 114, "with_margin": 114, "source_tri": 114, "cmae": 114, "room": 114, "multivari": [114, 122, 128, 131], "hansen": 114, "evolut": 114, "1604": 114, "00772": 114, "2016": 114, "auger": 114, "restart": 114, "proceed": [114, 128, 129], "ieee": 114, "congress": [114, 128], "evolutionari": [114, 128], "cec": 114, "2005": 114, "1769": 114, "1776": 114, "press": 114, "raymond": 114, "ro": 114, "nikolau": 114, "complex": [114, 126, 131, 168], "10th": 114, "confer": [114, 129], "sep": 114, "2008": 114, "dortmund": 114, "germani": 114, "inria": 114, "00287367": 114, "masahiro": 114, "nomura": 114, "shuhei": 114, "watanab": 114, "youhei": 114, "akimoto": 114, "yoshihiko": 114, "masaki": 114, "onishi": 114, "warm": 114, "aaai": 114, "hamano": 114, "saito": 114, "m": [114, 120, 131], "shirakawa": 114, "margin": 114, "mix": 114, "black": 114, "box": [114, 170], "gecco": [114, 130], "converg": 114, "ipop": 114, "covari": 114, "matrix": 114, "diagon": 114, "consequ": 114, "outperform": [114, 122, 158], "transfer": 114, "knowledg": 114, "hpo": 114, "promis": [114, 168], "prohibit": 114, "togeth": 114, "99": [115, 156, 170], "quantiz": 115, "snippet": [115, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "total": [115, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174], "include_prun": [116, 123], "far": [116, 123, 172], "ordered_dict": [116, 123], "consider_prior": [117, 122], "prior_weight": [117, 122], "consider_magic_clip": [117, 122], "consider_endpoint": [117, 122], "n_ehvi_candid": 117, "24": [117, 122, 156, 159, 164, 170], "default_gamma": [117, 122], "weights_abov": 117, "_default_weights_abov": 117, "motp": [117, 122], "multiobject": [117, 118, 122], "structur": [117, 122, 158], "parzen": [117, 122, 158], "enhanc": [117, 122], "stabil": [117, 122], "impos": [117, 122], "effect": [117, 122], "smallest": [117, 122], "varianc": [117, 122], "densiti": [117, 122], "grain": [117, 122], "latin": 117, "hypercub": 117, "num_vari": 117, "hyperopt_paramet": [117, 122], "hyperopt": [117, 122], "population_s": 118, "mutation_prob": 118, "crossov": [118, 124, 125, 126, 127, 128, 129, 130, 131, 132], "crossover_prob": 118, "swapping_prob": [118, 129], "nsga": 118, "ii": [118, 158], "stand": 118, "nondomin": [118, 158], "genet": [118, 124, 128, 129, 130, 158], "known": [118, 120], "elitist": 118, "n_parent": [118, 125], "undxcrossov": 118, "spxcrossov": 118, "parent_tri": 118, "parent": [118, 124, 125, 126, 127, 128, 129, 130], "basecrossov": 118, "readthedoc": 118, "nsgaii": [118, 131], "uniformcrossov": 118, "unless": 118, "swap": [118, 129], "said": 118, "infeas": [118, 144, 152], "overal": 118, "fixed_param": 119, "base_sampl": 119, "partial_sampl": 119, "unfix": 119, "qmc_type": 120, "sobol": 120, "scrambl": 120, "warn_asynchronous_seed": 120, "mont": [120, 158], "carlo": [120, 158], "discrep": 120, "qmc": 120, "randam": 120, "bergstra": 120, "jame": 120, "yoshua": 120, "bengio": 120, "hyper": [120, 122, 124], "research": 120, "2012": 120, "stat": 120, "mention": 120, "afterward": 120, "halton": 120, "degrad": 120, "n_ei_candid": 122, "default_weight": 122, "constant_liar": [122, 131], "mixtur": 122, "gmm": 122, "l": [122, 124], "ratio": 122, "scienc": 122, "vision": 122, "bad": 122, "contribut": 122, "propos": 122, "bohb": 122, "robust": [122, 168], "decompos": 122, "past": 122, "joint": 122, "subspac": 122, "partit": 122, "whole": [122, 172], "becom": 122, "z": [122, 143, 151], "nearbi": 122, "abnorm": 122, "leav": [122, 170], "Such": 122, "zombi": 122, "constant": 122, "liar": 122, "costli": 122, "signific": 122, "intersectionsearchspac": 123, "much": [123, 158], "blend": 124, "rectangl": 124, "blx": 124, "eshelman": 124, "d": [124, 131, 158], "schaffer": 124, "real": [124, 127, 128, 130, 156], "schemata": 124, "foga": 124, "1992": 124, "parametr": [124, 128], "parents_param": [124, 125, 126, 127, 128, 129, 130], "rng": [124, 125, 126, 127, 128, 129, 130], "search_space_bound": [124, 125, 126, 127, 128, 129, 130], "num_par": [124, 125, 126, 127, 128, 129, 130], "num_paramet": [124, 125, 126, 127, 128, 129, 130], "len_search_spac": [124, 125, 126, 127, 128, 129, 130], "dimension": [124, 125, 126, 127, 128, 129, 130, 142, 150, 158, 160], "moment": 125, "simul": [126, 130, 167], "polynomi": 126, "deb": 126, "agraw": 126, "syst": 126, "1995": 126, "pag": 126, "small": [126, 130], "distant": [126, 130], "children": [126, 130], "epsilon": 127, "simplex": 127, "spx": 127, "shigeyoshi": 127, "tsutsui": 127, "david": 127, "goldberg": 127, "kumara": 127, "sastri": 127, "linkag": 127, "ga": 127, "illig": 127, "2000": 127, "expans": 127, "sqrt": [127, 128, 139, 147], "sigma_xi": 128, "sigma_eta": 128, "unimod": 128, "h": 128, "kita": 128, "ono": 128, "kobayashi": 128, "1999": 128, "cec99": 128, "cat": 128, "99th8406": 128, "pp": [128, 158], "1581": 128, "1588": 128, "vol": [128, 158], "xi": 128, "drawn": 128, "gilbert": 129, "syswerda": 129, "1989": 129, "3rd": 129, "morgan": 129, "kaufmann": 129, "san": 129, "francisco": 129, "ca": 129, "usa": 129, "vsbx": 130, "maintain": 130, "excel": 130, "sbx": 130, "pedro": 130, "ballest": 130, "jonathan": 130, "carter": 130, "modal": 130, "706": 130, "717": 130, "overview": [131, 158], "gridsampl": [131, 158], "qmcsampler": [131, 158], "bruteforcesampl": 131, "infinit": 131, "dn": 131, "mp": 131, "10000": 131, "ineffici": 131, "regular": 131, "wish": 133, "public": 134, "plotli": [136, 138, 146, 147, 148, 149, 150, 151, 152, 153, 154, 160], "isn": [136, 137, 138, 142, 146, 150], "target_nam": [138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 160, 164], "contour": [138, 146], "miss": [138, 142, 146, 150, 153], "displai": [138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153], "color": [138, 144, 146, 152], "colormap": [138, 142, 146, 150], "revers": [138, 142, 146, 150], "edf": [139, 147], "empir": [139, 147, 160], "legend": [139, 140, 141, 142, 149, 150], "adjust": [139, 140, 141], "math": [139, 147], "acklei": [139, 147], "co": [139, 147], "pi": [139, 147], "widest": [139, 147], "study0": [139, 147], "500": [139, 147], "narrow": [139, 147, 158], "study1": [139, 147], "narrowest": [139, 147], "optimum": [139, 147], "study2": [139, 147], "compar": [139, 141, 147, 149, 168], "axi": [139, 141, 142, 143, 144, 145, 147, 149, 150, 151, 152, 153], "error_bar": [141, 149], "tight_layout": 141, "yourself": 141, "image_nam": 141, "bbox_inch": 141, "tight": 141, "include_dominated_tri": [144, 152], "axis_ord": [144, 152], "titl": [144, 152], "objective_index": [144, 152], "v5": [144, 152], "categori": [144, 152], "slice": [145, 153, 160], "fig": [146, 147, 148, 149, 150, 151, 152, 153], "graph_obj": [146, 147, 148, 149, 150, 151, 152, 153], "practic": 147, "jupyterlab": 154, "render": 154, "analysi": [154, 161, 162, 175], "click": [156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "download": [156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175], "quickli": 156, "move": 156, "convention": 156, "repeatedli": 156, "upon": 156, "found_x": 156, "0238614945869506": 156, "0005693709239230746": 156, "clarifi": 156, "terminologi": 156, "outcom": 156, "34": [156, 170], "2023": [156, 163], "494691": 156, "498440": 156, "030245238497216": 156, "394132": 156, "394678": 156, "4684643919892295": 156, "695927300025232": 156, "395065": 156, "395279": 156, "969499703191985": 156, "685709148098958": 156, "395569": 156, "395738": 156, "656791722645426": 156, "0018382688938234444": 156, "395993": 156, "396151": 156, "042875038120373": 156, "13523716330251": 156, "396393": 156, "396555": 156, "92749838998734": 156, "2769128271200952": 156, "396793": 156, "396950": 156, "526225072682873": 156, "04167337879410918": 156, "397184": 156, "397349": 156, "2041405858571714": 156, "12858986795110808": 156, "397583": 156, "397751": 156, "3585942943649663": 156, "277284129332885": 156, "398005": 156, "398178": 156, "5054508834405205": 156, "834355168291452": 156, "398410": 156, "398579": 156, "291558167235003": 156, "138": 156, "98708448997192": 156, "398810": 156, "403267": 156, "789278370196028": 156, "58": [156, 170], "58090975530964": 156, "403586": 156, "407303": 156, "653816678971978": 156, "18": [156, 158, 170], "185045527257085": 156, "407611": 156, "411160": 156, "2643927501177803": 156, "493145218346017": 156, "411465": 156, "414991": 156, "4210303301373972": 156, "14": [156, 158, 168, 170], "1499360126421285": 156, "415312": 156, "418897": 156, "6739364264398899": 156, "03824877089248927": 156, "419201": 156, "422721": 156, "804427070143925": 156, "42": [156, 160, 170], "57300036939143": 156, "423024": 156, "426603": 156, "5247988757808795": 156, "8126873477824303": 156, "426904": 156, "430384": 156, "047389606761648384": 156, "3791961170485918": 156, "430683": 156, "434363": 156, "1743918072979698": 156, "19": [156, 158, 164, 168, 170], "975240417208425": 156, "434734": 156, "438315": 156, "555550351969575": 156, "347162943119382": 156, "438618": 156, "442198": 156, "0849851182009385": 156, "21487710567638182": 156, "442501": 156, "446074": 156, "536451614525105": 156, "22": [156, 166, 170], "36922061539021556": 156, "446378": 156, "450036": 156, "3923647349024124": 156, "5440970321430285": 156, "450335": 156, "453989": 156, "595022580449264": 156, "8107999996086": 156, "454290": 156, "457901": 156, "9682991762301523": 156, "0724418499248555": 156, "458205": 156, "461768": 156, "7308497632829287": 156, "26": [156, 170], "4617077958744042": 156, "462086": 156, "465705": 156, "209011081783126": 156, "27": [156, 168, 170], "713014888293213": 156, "466041": 156, "469622": 156, "273074225906466": 156, "28": [156, 164, 170], "0581461925113353": 156, "469944": 156, "473644": 156, "9713376683715227": 156, "29": [156, 168, 170], "765655987122287": 156, "473968": 156, "477711": 156, "572905818395202": 156, "6201434659139767": 156, "478033": 156, "481663": 156, "787491883078154": 156, "0626793237431375": 156, "481982": 156, "485935": 156, "7496416094013674": 156, "214446255414964": 156, "486244": 156, "490280": 156, "5118984391463854": 156, "33": [156, 170], "252819822814494": 156, "490657": 156, "494385": 156, "291903100659907": 156, "30939422309888": 156, "498748": 156, "502468": 156, "320657311188053": 156, "5744022367193458": 156, "502775": 156, "506544": 156, "7578932884775704": 156, "37": [156, 168, 170], "02307216244828": 156, "506847": 156, "510599": 156, "361544699123039": 156, "236038414843122": 156, "510905": 156, "514697": 156, "288239151584275": 156, "39": [156, 159, 164, 170], "03922746235707369": 156, "515002": 156, "518915": 156, "8019407604854707": 156, "40": [156, 168, 170], "846969825370218": 156, "519223": 156, "523163": 156, "6166715165206003": 156, "02404208090504655": 156, "523466": 156, "527261": 156, "1550550899037066": 156, "08856087062594427": 156, "527569": 156, "531411": 156, "297591785212469": 156, "43": [156, 159, 170], "3856279934877869": 156, "531718": 156, "535503": 156, "8228729917771036": 156, "44": [156, 168, 170], "0485729755198303": 156, "535808": 156, "539621": 156, "431283681008007": 156, "02650330867323782": 156, "539926": 156, "543766": 156, "1627983681528713": 156, "46": [156, 170], "25539075363701347": 156, "544077": 156, "547858": 156, "505362002565501": 156, "47": [156, 168, 170], "196500141767654": 156, "548170": 156, "552120": 156, "04853609725766228": 156, "48": [156, 170], "9418897518504084": 156, "552438": 156, "556389": 156, "7151937942548674": 156, "49": [156, 164, 170, 174], "743005844374895": 156, "556721": 156, "560625": 156, "8396622044621185": 156, "3126563505148898": 156, "560945": 156, "564778": 156, "8542878413340942": 156, "51": [156, 170], "003952312118742167": 156, "565092": 156, "568956": 156, "9371325830120072": 156, "52": [156, 170], "10822541165271748": 156, "569273": 156, "573195": 156, "328976308649601": 156, "53": [156, 164, 166, 170], "3455492184123228": 156, "573519": 156, "577383": 156, "4121656539361427": 156, "2350780151200116": 156, "577708": 156, "581605": 156, "1113406386522593": 156, "55": [156, 170], "234560497951706": 156, "581948": 156, "585917": 156, "20151160750153685": 156, "56": [156, 170], "642780350064675": 156, "586239": 156, "590326": 156, "577359181422852": 156, "57": [156, 170], "03269440605937729": 156, "590642": 156, "594579": 156, "180815945257539": 156, "03539461479555667": 156, "594895": 156, "599002": 156, "1881345656586175": 156, "670453672862306": 156, "599370": 156, "603412": 156, "181187644901284": 156, "3639602088256164": 156, "603728": 156, "607675": 156, "167887070236509": 156, "61": [156, 170], "3196512257044537": 156, "607985": 156, "611888": 156, "5653770650676004": 156, "62": [156, 168, 170], "0021111078450525714": 156, "612203": 156, "616194": 156, "9540532063680982": 156, "63": [156, 170], "7827081684988695": 156, "616512": 156, "620451": 156, "9449185506079347": 156, "8134143720244034": 156, "620769": 156, "624723": 156, "098105121411368": 156, "65": [156, 170], "0019849048372476844": 156, "625041": 156, "629020": 156, "9554477291572283": 156, "66": [156, 168, 170], "067667771267636": 156, "629334": 156, "633397": 156, "24852411627575188": 156, "67": [156, 164, 170], "0394510814498618": 156, "633710": 156, "637654": 156, "8013770369522653": 156, "68": [156, 168, 170], "2353023326427257": 156, "637980": 156, "641944": 156, "495092750515073": 156, "69": [156, 170], "7044977874563072": 156, "642254": 156, "646256": 156, "8393436646906363": 156, "70": [156, 170], "32371275490929274": 156, "646572": 156, "650772": 156, "4310423962110246": 156, "71": [156, 170], "0065187692966747835": 156, "651087": 156, "655105": 156, "0807388958103514": 156, "72": [156, 170], "7524792012691404": 156, "655417": 156, "659487": 156, "6761876261081632": 156, "73": [156, 170], "01402411741056693": 156, "659798": 156, "663858": 156, "8815765335308625": 156, "74": [156, 168, 170], "6892014016936185": 156, "664167": 156, "668244": 156, "16545639570359816": 156, "75": [156, 170], "4006842975632164": 156, "668557": 156, "672670": 156, "3670037144159404": 156, "76": [156, 170], "500512763767523": 156, "672985": 156, "677035": 156, "7074692670127254": 156, "77": [156, 170], "7947839759139115": 156, "677346": 156, "681423": 156, "6603045212012129": 156, "78": [156, 168, 170], "659408336327597": 156, "681736": 156, "685960": 156, "767563610168264": 156, "79": [156, 170], "703119716909596": 156, "686269": 156, "690416": 156, "924349167097696": 156, "80": [156, 170], "015199145351067174": 156, "690725": 156, "694821": 156, "8767151860484546": 156, "81": [156, 164, 170], "09734697409395059": 156, "695135": 156, "699335": 156, "6879952338602011": 156, "82": [156, 170], "9064386373415743": 156, "699649": 156, "703791": 156, "9520707102634627": 156, "83": [156, 170], "005081522357720043": 156, "704100": 156, "708023": 156, "928715202478228": 156, "84": [156, 170], "6921270603364953": 156, "708333": 156, "712413": 156, "1680582590490514": 156, "85": [156, 170], "9976276130204886": 156, "712725": 156, "716760": 156, "413374548030524": 156, "86": [156, 170], "013209140587429575": 156, "717076": 156, "721240": 156, "8850689746524918": 156, "87": [156, 163, 170], "1733120052930532": 156, "721555": 156, "725805": 156, "5257842745062535": 156, "88": [156, 170], "31842346562037027": 156, "726137": 156, "730269": 156, "564290231725103": 156, "89": [156, 170], "0027105848808299817": 156, "730584": 156, "734688": 156, "9479367223387734": 156, "225552990085914": 156, "735001": 156, "739214": 156, "107046968328767": 156, "91": [156, 170], "08377232718126619": 156, "739529": 156, "743510": 156, "7105655045070367": 156, "92": [156, 170, 172], "014776959807097569": 156, "743828": 156, "747954": 156, "1215605191133107": 156, "93": [156, 170], "1774496331713449": 156, "748271": 156, "752358": 156, "9148964873472463": 156, "94": [156, 170], "42512481624718734": 156, "752670": 156, "756778": 156, "3479840368156717": 156, "95": [156, 164, 170], "3442641258981772": 156, "757093": 156, "761240": 156, "586740254199571": 156, "96": [156, 170], "007111458024642353": 156, "761560": 156, "765594": 156, "0843294611902765": 156, "97": [156, 170], "531001812734232": 156, "765922": 156, "769994": 156, "879096009450883": 156, "98": [156, 170], "939635197881233": 156, "770311": 156, "774491": 156, "22252900945774678": 156, "220608307630519": 156, "774807": 156, "779083": 156, "490170563268017": 156, "200": [156, 159], "0035913469063193": 156, "2897772601529554e": 156, "898": [156, 162], "001_first": [156, 162], "jupyt": [156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175], "ipynb": [156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "galleri": [156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175], "sphinx": [156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175], "logarithm": 157, "momentumsgd": 157, "num_lay": 157, "num_channel": 157, "512": 157, "num_unit": 157, "dropout_r": 157, "drop_path_r": 157, "classifier_nam": 157, "classifier_obj": 157, "nn": [157, 164], "create_model": 157, "in_siz": 157, "n_layer": [157, 164], "layer": [157, 164], "n_unit": 157, "n_units_l": [157, 164], "relu": [157, 164], "difficulti": 157, "roughli": 157, "That": 157, "unimport": 157, "001": [157, 162, 168], "002_configur": [157, 162], "down": 158, "lead": 158, "explan": [158, 166], "partialfixedsampl": 158, "__class__": 158, "__name__": [158, 159, 166], "stage": 158, "nopprun": 158, "percentileprun": [158, 168], "thresholdprun": [158, 168], "meet": 158, "predefin": 158, "major": 158, "usecas": 158, "iri": [158, 165, 168], "valid_x": [158, 160, 170], "train_i": [158, 160, 170], "valid_i": [158, 160, 170], "test_siz": [158, 160, 168, 170], "stream": [158, 163, 169, 170], "stdout": [158, 163, 169, 170], "get_logg": [158, 163, 169, 170], "streamhandl": [158, 163, 169, 170], "e3515ff7": 158, "6321": 158, "4b42": 158, "9e11": 158, "d0ed58a38141": 158, "10526315789473684": 158, "3316841467688193e": 158, "13157894736842102": 158, "041889760011285956": 158, "07894736842105265": 158, "002646181202399905": 158, "052631578947368474": 158, "032315177947149": 158, "00768203088266496": 158, "00013856637372842734": 158, "00016402547916040402": 158, "wiki": 158, "kurobako": 158, "sai": 158, "consult": 158, "et": 158, "al": 158, "ieic": 158, "tran": 158, "j103": 158, "615": 158, "631": 158, "japanes": 158, "gp": 158, "ei": 158, "suffici": 158, "xgboostpruningcallback": 158, "introduc": [158, 171], "pruning_callback": [158, 160, 170], "bst": 158, "xgb": 158, "dtrain": [158, 160, 170], "eval": [158, 164], "dvalid": [158, 160, 170], "521": [158, 162], "003_efficient_optimization_algorithm": [158, 162], "straightforward": 159, "cours": 159, "kubernet": 159, "video": [159, 175], "642": 159, "__main__": [159, 166], "973": 159, "35553104173011": 159, "73465151598285": 159, "04": [159, 162, 164], "013": 159, "6002397305938905": 159, "144816945707463": 159, "028194513284051464": 159, "03": [159, 164], "748": 159, "8320877810162361": 159, "783": 159, "45966755098074": 159, "945671597566982": 159, "deadlock": 159, "seriou": 159, "put": 159, "q5": 159, "004_distribut": [159, 162], "walk": [160, 170], "breast": 160, "plot_pareto_front": [160, 164], "dashboard": 160, "graph": 160, "interact": [160, 166], "plot_contour": 160, "plot_edf": 160, "plot_intermediate_valu": 160, "plot_optimization_histori": 160, "plot_parallel_coordin": 160, "plot_slic": 160, "load_breast_canc": [160, 170], "boosting_typ": [160, 170], "gbdt": [160, 170], "lightgbmpruningcallback": [160, 170], "gbm": [160, 170], "pred": [160, 164, 170, 172], "pred_label": [160, 170], "rint": [160, 170], "curv": 160, "597": [160, 162], "005_visual": [160, 162], "showcas": [161, 164, 169, 173, 175], "016": 162, "tutorial_10_key_featur": 162, "mb": [162, 174], "01": [162, 164, 171, 174], "storage_nam": 163, "420766200882653": 163, "32825389527917537": 163, "931998575398865": 163, "5961088102835355": 163, "127": 163, "38563020795078": 163, "286524274901941": 163, "88065339561404": 163, "408147770908329": 163, "101": [163, 170], "18104064109019": 163, "05887869700645": 163, "19568553408061": 163, "337863006816956": 163, "restored_sampl": 163, "420766": 163, "328254": 163, "931999": 163, "596109": 163, "385630": 163, "286524": 163, "880653": 163, "408148": 163, "181041": 163, "058879": 163, "195686": 163, "337863": 163, "630047": 163, "650229": 163, "673516": 163, "687221": 163, "704675": 163, "717582": 163, "790896": 163, "808850": 163, "829420": 163, "843011": 163, "857421": 163, "869083": 163, "608": [163, 174], "001_rdb": [163, 174], "fashion": 164, "mnist": [164, 165], "flop": 164, "fvcore": 164, "measur": 164, "torchvis": 164, "flopcountanalysi": 164, "is_avail": 164, "n_train_exampl": 164, "n_valid_exampl": 164, "define_model": 164, "in_featur": 164, "out_featur": 164, "dropout_": 164, "dropout": 164, "logsoftmax": 164, "dim": 164, "train_model": 164, "train_load": 164, "batch_idx": 164, "view": 164, "zero_grad": 164, "nll_loss": 164, "eval_model": 164, "valid_load": 164, "no_grad": 164, "argmax": 164, "keepdim": 164, "eq": 164, "view_a": 164, "randn": 164, "train_dataset": 164, "fashionmnist": 164, "totensor": 164, "dataload": 164, "val_dataset": 164, "val_load": 164, "300": 164, "s3": 164, "eu": 164, "central": 164, "amazonaw": 164, "imag": 164, "idx3": 164, "ubyt": 164, "gz": 164, "raw": 164, "26421880": 164, "39936": 164, "09": 164, "379235": 164, "40it": 164, "102400": 164, "366371": 164, "47it": 164, "376832": 164, "1205846": 164, "45it": 164, "945152": 164, "2180773": 164, "96it": 164, "2928640": 164, "6973993": 164, "78it": 164, "6365184": 164, "12166150": 164, "03it": 164, "10256384": 164, "18532234": 164, "24it": 164, "13928448": 164, "19524367": 164, "17it": 164, "17726464": 164, "23474167": 164, "62it": 164, "21361664": 164, "22594880": 164, "61it": 164, "25042944": 164, "25408653": 164, "23it": 164, "26422272it": 164, "16648790": 164, "64it": 164, "idx1": 164, "29515": 164, "29696it": 164, "325610": 164, "t10k": 164, "4422102": 164, "41984": 164, "407154": 164, "85it": 164, "105472": 164, "381381": 164, "82it": 164, "317440": 164, "1009430": 164, "14it": 164, "855040": 164, "2011754": 164, "26it": 164, "2609152": 164, "6329568": 164, "79it": 164, "4422656it": 164, "5984803": 164, "33it": 164, "5148": 164, "6144it": 164, "31619391": 164, "aten": 164, "log_softmax": 164, "encount": 164, "pick": 164, "highest": 164, "trial_with_highest_accuraci": 164, "tnumber": 164, "tparam": 164, "tvalu": 164, "n_units_l0": 164, "106": 164, "dropout_0": 164, "3234014701382485": 164, "003177990722747878": 164, "84164": 164, "83828125": 164, "198": [164, 174], "002_multi_object": [164, 174], "annot": 165, "cross_val_scor": 165, "9266666666666667": 165, "226": [165, 174], "003_attribut": [165, 174], "ipython": 166, "shell": 166, "fine": 166, "29730733481831e": 166, "0047930234036757": 166, "drug": 166, "lab": 166, "null": 166, "08": 166, "06": 166, "158": 166, "512238141966016": 166, "distribution_to_json": 166, "conduct": 166, "888": 166, "399": [166, 174], "004_cli": [166, 174], "refin": 167, "skoptsampl": 167, "respons": 167, "anneal": 167, "sa": 167, "temperatur": 167, "_rng": 167, "_temperatur": 167, "_current_tri": 167, "transit": 167, "prev_trial": 167, "neighborhood": 167, "msg": 167, "notimplementederror": 167, "current_valu": 167, "neighbor_low": 167, "neighbor_high": 167, "rest": 167, "unrel": 167, "boilerpl": 167, "favor": [167, 168], "simplic": 167, "simulated_ann": 167, "82320902297237": 167, "09567471770871583": 167, "832362674581012": 167, "speak": 167, "332": [167, 174], "005_user_defined_sampl": [167, 174], "illustr": 168, "aggress": 168, "aim": [168, 171], "stochast": 168, "demonstr": [168, 172], "diagnost": 168, "holdout": 168, "enough": [168, 171], "had": 168, "_state": 168, "warmup_step": 168, "warmup_tri": 168, "_warmup_step": 168, "_warmup_tri": 168, "yet": [168, 170], "this_scor": 168, "completed_tri": 168, "other_scor": 168, "lastli": 168, "confirm": 168, "train_siz": 168, "hing": 168, "log_loss": 168, "perceptron": 168, "00001": 168, "784": [168, 174], "006_user_defined_prun": [168, 174], "great": 169, "stopwhentrialkeepbeingprunedcallback": 169, "_consequtive_pruned_count": 169, "study_stop_cb": 169, "8001e60c": 169, "ca94": 169, "4e07": 169, "bd43": 169, "7ed6fca694ef": 169, "0537248984658506": 169, "8261004860368222": 169, "19454521230617383": 169, "3156232901331024": 169, "33083751213891366": 169, "006": [169, 174], "007_optuna_callback": [169, 174], "ve": 170, "lit": 170, "bagging_fraq": 170, "expectedli": 170, "972027972027972": 170, "986013986013986": 170, "9440559440559441": 170, "5506766301477889": 170, "965034965034965": 170, "49214746028116485": 170, "951048951048951": 170, "7494305299365314": 170, "6463976390903002": 170, "8378692289828823": 170, "958041958041958": 170, "8231361934235497": 170, "9790209790209791": 170, "715564280537435": 170, "6363217393107216": 170, "9093174177600946": 170, "9031919693250833": 170, "8008993867787653": 170, "993006993006993": 170, "9135692816381003": 170, "think": 170, "9f345df8": 170, "d56d": 170, "4efa": 170, "9823": 170, "b12398cd1638": 170, "668081063865479": 170, "4263705737357748": 170, "6882372048844847": 170, "9874412856808806": 170, "8265352982849206": 170, "7013992586052249": 170, "9952754170707239": 170, "9566138467313274": 170, "9720604022341277": 170, "9855448014687682": 170, "9751600540332035": 170, "9162555704403906": 170, "979578586704233": 170, "663": [170, 174], "008_specify_param": [170, 174], "benefici": 171, "tradit": 171, "supervis": [171, 172], "classif": [171, 172], "logisticregress": [171, 172], "make_classif": [171, 172], "n_featur": [171, 172], "x_test": [171, 172], "y_test": [171, 172], "naiv": 171, "suggest_": 171, "lbfg": 171, "saga": 171, "pruned_tri": 171, "rather": 171, "paralleliz": 171, "batched_object": 171, "x_batch": 171, "y_batch": 171, "009_ask_and_tel": [171, 174], "classic": 172, "recal": 172, "precis": 172, "f1": 172, "detailed_object": 172, "acc": 172, "recall_scor": 172, "precision_scor": 172, "f1_score": 172, "9285714285714286": 172, "activ": 172, "051": [172, 174], "010_reuse_best_tri": [172, 174], "comfort": [173, 175], "388": 174, "tutorial_20_recip": 174, "introduct": 175, "highli": 175, "tutorial_python": 175, "tutorial_jupyt": 175}, "objects": {"": [[110, 0, 0, "-", "optuna"]], "optuna": [[8, 1, 1, "", "TrialPruned"], [5, 0, 0, "-", "cli"], [9, 2, 1, "", "copy_study"], [10, 2, 1, "", "create_study"], [11, 2, 1, "", "delete_study"], [6, 0, 0, "-", "distributions"], [7, 0, 0, "-", "exceptions"], [28, 2, 1, "", "get_all_study_summaries"], [106, 0, 0, "-", "importance"], [108, 0, 0, "-", "integration"], [69, 2, 1, "", "load_study"], [109, 0, 0, "-", "logging"], [111, 0, 0, "-", "pruners"], [131, 0, 0, "-", "samplers"], [133, 0, 0, "-", "storages"], [134, 0, 0, "-", "study"], [135, 0, 0, "-", "trial"], [154, 0, 0, "-", "visualization"]], "optuna.distributions": [[12, 3, 1, "", "CategoricalDistribution"], [13, 3, 1, "", "DiscreteUniformDistribution"], [14, 3, 1, "", "FloatDistribution"], [15, 3, 1, "", "IntDistribution"], [16, 3, 1, "", "IntLogUniformDistribution"], [17, 3, 1, "", "IntUniformDistribution"], [18, 3, 1, "", "LogUniformDistribution"], [19, 3, 1, "", "UniformDistribution"], [20, 2, 1, "", "check_distribution_compatibility"], [21, 2, 1, "", "distribution_to_json"], [22, 2, 1, "", "json_to_distribution"]], "optuna.distributions.CategoricalDistribution": [[12, 4, 1, "", "choices"], [12, 5, 1, "", "single"], [12, 5, 1, "", "to_external_repr"], [12, 5, 1, "", "to_internal_repr"]], "optuna.distributions.DiscreteUniformDistribution": [[13, 4, 1, "", "high"], [13, 4, 1, "", "low"], [13, 6, 1, "", "q"], [13, 5, 1, "", "single"], [13, 5, 1, "", "to_external_repr"], [13, 5, 1, "", "to_internal_repr"]], "optuna.distributions.FloatDistribution": [[14, 4, 1, "", "high"], [14, 4, 1, "", "log"], [14, 4, 1, "", "low"], [14, 5, 1, "", "single"], [14, 4, 1, "", "step"], [14, 5, 1, "", "to_external_repr"], [14, 5, 1, "", "to_internal_repr"]], "optuna.distributions.IntDistribution": [[15, 4, 1, "", "high"], [15, 4, 1, "", "log"], [15, 4, 1, "", "low"], [15, 5, 1, "", "single"], [15, 4, 1, "", "step"], [15, 5, 1, "", "to_external_repr"], [15, 5, 1, "", "to_internal_repr"]], "optuna.distributions.IntLogUniformDistribution": [[16, 4, 1, "", "high"], [16, 4, 1, "", "low"], [16, 5, 1, "", "single"], [16, 4, 1, "", "step"], [16, 5, 1, "", "to_external_repr"], [16, 5, 1, "", "to_internal_repr"]], "optuna.distributions.IntUniformDistribution": [[17, 4, 1, "", "high"], [17, 4, 1, "", "low"], [17, 5, 1, "", "single"], [17, 4, 1, "", "step"], [17, 5, 1, "", "to_external_repr"], [17, 5, 1, "", "to_internal_repr"]], "optuna.distributions.LogUniformDistribution": [[18, 4, 1, "", "high"], [18, 4, 1, "", "low"], [18, 5, 1, "", "single"], [18, 5, 1, "", "to_external_repr"], [18, 5, 1, "", "to_internal_repr"]], "optuna.distributions.UniformDistribution": [[19, 4, 1, "", "high"], [19, 4, 1, "", "low"], [19, 5, 1, "", "single"], [19, 5, 1, "", "to_external_repr"], [19, 5, 1, "", "to_internal_repr"]], "optuna.exceptions": [[23, 1, 1, "", "CLIUsageError"], [24, 1, 1, "", "DuplicatedStudyError"], [25, 1, 1, "", "OptunaError"], [26, 1, 1, "", "StorageInternalError"], [27, 1, 1, "", "TrialPruned"]], "optuna.importance": [[29, 3, 1, "", "FanovaImportanceEvaluator"], [30, 3, 1, "", "MeanDecreaseImpurityImportanceEvaluator"], [31, 2, 1, "", "get_param_importances"]], "optuna.importance.FanovaImportanceEvaluator": [[29, 5, 1, "", "evaluate"]], "optuna.importance.MeanDecreaseImpurityImportanceEvaluator": [[30, 5, 1, "", "evaluate"]], "optuna.integration": [[32, 3, 1, "", "AllenNLPExecutor"], [33, 3, 1, "", "AllenNLPPruningCallback"], [34, 3, 1, "", "BoTorchSampler"], [35, 3, 1, "", "CatBoostPruningCallback"], [36, 3, 1, "", "CatalystPruningCallback"], [37, 3, 1, "", "ChainerMNStudy"], [38, 3, 1, "", "ChainerPruningExtension"], [39, 3, 1, "", "CmaEsSampler"], [40, 3, 1, "", "DaskStorage"], [41, 4, 1, "", "FastAIPruningCallback"], [42, 3, 1, "", "FastAIV1PruningCallback"], [43, 3, 1, "", "FastAIV2PruningCallback"], [44, 3, 1, "", "KerasPruningCallback"], [45, 3, 1, "", "LightGBMPruningCallback"], [46, 3, 1, "", "MLflowCallback"], [47, 3, 1, "", "MXNetPruningCallback"], [48, 3, 1, "", "OptunaSearchCV"], [49, 3, 1, "", "PyCmaSampler"], [50, 3, 1, "", "PyTorchIgnitePruningHandler"], [51, 3, 1, "", "PyTorchLightningPruningCallback"], [52, 3, 1, "", "ShapleyImportanceEvaluator"], [53, 3, 1, "", "SkoptSampler"], [54, 3, 1, "", "SkorchPruningCallback"], [55, 3, 1, "", "TFKerasPruningCallback"], [56, 3, 1, "", "TensorBoardCallback"], [57, 3, 1, "", "TensorFlowPruningHook"], [58, 3, 1, "", "TorchDistributedTrial"], [59, 3, 1, "", "WeightsAndBiasesCallback"], [60, 3, 1, "", "XGBoostPruningCallback"]], "optuna.integration.AllenNLPExecutor": [[32, 5, 1, "", "run"]], "optuna.integration.AllenNLPPruningCallback": [[33, 5, 1, "", "on_epoch"], [33, 5, 1, "", "register"]], "optuna.integration.BoTorchSampler": [[34, 5, 1, "", "after_trial"], [34, 5, 1, "", "infer_relative_search_space"], [34, 5, 1, "", "reseed_rng"], [34, 5, 1, "", "sample_independent"], [34, 5, 1, "", "sample_relative"]], "optuna.integration.CatBoostPruningCallback": [[35, 5, 1, "", "after_iteration"], [35, 5, 1, "", "check_pruned"]], "optuna.integration.ChainerMNStudy": [[37, 5, 1, "", "optimize"]], "optuna.integration.CmaEsSampler": [[39, 5, 1, "", "after_trial"], [39, 5, 1, "", "infer_relative_search_space"], [39, 5, 1, "", "reseed_rng"], [39, 5, 1, "", "sample_independent"], [39, 5, 1, "", "sample_relative"]], "optuna.integration.DaskStorage": [[40, 5, 1, "", "check_trial_is_updatable"], [40, 5, 1, "", "create_new_study"], [40, 5, 1, "", "create_new_trial"], [40, 5, 1, "", "delete_study"], [40, 5, 1, "", "get_all_studies"], [40, 5, 1, "", "get_all_trials"], [40, 5, 1, "", "get_base_storage"], [40, 5, 1, "", "get_best_trial"], [40, 5, 1, "", "get_n_trials"], [40, 5, 1, "", "get_study_directions"], [40, 5, 1, "", "get_study_id_from_name"], [40, 5, 1, "", "get_study_name_from_id"], [40, 5, 1, "", "get_study_system_attrs"], [40, 5, 1, "", "get_study_user_attrs"], [40, 5, 1, "", "get_trial"], [40, 5, 1, "", "get_trial_id_from_study_id_trial_number"], [40, 5, 1, "", "get_trial_number_from_id"], [40, 5, 1, "", "get_trial_param"], [40, 5, 1, "", "get_trial_params"], [40, 5, 1, "", "get_trial_system_attrs"], [40, 5, 1, "", "get_trial_user_attrs"], [40, 5, 1, "", "remove_session"], [40, 5, 1, "", "set_study_system_attr"], [40, 5, 1, "", "set_study_user_attr"], [40, 5, 1, "", "set_trial_intermediate_value"], [40, 5, 1, "", "set_trial_param"], [40, 5, 1, "", "set_trial_state_values"], [40, 5, 1, "", "set_trial_system_attr"], [40, 5, 1, "", "set_trial_user_attr"]], "optuna.integration.MLflowCallback": [[46, 5, 1, "", "track_in_mlflow"]], "optuna.integration.OptunaSearchCV": [[48, 4, 1, "", "best_estimator_"], [48, 6, 1, "", "best_index_"], [48, 6, 1, "", "best_params_"], [48, 6, 1, "", "best_score_"], [48, 6, 1, "", "best_trial_"], [48, 6, 1, "", "classes_"], [48, 6, 1, "", "decision_function"], [48, 5, 1, "", "fit"], [48, 5, 1, "", "get_params"], [48, 6, 1, "", "inverse_transform"], [48, 4, 1, "", "n_splits_"], [48, 6, 1, "", "n_trials_"], [48, 6, 1, "", "predict"], [48, 6, 1, "", "predict_log_proba"], [48, 6, 1, "", "predict_proba"], [48, 4, 1, "", "refit_time_"], [48, 4, 1, "", "sample_indices_"], [48, 5, 1, "", "score"], [48, 6, 1, "", "score_samples"], [48, 4, 1, "", "scorer_"], [48, 5, 1, "", "set_params"], [48, 6, 1, "", "set_user_attr"], [48, 4, 1, "", "study_"], [48, 6, 1, "", "transform"], [48, 6, 1, "", "trials_"], [48, 6, 1, "", "trials_dataframe"], [48, 6, 1, "", "user_attrs_"]], "optuna.integration.PyCmaSampler": [[49, 5, 1, "", "after_trial"], [49, 5, 1, "", "infer_relative_search_space"], [49, 5, 1, "", "reseed_rng"], [49, 5, 1, "", "sample_independent"], [49, 5, 1, "", "sample_relative"]], "optuna.integration.ShapleyImportanceEvaluator": [[52, 5, 1, "", "evaluate"]], "optuna.integration.SkoptSampler": [[53, 5, 1, "", "after_trial"], [53, 5, 1, "", "infer_relative_search_space"], [53, 5, 1, "", "reseed_rng"], [53, 5, 1, "", "sample_independent"], [53, 5, 1, "", "sample_relative"]], "optuna.integration.TorchDistributedTrial": [[58, 5, 1, "", "set_system_attr"], [58, 5, 1, "", "suggest_discrete_uniform"], [58, 5, 1, "", "suggest_loguniform"], [58, 5, 1, "", "suggest_uniform"], [58, 6, 1, "", "system_attrs"]], "optuna.integration.WeightsAndBiasesCallback": [[59, 5, 1, "", "track_in_wandb"]], "optuna.integration.allennlp": [[61, 2, 1, "", "dump_best_config"]], "optuna.integration.botorch": [[62, 2, 1, "", "qehvi_candidates_func"], [63, 2, 1, "", "qei_candidates_func"], [64, 2, 1, "", "qnehvi_candidates_func"], [65, 2, 1, "", "qparego_candidates_func"]], "optuna.integration.lightgbm": [[66, 3, 1, "", "LightGBMTuner"], [67, 3, 1, "", "LightGBMTunerCV"], [68, 2, 1, "", "train"]], "optuna.integration.lightgbm.LightGBMTuner": [[66, 6, 1, "", "best_params"], [66, 6, 1, "", "best_score"], [66, 5, 1, "", "get_best_booster"], [66, 5, 1, "", "run"], [66, 5, 1, "", "sample_train_set"]], "optuna.integration.lightgbm.LightGBMTunerCV": [[67, 6, 1, "", "best_params"], [67, 6, 1, "", "best_score"], [67, 5, 1, "", "get_best_booster"], [67, 5, 1, "", "run"], [67, 5, 1, "", "sample_train_set"]], "optuna.logging": [[70, 2, 1, "", "disable_default_handler"], [71, 2, 1, "", "disable_propagation"], [72, 2, 1, "", "enable_default_handler"], [73, 2, 1, "", "enable_propagation"], [74, 2, 1, "", "get_verbosity"], [75, 2, 1, "", "set_verbosity"]], "optuna.pruners": [[76, 3, 1, "", "BasePruner"], [77, 3, 1, "", "HyperbandPruner"], [78, 3, 1, "", "MedianPruner"], [79, 3, 1, "", "NopPruner"], [80, 3, 1, "", "PatientPruner"], [81, 3, 1, "", "PercentilePruner"], [82, 3, 1, "", "SuccessiveHalvingPruner"], [83, 3, 1, "", "ThresholdPruner"]], "optuna.pruners.BasePruner": [[76, 5, 1, "", "prune"]], "optuna.pruners.HyperbandPruner": [[77, 5, 1, "", "prune"]], "optuna.pruners.MedianPruner": [[78, 5, 1, "", "prune"]], "optuna.pruners.NopPruner": [[79, 5, 1, "", "prune"]], "optuna.pruners.PatientPruner": [[80, 5, 1, "", "prune"]], "optuna.pruners.PercentilePruner": [[81, 5, 1, "", "prune"]], "optuna.pruners.SuccessiveHalvingPruner": [[82, 5, 1, "", "prune"]], "optuna.pruners.ThresholdPruner": [[83, 5, 1, "", "prune"]], "optuna.samplers": [[112, 3, 1, "", "BaseSampler"], [113, 3, 1, "", "BruteForceSampler"], [114, 3, 1, "", "CmaEsSampler"], [115, 3, 1, "", "GridSampler"], [116, 3, 1, "", "IntersectionSearchSpace"], [117, 3, 1, "", "MOTPESampler"], [118, 3, 1, "", "NSGAIISampler"], [119, 3, 1, "", "PartialFixedSampler"], [120, 3, 1, "", "QMCSampler"], [121, 3, 1, "", "RandomSampler"], [122, 3, 1, "", "TPESampler"], [123, 2, 1, "", "intersection_search_space"], [132, 0, 0, "-", "nsgaii"]], "optuna.samplers.BaseSampler": [[112, 5, 1, "", "after_trial"], [112, 5, 1, "", "infer_relative_search_space"], [112, 5, 1, "", "reseed_rng"], [112, 5, 1, "", "sample_independent"], [112, 5, 1, "", "sample_relative"]], "optuna.samplers.BruteForceSampler": [[113, 5, 1, "", "after_trial"], [113, 5, 1, "", "infer_relative_search_space"], [113, 5, 1, "", "reseed_rng"], [113, 5, 1, "", "sample_independent"], [113, 5, 1, "", "sample_relative"]], "optuna.samplers.CmaEsSampler": [[114, 5, 1, "", "after_trial"], [114, 5, 1, "", "infer_relative_search_space"], [114, 5, 1, "", "reseed_rng"], [114, 5, 1, "", "sample_independent"], [114, 5, 1, "", "sample_relative"]], "optuna.samplers.GridSampler": [[115, 5, 1, "", "after_trial"], [115, 5, 1, "", "infer_relative_search_space"], [115, 5, 1, "", "reseed_rng"], [115, 5, 1, "", "sample_independent"], [115, 5, 1, "", "sample_relative"]], "optuna.samplers.IntersectionSearchSpace": [[116, 5, 1, "", "calculate"]], "optuna.samplers.MOTPESampler": [[117, 5, 1, "", "after_trial"], [117, 5, 1, "", "hyperopt_parameters"], [117, 5, 1, "", "infer_relative_search_space"], [117, 5, 1, "", "reseed_rng"], [117, 5, 1, "", "sample_independent"], [117, 5, 1, "", "sample_relative"]], "optuna.samplers.NSGAIISampler": [[118, 5, 1, "", "after_trial"], [118, 5, 1, "", "infer_relative_search_space"], [118, 5, 1, "", "reseed_rng"], [118, 5, 1, "", "sample_independent"], [118, 5, 1, "", "sample_relative"]], "optuna.samplers.PartialFixedSampler": [[119, 5, 1, "", "after_trial"], [119, 5, 1, "", "infer_relative_search_space"], [119, 5, 1, "", "reseed_rng"], [119, 5, 1, "", "sample_independent"], [119, 5, 1, "", "sample_relative"]], "optuna.samplers.QMCSampler": [[120, 5, 1, "", "after_trial"], [120, 5, 1, "", "infer_relative_search_space"], [120, 5, 1, "", "reseed_rng"], [120, 5, 1, "", "sample_independent"], [120, 5, 1, "", "sample_relative"]], "optuna.samplers.RandomSampler": [[121, 5, 1, "", "after_trial"], [121, 5, 1, "", "infer_relative_search_space"], [121, 5, 1, "", "reseed_rng"], [121, 5, 1, "", "sample_independent"], [121, 5, 1, "", "sample_relative"]], "optuna.samplers.TPESampler": [[122, 5, 1, "", "after_trial"], [122, 5, 1, "", "hyperopt_parameters"], [122, 5, 1, "", "infer_relative_search_space"], [122, 5, 1, "", "reseed_rng"], [122, 5, 1, "", "sample_independent"], [122, 5, 1, "", "sample_relative"]], "optuna.samplers.nsgaii": [[124, 3, 1, "", "BLXAlphaCrossover"], [125, 3, 1, "", "BaseCrossover"], [126, 3, 1, "", "SBXCrossover"], [127, 3, 1, "", "SPXCrossover"], [128, 3, 1, "", "UNDXCrossover"], [129, 3, 1, "", "UniformCrossover"], [130, 3, 1, "", "VSBXCrossover"]], "optuna.samplers.nsgaii.BLXAlphaCrossover": [[124, 5, 1, "", "crossover"]], "optuna.samplers.nsgaii.BaseCrossover": [[125, 5, 1, "", "crossover"], [125, 6, 1, "", "n_parents"]], "optuna.samplers.nsgaii.SBXCrossover": [[126, 5, 1, "", "crossover"]], "optuna.samplers.nsgaii.SPXCrossover": [[127, 5, 1, "", "crossover"]], "optuna.samplers.nsgaii.UNDXCrossover": [[128, 5, 1, "", "crossover"]], "optuna.samplers.nsgaii.UniformCrossover": [[129, 5, 1, "", "crossover"]], "optuna.samplers.nsgaii.VSBXCrossover": [[130, 5, 1, "", "crossover"]], "optuna.storages": [[84, 3, 1, "", "JournalFileOpenLock"], [85, 3, 1, "", "JournalFileStorage"], [86, 3, 1, "", "JournalFileSymlinkLock"], [87, 3, 1, "", "JournalRedisStorage"], [88, 3, 1, "", "JournalStorage"], [89, 3, 1, "", "RDBStorage"], [90, 3, 1, "", "RetryFailedTrialCallback"], [91, 2, 1, "", "fail_stale_trials"]], "optuna.storages.JournalFileOpenLock": [[84, 5, 1, "", "acquire"], [84, 5, 1, "", "release"]], "optuna.storages.JournalFileStorage": [[85, 5, 1, "", "append_logs"], [85, 5, 1, "", "read_logs"]], "optuna.storages.JournalFileSymlinkLock": [[86, 5, 1, "", "acquire"], [86, 5, 1, "", "release"]], "optuna.storages.JournalRedisStorage": [[87, 5, 1, "", "append_logs"], [87, 5, 1, "", "load_snapshot"], [87, 5, 1, "", "read_logs"], [87, 5, 1, "", "save_snapshot"]], "optuna.storages.JournalStorage": [[88, 5, 1, "", "check_trial_is_updatable"], [88, 5, 1, "", "create_new_study"], [88, 5, 1, "", "create_new_trial"], [88, 5, 1, "", "delete_study"], [88, 5, 1, "", "get_all_studies"], [88, 5, 1, "", "get_all_trials"], [88, 5, 1, "", "get_best_trial"], [88, 5, 1, "", "get_n_trials"], [88, 5, 1, "", "get_study_directions"], [88, 5, 1, "", "get_study_id_from_name"], [88, 5, 1, "", "get_study_name_from_id"], [88, 5, 1, "", "get_study_system_attrs"], [88, 5, 1, "", "get_study_user_attrs"], [88, 5, 1, "", "get_trial"], [88, 5, 1, "", "get_trial_id_from_study_id_trial_number"], [88, 5, 1, "", "get_trial_number_from_id"], [88, 5, 1, "", "get_trial_param"], [88, 5, 1, "", "get_trial_params"], [88, 5, 1, "", "get_trial_system_attrs"], [88, 5, 1, "", "get_trial_user_attrs"], [88, 5, 1, "", "remove_session"], [88, 5, 1, "", "set_study_system_attr"], [88, 5, 1, "", "set_study_user_attr"], [88, 5, 1, "", "set_trial_intermediate_value"], [88, 5, 1, "", "set_trial_param"], [88, 5, 1, "", "set_trial_state_values"], [88, 5, 1, "", "set_trial_system_attr"], [88, 5, 1, "", "set_trial_user_attr"]], "optuna.storages.RDBStorage": [[89, 5, 1, "", "check_trial_is_updatable"], [89, 5, 1, "", "create_new_study"], [89, 5, 1, "", "create_new_trial"], [89, 5, 1, "", "delete_study"], [89, 5, 1, "", "get_all_studies"], [89, 5, 1, "", "get_all_trials"], [89, 5, 1, "", "get_all_versions"], [89, 5, 1, "", "get_best_trial"], [89, 5, 1, "", "get_current_version"], [89, 5, 1, "", "get_failed_trial_callback"], [89, 5, 1, "", "get_head_version"], [89, 5, 1, "", "get_heartbeat_interval"], [89, 5, 1, "", "get_n_trials"], [89, 5, 1, "", "get_study_directions"], [89, 5, 1, "", "get_study_id_from_name"], [89, 5, 1, "", "get_study_name_from_id"], [89, 5, 1, "", "get_study_system_attrs"], [89, 5, 1, "", "get_study_user_attrs"], [89, 5, 1, "", "get_trial"], [89, 5, 1, "", "get_trial_id_from_study_id_trial_number"], [89, 5, 1, "", "get_trial_number_from_id"], [89, 5, 1, "", "get_trial_param"], [89, 5, 1, "", "get_trial_params"], [89, 5, 1, "", "get_trial_system_attrs"], [89, 5, 1, "", "get_trial_user_attrs"], [89, 5, 1, "", "record_heartbeat"], [89, 5, 1, "", "remove_session"], [89, 5, 1, "", "set_study_system_attr"], [89, 5, 1, "", "set_study_user_attr"], [89, 5, 1, "", "set_trial_intermediate_value"], [89, 5, 1, "", "set_trial_param"], [89, 5, 1, "", "set_trial_state_values"], [89, 5, 1, "", "set_trial_system_attr"], [89, 5, 1, "", "set_trial_user_attr"], [89, 5, 1, "", "upgrade"]], "optuna.storages.RetryFailedTrialCallback": [[90, 5, 1, "", "retried_trial_number"], [90, 5, 1, "", "retry_history"]], "optuna.study": [[92, 3, 1, "", "MaxTrialsCallback"], [93, 3, 1, "", "Study"], [94, 3, 1, "", "StudyDirection"], [95, 3, 1, "", "StudySummary"], [96, 2, 1, "", "copy_study"], [97, 2, 1, "", "create_study"], [98, 2, 1, "", "delete_study"], [99, 2, 1, "", "get_all_study_summaries"], [100, 2, 1, "", "load_study"]], "optuna.study.Study": [[93, 5, 1, "", "add_trial"], [93, 5, 1, "", "add_trials"], [93, 5, 1, "", "ask"], [93, 6, 1, "", "best_params"], [93, 6, 1, "", "best_trial"], [93, 6, 1, "", "best_trials"], [93, 6, 1, "", "best_value"], [93, 6, 1, "", "direction"], [93, 6, 1, "", "directions"], [93, 5, 1, "", "enqueue_trial"], [93, 5, 1, "", "get_trials"], [93, 5, 1, "", "optimize"], [93, 5, 1, "", "set_system_attr"], [93, 5, 1, "", "set_user_attr"], [93, 5, 1, "", "stop"], [93, 6, 1, "", "system_attrs"], [93, 5, 1, "", "tell"], [93, 6, 1, "", "trials"], [93, 5, 1, "", "trials_dataframe"], [93, 6, 1, "", "user_attrs"]], "optuna.study.StudyDirection": [[94, 4, 1, "", "MAXIMIZE"], [94, 4, 1, "", "MINIMIZE"], [94, 4, 1, "", "NOT_SET"]], "optuna.study.StudySummary": [[95, 4, 1, "", "best_trial"], [95, 4, 1, "", "datetime_start"], [95, 4, 1, "", "direction"], [95, 4, 1, "", "directions"], [95, 4, 1, "", "n_trials"], [95, 4, 1, "", "study_name"], [95, 4, 1, "", "system_attrs"], [95, 4, 1, "", "user_attrs"]], "optuna.trial": [[101, 3, 1, "", "FixedTrial"], [102, 3, 1, "", "FrozenTrial"], [103, 3, 1, "", "Trial"], [104, 3, 1, "", "TrialState"], [105, 2, 1, "", "create_trial"]], "optuna.trial.FixedTrial": [[101, 5, 1, "", "set_system_attr"], [101, 5, 1, "", "suggest_discrete_uniform"], [101, 5, 1, "", "suggest_loguniform"], [101, 5, 1, "", "suggest_uniform"]], "optuna.trial.FrozenTrial": [[102, 4, 1, "", "datetime_complete"], [102, 4, 1, "", "datetime_start"], [102, 4, 1, "", "distributions"], [102, 6, 1, "", "duration"], [102, 4, 1, "", "intermediate_values"], [102, 6, 1, "", "last_step"], [102, 4, 1, "", "number"], [102, 4, 1, "", "params"], [102, 5, 1, "", "report"], [102, 5, 1, "", "set_system_attr"], [102, 5, 1, "", "should_prune"], [102, 4, 1, "", "state"], [102, 5, 1, "", "suggest_discrete_uniform"], [102, 5, 1, "", "suggest_loguniform"], [102, 5, 1, "", "suggest_uniform"], [102, 4, 1, "", "system_attrs"], [102, 4, 1, "", "user_attrs"], [102, 4, 1, "", "value"], [102, 4, 1, "", "values"]], "optuna.trial.Trial": [[103, 6, 1, "", "datetime_start"], [103, 6, 1, "", "distributions"], [103, 6, 1, "", "number"], [103, 6, 1, "", "params"], [103, 5, 1, "", "report"], [103, 5, 1, "", "set_system_attr"], [103, 5, 1, "", "set_user_attr"], [103, 5, 1, "", "should_prune"], [103, 5, 1, "", "suggest_categorical"], [103, 5, 1, "", "suggest_discrete_uniform"], [103, 5, 1, "", "suggest_float"], [103, 5, 1, "", "suggest_int"], [103, 5, 1, "", "suggest_loguniform"], [103, 5, 1, "", "suggest_uniform"], [103, 6, 1, "", "system_attrs"], [103, 6, 1, "", "user_attrs"]], "optuna.trial.TrialState": [[104, 4, 1, "", "COMPLETE"], [104, 4, 1, "", "FAIL"], [104, 4, 1, "", "PRUNED"], [104, 4, 1, "", "RUNNING"], [104, 4, 1, "", "WAITING"], [104, 5, 1, "", "is_finished"]], "optuna.visualization": [[136, 2, 1, "", "is_available"], [155, 0, 0, "-", "matplotlib"], [146, 2, 1, "", "plot_contour"], [147, 2, 1, "", "plot_edf"], [148, 2, 1, "", "plot_intermediate_values"], [149, 2, 1, "", "plot_optimization_history"], [150, 2, 1, "", "plot_parallel_coordinate"], [151, 2, 1, "", "plot_param_importances"], [152, 2, 1, "", "plot_pareto_front"], [153, 2, 1, "", "plot_slice"]], "optuna.visualization.matplotlib": [[137, 2, 1, "", "is_available"], [138, 2, 1, "", "plot_contour"], [139, 2, 1, "", "plot_edf"], [140, 2, 1, "", "plot_intermediate_values"], [141, 2, 1, "", "plot_optimization_history"], [142, 2, 1, "", "plot_parallel_coordinate"], [143, 2, 1, "", "plot_param_importances"], [144, 2, 1, "", "plot_pareto_front"], [145, 2, 1, "", "plot_slice"]]}, "objtypes": {"0": "py:module", "1": "py:exception", "2": "py:function", "3": "py:class", "4": "py:attribute", "5": "py:method", "6": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "exception", "Python exception"], "2": ["py", "function", "Python function"], "3": ["py", "class", "Python class"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "method", "Python method"], "6": ["py", "property", "Python property"]}, "titleterms": {"faq": 0, "can": 0, "i": 0, "us": [0, 158, 172], "optuna": [0, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 164, 170, 171], "x": 0, "where": 0, "your": [0, 170], "favorit": 0, "ml": 0, "librari": 0, "how": 0, "defin": [0, 157, 167, 168, 171], "object": [0, 156, 164], "function": [0, 156, 160], "have": [0, 170], "own": 0, "argument": 0, "without": 0, "remot": 0, "rdb": [0, 163], "server": 0, "save": [0, 163], "resum": [0, 163], "studi": [0, 92, 93, 94, 95, 96, 97, 98, 99, 100, 134, 156, 159, 163, 165, 169], "suppress": 0, "log": [0, 70, 71, 72, 73, 74, 75, 109], "messag": 0, "machin": 0, "learn": [0, 108], "model": [0, 172], "train": [0, 68], "obtain": 0, "reproduc": 0, "optim": [0, 1, 108, 158, 160, 164, 169, 171], "result": 0, "ar": [0, 169], "except": [0, 7, 23, 24, 25, 26, 27], "from": 0, "trial": [0, 101, 102, 103, 104, 105, 135, 165, 169, 172], "handl": 0, "nan": 0, "return": 0, "what": 0, "happen": 0, "when": 0, "dynam": 0, "alter": 0, "search": [0, 157], "space": [0, 157], "two": 0, "gpu": 0, "evalu": [0, 170], "simultan": 0, "test": 0, "my": 0, "do": 0, "avoid": 0, "run": [0, 164, 171], "out": 0, "memori": 0, "oom": 0, "output": 0, "onli": 0, "best": [0, 172], "valu": 0, "updat": 0, "suggest": 0, "variabl": 0, "which": [0, 158], "repres": 0, "proport": 0, "accord": 0, "dirichlet": 0, "distribut": [0, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], "some": [0, 169], "constraint": 0, "parallel": [0, 159], "1": [0, 156], "multi": [0, 164], "thread": 0, "singl": 0, "node": [0, 159], "2": [0, 157], "process": [0, 159], "3": [0, 158], "multipl": [0, 159], "solv": 0, "error": 0, "occur": 0, "perform": 0, "sqlite3": 0, "monitor": 0, "make": 0, "them": 0, "fail": 0, "automat": 0, "thei": 0, "kill": 0, "unexpectedli": 0, "A": 1, "hyperparamet": [1, 160, 170], "framework": 1, "kei": [1, 161, 175], "featur": [1, 161, 175], "basic": 1, "concept": 1, "commun": 1, "contribut": 1, "licens": [1, 3], "refer": [1, 107], "content": 1, "indic": 1, "tabl": 1, "instal": 2, "third": 3, "parti": 3, "scipi": 3, "fdlibm": 3, "privaci": 4, "polici": 4, "googl": 4, "analyt": 4, "cli": 5, "trialprun": [8, 27], "copy_studi": [9, 96], "create_studi": [10, 97], "delete_studi": [11, 98], "categoricaldistribut": 12, "discreteuniformdistribut": 13, "floatdistribut": 14, "intdistribut": 15, "intloguniformdistribut": 16, "intuniformdistribut": 17, "loguniformdistribut": 18, "uniformdistribut": 19, "check_distribution_compat": 20, "distribution_to_json": 21, "json_to_distribut": 22, "cliusageerror": 23, "duplicatedstudyerror": 24, "optunaerror": 25, "storageinternalerror": 26, "get_all_study_summari": [28, 99], "import": [29, 30, 31, 106], "fanovaimportanceevalu": 29, "meandecreaseimpurityimportanceevalu": 30, "get_param_import": 31, "integr": [32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 108, 158], "allennlpexecutor": 32, "allennlppruningcallback": 33, "botorchsampl": 34, "catboostpruningcallback": 35, "catalystpruningcallback": 36, "chainermnstudi": 37, "chainerpruningextens": 38, "cmaessampl": [39, 114], "daskstorag": 40, "fastaipruningcallback": 41, "fastaiv1pruningcallback": 42, "fastaiv2pruningcallback": 43, "keraspruningcallback": 44, "lightgbmpruningcallback": 45, "mlflowcallback": 46, "mxnetpruningcallback": 47, "optunasearchcv": 48, "pycmasampl": 49, "pytorchignitepruninghandl": 50, "pytorchlightningpruningcallback": 51, "shapleyimportanceevalu": 52, "skoptsampl": 53, "skorchpruningcallback": 54, "tfkeraspruningcallback": 55, "tensorboardcallback": 56, "tensorflowpruninghook": 57, "torchdistributedtri": 58, "weightsandbiasescallback": 59, "xgboostpruningcallback": 60, "allennlp": [61, 108], "dump_best_config": 61, "botorch": [62, 63, 64, 65, 108], "qehvi_candidates_func": 62, "qei_candidates_func": 63, "qnehvi_candidates_func": 64, "qparego_candidates_func": 65, "lightgbm": [66, 67, 68, 108], "lightgbmtun": 66, "lightgbmtunercv": 67, "load_studi": [69, 100], "disable_default_handl": 70, "disable_propag": 71, "enable_default_handl": 72, "enable_propag": 73, "get_verbos": 74, "set_verbos": 75, "pruner": [76, 77, 78, 79, 80, 81, 82, 83, 111, 158, 168], "baseprun": 76, "hyperbandprun": 77, "medianprun": 78, "nopprun": 79, "patientprun": 80, "percentileprun": 81, "successivehalvingprun": 82, "thresholdprun": 83, "storag": [84, 85, 86, 87, 88, 89, 90, 91, 133], "journalfileopenlock": 84, "journalfilestorag": 85, "journalfilesymlinklock": 86, "journalredisstorag": 87, "journalstorag": 88, "rdbstorag": 89, "retryfailedtrialcallback": 90, "fail_stale_tri": 91, "maxtrialscallback": 92, "studydirect": 94, "studysummari": 95, "fixedtri": 101, "frozentri": 102, "trialstat": 104, "create_tri": 105, "api": 107, "catalyst": 108, "catboost": 108, "chainer": 108, "dask": 108, "fast": 108, "ai": 108, "kera": 108, "mlflow": 108, "weight": 108, "bias": 108, "mxnet": 108, "pycma": 108, "pytorch": 108, "scikit": 108, "shap": 108, "skorch": 108, "tensorflow": 108, "xgboost": 108, "sampler": [112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 158, 167], "basesampl": 112, "bruteforcesampl": 113, "gridsampl": 115, "intersectionsearchspac": 116, "motpesampl": 117, "nsgaiisampl": 118, "partialfixedsampl": 119, "qmcsampler": 120, "randomsampl": 121, "tpesampl": 122, "intersection_search_spac": 123, "nsgaii": [124, 125, 126, 127, 128, 129, 130, 132], "blxalphacrossov": 124, "basecrossov": 125, "sbxcrossov": 126, "spxcrossov": 127, "undxcrossov": 128, "uniformcrossov": 129, "vsbxcrossov": 130, "visual": [136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 160], "is_avail": [136, 137], "matplotlib": [137, 138, 139, 140, 141, 142, 143, 144, 145, 155], "plot_contour": [138, 146], "plot_edf": [139, 147], "plot_intermediate_valu": [140, 148], "plot_optimization_histori": [141, 149], "plot_parallel_coordin": [142, 150], "plot_param_import": [143, 151], "plot_pareto_front": [144, 152], "plot_slic": [145, 153], "lightweight": 156, "versatil": 156, "platform": 156, "agnost": 156, "architectur": 156, "quadrat": 156, "exampl": [156, 167, 168], "python": 157, "paramet": 157, "note": 157, "number": 157, "effici": 158, "algorithm": 158, "sampl": 158, "switch": 158, "prune": [158, 168, 169], "activ": 158, "should": 158, "modul": 158, "4": 159, "easi": 159, "creat": 159, "share": 159, "among": 159, "5": 160, "quick": 160, "analysi": 160, "plot": 160, "comput": [162, 174], "time": [162, 174], "backend": 163, "new": 163, "experiment": 163, "histori": 163, "user": [165, 167, 168], "attribut": 165, "ad": 165, "command": 166, "line": 166, "interfac": [166, 168, 171], "overview": [167, 168], "an": [167, 168, 171], "implement": [167, 168], "simulatedannealingsampl": 167, "lastplaceprun": 168, "callback": 169, "stop": 169, "after": 169, "row": 169, "specifi": 170, "manual": 170, "first": 170, "scenario": 170, "second": 170, "util": 170, "alreadi": 170, "ask": 171, "tell": 171, "appli": 171, "exist": 171, "problem": 171, "minimum": 171, "modif": 171, "batch": 171, "re": 172, "investig": 172, "further": 172, "The": 172, "differ": 172, "between": 172, "best_trial": 172, "ordin": 172, "recip": [173, 175], "tutori": 175}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"FAQ": [[0, "faq"]], "Can I use Optuna with X? (where X is your favorite ML library)": [[0, "can-i-use-optuna-with-x-where-x-is-your-favorite-ml-library"]], "How to define objective functions that have own arguments?": [[0, "how-to-define-objective-functions-that-have-own-arguments"]], "Can I use Optuna without remote RDB servers?": [[0, "can-i-use-optuna-without-remote-rdb-servers"]], "How can I save and resume studies?": [[0, "how-can-i-save-and-resume-studies"]], "How to suppress log messages of Optuna?": [[0, "how-to-suppress-log-messages-of-optuna"]], "How to save machine learning models trained in objective functions?": [[0, "how-to-save-machine-learning-models-trained-in-objective-functions"]], "How can I obtain reproducible optimization results?": [[0, "how-can-i-obtain-reproducible-optimization-results"]], "How are exceptions from trials handled?": [[0, "how-are-exceptions-from-trials-handled"]], "How are NaNs returned by trials handled?": [[0, "how-are-nans-returned-by-trials-handled"]], "What happens when I dynamically alter a search space?": [[0, "what-happens-when-i-dynamically-alter-a-search-space"]], "How can I use two GPUs for evaluating two trials simultaneously?": [[0, "how-can-i-use-two-gpus-for-evaluating-two-trials-simultaneously"]], "How can I test my objective functions?": [[0, "how-can-i-test-my-objective-functions"]], "How do I avoid running out of memory (OOM) when optimizing studies?": [[0, "how-do-i-avoid-running-out-of-memory-oom-when-optimizing-studies"]], "How can I output a log only when the best value is updated?": [[0, "how-can-i-output-a-log-only-when-the-best-value-is-updated"]], "How do I suggest variables which represent the proportion, that is, are in accordance with Dirichlet distribution?": [[0, "how-do-i-suggest-variables-which-represent-the-proportion-that-is-are-in-accordance-with-dirichlet-distribution"]], "How can I optimize a model with some constraints?": [[0, "how-can-i-optimize-a-model-with-some-constraints"]], "How can I parallelize optimization?": [[0, "how-can-i-parallelize-optimization"]], "1. Multi-threading parallelization with a single node": [[0, "multi-threading-parallelization-with-a-single-node"]], "2. Multi-processing parallelization with single node": [[0, "multi-processing-parallelization-with-single-node"]], "3. Multi-processing parallelization with multiple nodes": [[0, "multi-processing-parallelization-with-multiple-nodes"]], "How can I solve the error that occurs when performing parallel optimization with SQLite3?": [[0, "how-can-i-solve-the-error-that-occurs-when-performing-parallel-optimization-with-sqlite3"]], "Can I monitor trials and make them failed automatically when they are killed unexpectedly?": [[0, "can-i-monitor-trials-and-make-them-failed-automatically-when-they-are-killed-unexpectedly"]], "Optuna: A hyperparameter optimization framework": [[1, "optuna-a-hyperparameter-optimization-framework"]], "Key Features": [[1, "key-features"], [161, "key-features"], [175, "key-features"]], "Basic Concepts": [[1, "basic-concepts"]], "Communication": [[1, "communication"]], "Contribution": [[1, "contribution"]], "License": [[1, "license"]], "Reference": [[1, "reference"]], "Contents:": [[1, null]], "Indices and tables": [[1, "indices-and-tables"]], "Installation": [[2, "installation"]], "Third-party License": [[3, "third-party-license"]], "SciPy": [[3, "scipy"]], "fdlibm": [[3, "fdlibm"]], "Privacy Policy": [[4, "privacy-policy"]], "Google Analytics": [[4, "google-analytics"]], "optuna.cli": [[5, "optuna-cli"]], "optuna.distributions": [[6, "optuna-distributions"]], "optuna.exceptions": [[7, "optuna-exceptions"]], "optuna.TrialPruned": [[8, "optuna-trialpruned"]], "optuna.copy_study": [[9, "optuna-copy-study"]], "optuna.create_study": [[10, "optuna-create-study"]], "optuna.delete_study": [[11, "optuna-delete-study"]], "optuna.distributions.CategoricalDistribution": [[12, "optuna-distributions-categoricaldistribution"]], "optuna.distributions.DiscreteUniformDistribution": [[13, "optuna-distributions-discreteuniformdistribution"]], "optuna.distributions.FloatDistribution": [[14, "optuna-distributions-floatdistribution"]], "optuna.distributions.IntDistribution": [[15, "optuna-distributions-intdistribution"]], "optuna.distributions.IntLogUniformDistribution": [[16, "optuna-distributions-intloguniformdistribution"]], "optuna.distributions.IntUniformDistribution": [[17, "optuna-distributions-intuniformdistribution"]], "optuna.distributions.LogUniformDistribution": [[18, "optuna-distributions-loguniformdistribution"]], "optuna.distributions.UniformDistribution": [[19, "optuna-distributions-uniformdistribution"]], "optuna.distributions.check_distribution_compatibility": [[20, "optuna-distributions-check-distribution-compatibility"]], "optuna.distributions.distribution_to_json": [[21, "optuna-distributions-distribution-to-json"]], "optuna.distributions.json_to_distribution": [[22, "optuna-distributions-json-to-distribution"]], "optuna.exceptions.CLIUsageError": [[23, "optuna-exceptions-cliusageerror"]], "optuna.exceptions.DuplicatedStudyError": [[24, "optuna-exceptions-duplicatedstudyerror"]], "optuna.exceptions.OptunaError": [[25, "optuna-exceptions-optunaerror"]], "optuna.exceptions.StorageInternalError": [[26, "optuna-exceptions-storageinternalerror"]], "optuna.exceptions.TrialPruned": [[27, "optuna-exceptions-trialpruned"]], "optuna.get_all_study_summaries": [[28, "optuna-get-all-study-summaries"]], "optuna.importance.FanovaImportanceEvaluator": [[29, "optuna-importance-fanovaimportanceevaluator"]], "optuna.importance.MeanDecreaseImpurityImportanceEvaluator": [[30, "optuna-importance-meandecreaseimpurityimportanceevaluator"]], "optuna.importance.get_param_importances": [[31, "optuna-importance-get-param-importances"]], "optuna.integration.AllenNLPExecutor": [[32, "optuna-integration-allennlpexecutor"]], "optuna.integration.AllenNLPPruningCallback": [[33, "optuna-integration-allennlppruningcallback"]], "optuna.integration.BoTorchSampler": [[34, "optuna-integration-botorchsampler"]], "optuna.integration.CatBoostPruningCallback": [[35, "optuna-integration-catboostpruningcallback"]], "optuna.integration.CatalystPruningCallback": [[36, "optuna-integration-catalystpruningcallback"]], "optuna.integration.ChainerMNStudy": [[37, "optuna-integration-chainermnstudy"]], "optuna.integration.ChainerPruningExtension": [[38, "optuna-integration-chainerpruningextension"]], "optuna.integration.CmaEsSampler": [[39, "optuna-integration-cmaessampler"]], "optuna.integration.DaskStorage": [[40, "optuna-integration-daskstorage"]], "optuna.integration.FastAIPruningCallback": [[41, "optuna-integration-fastaipruningcallback"]], "optuna.integration.FastAIV1PruningCallback": [[42, "optuna-integration-fastaiv1pruningcallback"]], "optuna.integration.FastAIV2PruningCallback": [[43, "optuna-integration-fastaiv2pruningcallback"]], "optuna.integration.KerasPruningCallback": [[44, "optuna-integration-keraspruningcallback"]], "optuna.integration.LightGBMPruningCallback": [[45, "optuna-integration-lightgbmpruningcallback"]], "optuna.integration.MLflowCallback": [[46, "optuna-integration-mlflowcallback"]], "optuna.integration.MXNetPruningCallback": [[47, "optuna-integration-mxnetpruningcallback"]], "optuna.integration.OptunaSearchCV": [[48, "optuna-integration-optunasearchcv"]], "optuna.integration.PyCmaSampler": [[49, "optuna-integration-pycmasampler"]], "optuna.integration.PyTorchIgnitePruningHandler": [[50, "optuna-integration-pytorchignitepruninghandler"]], "optuna.integration.PyTorchLightningPruningCallback": [[51, "optuna-integration-pytorchlightningpruningcallback"]], "optuna.integration.ShapleyImportanceEvaluator": [[52, "optuna-integration-shapleyimportanceevaluator"]], "optuna.integration.SkoptSampler": [[53, "optuna-integration-skoptsampler"]], "optuna.integration.SkorchPruningCallback": [[54, "optuna-integration-skorchpruningcallback"]], "optuna.integration.TFKerasPruningCallback": [[55, "optuna-integration-tfkeraspruningcallback"]], "optuna.integration.TensorBoardCallback": [[56, "optuna-integration-tensorboardcallback"]], "optuna.integration.TensorFlowPruningHook": [[57, "optuna-integration-tensorflowpruninghook"]], "optuna.integration.TorchDistributedTrial": [[58, "optuna-integration-torchdistributedtrial"]], "optuna.integration.WeightsAndBiasesCallback": [[59, "optuna-integration-weightsandbiasescallback"]], "optuna.integration.XGBoostPruningCallback": [[60, "optuna-integration-xgboostpruningcallback"]], "optuna.integration.allennlp.dump_best_config": [[61, "optuna-integration-allennlp-dump-best-config"]], "optuna.integration.botorch.qehvi_candidates_func": [[62, "optuna-integration-botorch-qehvi-candidates-func"]], "optuna.integration.botorch.qei_candidates_func": [[63, "optuna-integration-botorch-qei-candidates-func"]], "optuna.integration.botorch.qnehvi_candidates_func": [[64, "optuna-integration-botorch-qnehvi-candidates-func"]], "optuna.integration.botorch.qparego_candidates_func": [[65, "optuna-integration-botorch-qparego-candidates-func"]], "optuna.integration.lightgbm.LightGBMTuner": [[66, "optuna-integration-lightgbm-lightgbmtuner"]], "optuna.integration.lightgbm.LightGBMTunerCV": [[67, "optuna-integration-lightgbm-lightgbmtunercv"]], "optuna.integration.lightgbm.train": [[68, "optuna-integration-lightgbm-train"]], "optuna.load_study": [[69, "optuna-load-study"]], "optuna.logging.disable_default_handler": [[70, "optuna-logging-disable-default-handler"]], "optuna.logging.disable_propagation": [[71, "optuna-logging-disable-propagation"]], "optuna.logging.enable_default_handler": [[72, "optuna-logging-enable-default-handler"]], "optuna.logging.enable_propagation": [[73, "optuna-logging-enable-propagation"]], "optuna.logging.get_verbosity": [[74, "optuna-logging-get-verbosity"]], "optuna.logging.set_verbosity": [[75, "optuna-logging-set-verbosity"]], "optuna.pruners.BasePruner": [[76, "optuna-pruners-basepruner"]], "optuna.pruners.HyperbandPruner": [[77, "optuna-pruners-hyperbandpruner"]], "optuna.pruners.MedianPruner": [[78, "optuna-pruners-medianpruner"]], "optuna.pruners.NopPruner": [[79, "optuna-pruners-noppruner"]], "optuna.pruners.PatientPruner": [[80, "optuna-pruners-patientpruner"]], "optuna.pruners.PercentilePruner": [[81, "optuna-pruners-percentilepruner"]], "optuna.pruners.SuccessiveHalvingPruner": [[82, "optuna-pruners-successivehalvingpruner"]], "optuna.pruners.ThresholdPruner": [[83, "optuna-pruners-thresholdpruner"]], "optuna.storages.JournalFileOpenLock": [[84, "optuna-storages-journalfileopenlock"]], "optuna.storages.JournalFileStorage": [[85, "optuna-storages-journalfilestorage"]], "optuna.storages.JournalFileSymlinkLock": [[86, "optuna-storages-journalfilesymlinklock"]], "optuna.storages.JournalRedisStorage": [[87, "optuna-storages-journalredisstorage"]], "optuna.storages.JournalStorage": [[88, "optuna-storages-journalstorage"]], "optuna.storages.RDBStorage": [[89, "optuna-storages-rdbstorage"]], "optuna.storages.RetryFailedTrialCallback": [[90, "optuna-storages-retryfailedtrialcallback"]], "optuna.storages.fail_stale_trials": [[91, "optuna-storages-fail-stale-trials"]], "optuna.study.MaxTrialsCallback": [[92, "optuna-study-maxtrialscallback"]], "optuna.study.Study": [[93, "optuna-study-study"]], "optuna.study.StudyDirection": [[94, "optuna-study-studydirection"]], "optuna.study.StudySummary": [[95, "optuna-study-studysummary"]], "optuna.study.copy_study": [[96, "optuna-study-copy-study"]], "optuna.study.create_study": [[97, "optuna-study-create-study"]], "optuna.study.delete_study": [[98, "optuna-study-delete-study"]], "optuna.study.get_all_study_summaries": [[99, "optuna-study-get-all-study-summaries"]], "optuna.study.load_study": [[100, "optuna-study-load-study"]], "optuna.trial.FixedTrial": [[101, "optuna-trial-fixedtrial"]], "optuna.trial.FrozenTrial": [[102, "optuna-trial-frozentrial"]], "optuna.trial.Trial": [[103, "optuna-trial-trial"]], "optuna.trial.TrialState": [[104, "optuna-trial-trialstate"]], "optuna.trial.create_trial": [[105, "optuna-trial-create-trial"]], "optuna.importance": [[106, "optuna-importance"]], "API Reference": [[107, "api-reference"]], "optuna.integration": [[108, "optuna-integration"]], "AllenNLP": [[108, "allennlp"]], "BoTorch": [[108, "botorch"]], "Catalyst": [[108, "catalyst"]], "CatBoost": [[108, "catboost"]], "Chainer": [[108, "chainer"]], "Dask": [[108, "dask"]], "fast.ai": [[108, "fast-ai"]], "Keras": [[108, "keras"]], "LightGBM": [[108, "lightgbm"]], "MLflow": [[108, "mlflow"]], "Weights & Biases": [[108, "weights-biases"]], "MXNet": [[108, "mxnet"]], "pycma": [[108, "pycma"]], "PyTorch": [[108, "pytorch"]], "scikit-learn": [[108, "scikit-learn"]], "scikit-optimize": [[108, "scikit-optimize"]], "SHAP": [[108, "shap"]], "skorch": [[108, "skorch"]], "TensorFlow": [[108, "tensorflow"]], "XGBoost": [[108, "xgboost"]], "optuna.logging": [[109, "optuna-logging"]], "optuna": [[110, "optuna"]], "optuna.pruners": [[111, "optuna-pruners"]], "optuna.samplers.BaseSampler": [[112, "optuna-samplers-basesampler"]], "optuna.samplers.BruteForceSampler": [[113, "optuna-samplers-bruteforcesampler"]], "optuna.samplers.CmaEsSampler": [[114, "optuna-samplers-cmaessampler"]], "optuna.samplers.GridSampler": [[115, "optuna-samplers-gridsampler"]], "optuna.samplers.IntersectionSearchSpace": [[116, "optuna-samplers-intersectionsearchspace"]], "optuna.samplers.MOTPESampler": [[117, "optuna-samplers-motpesampler"]], "optuna.samplers.NSGAIISampler": [[118, "optuna-samplers-nsgaiisampler"]], "optuna.samplers.PartialFixedSampler": [[119, "optuna-samplers-partialfixedsampler"]], "optuna.samplers.QMCSampler": [[120, "optuna-samplers-qmcsampler"]], "optuna.samplers.RandomSampler": [[121, "optuna-samplers-randomsampler"]], "optuna.samplers.TPESampler": [[122, "optuna-samplers-tpesampler"]], "optuna.samplers.intersection_search_space": [[123, "optuna-samplers-intersection-search-space"]], "optuna.samplers.nsgaii.BLXAlphaCrossover": [[124, "optuna-samplers-nsgaii-blxalphacrossover"]], "optuna.samplers.nsgaii.BaseCrossover": [[125, "optuna-samplers-nsgaii-basecrossover"]], "optuna.samplers.nsgaii.SBXCrossover": [[126, "optuna-samplers-nsgaii-sbxcrossover"]], "optuna.samplers.nsgaii.SPXCrossover": [[127, "optuna-samplers-nsgaii-spxcrossover"]], "optuna.samplers.nsgaii.UNDXCrossover": [[128, "optuna-samplers-nsgaii-undxcrossover"]], "optuna.samplers.nsgaii.UniformCrossover": [[129, "optuna-samplers-nsgaii-uniformcrossover"]], "optuna.samplers.nsgaii.VSBXCrossover": [[130, "optuna-samplers-nsgaii-vsbxcrossover"]], "optuna.samplers": [[131, "optuna-samplers"]], "optuna.samplers.nsgaii": [[132, "optuna-samplers-nsgaii"]], "optuna.storages": [[133, "optuna-storages"]], "optuna.study": [[134, "optuna-study"]], "optuna.trial": [[135, "optuna-trial"]], "optuna.visualization.is_available": [[136, "optuna-visualization-is-available"]], "optuna.visualization.matplotlib.is_available": [[137, "optuna-visualization-matplotlib-is-available"]], "optuna.visualization.matplotlib.plot_contour": [[138, "optuna-visualization-matplotlib-plot-contour"]], "optuna.visualization.matplotlib.plot_edf": [[139, "optuna-visualization-matplotlib-plot-edf"]], "optuna.visualization.matplotlib.plot_intermediate_values": [[140, "optuna-visualization-matplotlib-plot-intermediate-values"]], "optuna.visualization.matplotlib.plot_optimization_history": [[141, "optuna-visualization-matplotlib-plot-optimization-history"]], "optuna.visualization.matplotlib.plot_parallel_coordinate": [[142, "optuna-visualization-matplotlib-plot-parallel-coordinate"]], "optuna.visualization.matplotlib.plot_param_importances": [[143, "optuna-visualization-matplotlib-plot-param-importances"]], "optuna.visualization.matplotlib.plot_pareto_front": [[144, "optuna-visualization-matplotlib-plot-pareto-front"]], "optuna.visualization.matplotlib.plot_slice": [[145, "optuna-visualization-matplotlib-plot-slice"]], "optuna.visualization.plot_contour": [[146, "optuna-visualization-plot-contour"]], "optuna.visualization.plot_edf": [[147, "optuna-visualization-plot-edf"]], "optuna.visualization.plot_intermediate_values": [[148, "optuna-visualization-plot-intermediate-values"]], "optuna.visualization.plot_optimization_history": [[149, "optuna-visualization-plot-optimization-history"]], "optuna.visualization.plot_parallel_coordinate": [[150, "optuna-visualization-plot-parallel-coordinate"]], "optuna.visualization.plot_param_importances": [[151, "optuna-visualization-plot-param-importances"]], "optuna.visualization.plot_pareto_front": [[152, "optuna-visualization-plot-pareto-front"]], "optuna.visualization.plot_slice": [[153, "optuna-visualization-plot-slice"]], "optuna.visualization": [[154, "optuna-visualization"]], "optuna.visualization.matplotlib": [[155, "optuna-visualization-matplotlib"]], "1. Lightweight, versatile, and platform agnostic architecture": [[156, "lightweight-versatile-and-platform-agnostic-architecture"]], "Quadratic Function Example": [[156, "quadratic-function-example"]], "Study Object": [[156, "study-object"]], "2. Pythonic Search Space": [[157, "pythonic-search-space"]], "Defining Parameter Spaces": [[157, "defining-parameter-spaces"]], "Note on the Number of Parameters": [[157, "note-on-the-number-of-parameters"]], "3. Efficient Optimization Algorithms": [[158, "efficient-optimization-algorithms"]], "Sampling Algorithms": [[158, "sampling-algorithms"]], "Switching Samplers": [[158, "switching-samplers"]], "Pruning Algorithms": [[158, "pruning-algorithms"]], "Activating Pruners": [[158, "activating-pruners"]], "Which Sampler and Pruner Should be Used?": [[158, "which-sampler-and-pruner-should-be-used"]], "Integration Modules for Pruning": [[158, "integration-modules-for-pruning"]], "4. Easy Parallelization": [[159, "easy-parallelization"]], "Create a Study": [[159, "create-a-study"]], "Share the Study among Multiple Nodes and Processes": [[159, "share-the-study-among-multiple-nodes-and-processes"]], "5. Quick Visualization for Hyperparameter Optimization Analysis": [[160, "quick-visualization-for-hyperparameter-optimization-analysis"]], "Plot functions": [[160, "plot-functions"]], "Computation times": [[162, "computation-times"], [174, "computation-times"]], "Saving/Resuming Study with RDB Backend": [[163, "saving-resuming-study-with-rdb-backend"]], "New Study": [[163, "new-study"]], "Resume Study": [[163, "resume-study"]], "Experimental History": [[163, "experimental-history"]], "Multi-objective Optimization with Optuna": [[164, "multi-objective-optimization-with-optuna"]], "Run multi-objective optimization": [[164, "run-multi-objective-optimization"]], "User Attributes": [[165, "user-attributes"]], "Adding User Attributes to Studies": [[165, "adding-user-attributes-to-studies"]], "Adding User Attributes to Trials": [[165, "adding-user-attributes-to-trials"]], "Command-Line Interface": [[166, "command-line-interface"]], "User-Defined Sampler": [[167, "user-defined-sampler"]], "Overview of Sampler": [[167, "overview-of-sampler"]], "An Example: Implementing SimulatedAnnealingSampler": [[167, "an-example-implementing-simulatedannealingsampler"]], "User-Defined Pruner": [[168, "user-defined-pruner"]], "Overview of Pruning Interface": [[168, "overview-of-pruning-interface"]], "An Example: Implementing LastPlacePruner": [[168, "an-example-implementing-lastplacepruner"]], "Callback for Study.optimize": [[169, "callback-for-study-optimize"]], "Stop optimization after some trials are pruned in a row": [[169, "stop-optimization-after-some-trials-are-pruned-in-a-row"]], "Specify Hyperparameters Manually": [[170, "specify-hyperparameters-manually"]], "First Scenario: Have Optuna evaluate your hyperparameters": [[170, "first-scenario-have-optuna-evaluate-your-hyperparameters"]], "Second scenario: Have Optuna utilize already evaluated hyperparameters": [[170, "second-scenario-have-optuna-utilize-already-evaluated-hyperparameters"]], "Ask-and-Tell Interface": [[171, "ask-and-tell-interface"]], "Apply Optuna to an existing optimization problem with minimum modifications": [[171, "apply-optuna-to-an-existing-optimization-problem-with-minimum-modifications"]], "Define-and-Run": [[171, "define-and-run"]], "Batch Optimization": [[171, "batch-optimization"]], "Re-use the best trial": [[172, "re-use-the-best-trial"]], "Investigating the best model further": [[172, "investigating-the-best-model-further"]], "The difference between best_trial and ordinal trials": [[172, "the-difference-between-best-trial-and-ordinal-trials"]], "Recipes": [[173, "recipes"], [175, "recipes"]], "Tutorial": [[175, "tutorial"]]}, "indexentries": {"module": [[5, "module-optuna.cli"], [6, "module-optuna.distributions"], [7, "module-optuna.exceptions"], [106, "module-optuna.importance"], [108, "module-optuna.integration"], [109, "module-optuna.logging"], [110, "module-optuna"], [111, "module-optuna.pruners"], [131, "module-optuna.samplers"], [132, "module-optuna.samplers.nsgaii"], [133, "module-optuna.storages"], [134, "module-optuna.study"], [135, "module-optuna.trial"], [154, "module-optuna.visualization"], [155, "module-optuna.visualization.matplotlib"]], "optuna.cli": [[5, "module-optuna.cli"]], "optuna.distributions": [[6, "module-optuna.distributions"]], "optuna.exceptions": [[7, "module-optuna.exceptions"]], "trialpruned": [[8, "optuna.TrialPruned"], [27, "optuna.exceptions.TrialPruned"]], "copy_study() (in module optuna)": [[9, "optuna.copy_study"]], "create_study() (in module optuna)": [[10, "optuna.create_study"]], "delete_study() (in module optuna)": [[11, "optuna.delete_study"]], "categoricaldistribution (class in optuna.distributions)": [[12, "optuna.distributions.CategoricalDistribution"]], "choices (optuna.distributions.categoricaldistribution attribute)": [[12, "optuna.distributions.CategoricalDistribution.choices"]], "single() (optuna.distributions.categoricaldistribution method)": [[12, "optuna.distributions.CategoricalDistribution.single"]], "to_external_repr() (optuna.distributions.categoricaldistribution method)": [[12, "optuna.distributions.CategoricalDistribution.to_external_repr"]], "to_internal_repr() (optuna.distributions.categoricaldistribution method)": [[12, "optuna.distributions.CategoricalDistribution.to_internal_repr"]], "discreteuniformdistribution (class in optuna.distributions)": [[13, "optuna.distributions.DiscreteUniformDistribution"]], "high (optuna.distributions.discreteuniformdistribution attribute)": [[13, "optuna.distributions.DiscreteUniformDistribution.high"]], "low (optuna.distributions.discreteuniformdistribution attribute)": [[13, "optuna.distributions.DiscreteUniformDistribution.low"]], "q (optuna.distributions.discreteuniformdistribution property)": [[13, "optuna.distributions.DiscreteUniformDistribution.q"]], "single() (optuna.distributions.discreteuniformdistribution method)": [[13, "optuna.distributions.DiscreteUniformDistribution.single"]], "to_external_repr() (optuna.distributions.discreteuniformdistribution method)": [[13, "optuna.distributions.DiscreteUniformDistribution.to_external_repr"]], "to_internal_repr() (optuna.distributions.discreteuniformdistribution method)": [[13, "optuna.distributions.DiscreteUniformDistribution.to_internal_repr"]], "floatdistribution (class in optuna.distributions)": [[14, "optuna.distributions.FloatDistribution"]], "high (optuna.distributions.floatdistribution attribute)": [[14, "optuna.distributions.FloatDistribution.high"]], "log (optuna.distributions.floatdistribution attribute)": [[14, "optuna.distributions.FloatDistribution.log"]], "low (optuna.distributions.floatdistribution attribute)": [[14, "optuna.distributions.FloatDistribution.low"]], "single() (optuna.distributions.floatdistribution method)": [[14, "optuna.distributions.FloatDistribution.single"]], "step (optuna.distributions.floatdistribution attribute)": [[14, "optuna.distributions.FloatDistribution.step"]], "to_external_repr() (optuna.distributions.floatdistribution method)": [[14, "optuna.distributions.FloatDistribution.to_external_repr"]], "to_internal_repr() (optuna.distributions.floatdistribution method)": [[14, "optuna.distributions.FloatDistribution.to_internal_repr"]], "intdistribution (class in optuna.distributions)": [[15, "optuna.distributions.IntDistribution"]], "high (optuna.distributions.intdistribution attribute)": [[15, "optuna.distributions.IntDistribution.high"]], "log (optuna.distributions.intdistribution attribute)": [[15, "optuna.distributions.IntDistribution.log"]], "low (optuna.distributions.intdistribution attribute)": [[15, "optuna.distributions.IntDistribution.low"]], "single() (optuna.distributions.intdistribution method)": [[15, "optuna.distributions.IntDistribution.single"]], "step (optuna.distributions.intdistribution attribute)": [[15, "optuna.distributions.IntDistribution.step"]], "to_external_repr() (optuna.distributions.intdistribution method)": [[15, "optuna.distributions.IntDistribution.to_external_repr"]], "to_internal_repr() (optuna.distributions.intdistribution method)": [[15, "optuna.distributions.IntDistribution.to_internal_repr"]], "intloguniformdistribution (class in optuna.distributions)": [[16, "optuna.distributions.IntLogUniformDistribution"]], "high (optuna.distributions.intloguniformdistribution attribute)": [[16, "optuna.distributions.IntLogUniformDistribution.high"]], "low (optuna.distributions.intloguniformdistribution attribute)": [[16, "optuna.distributions.IntLogUniformDistribution.low"]], "single() (optuna.distributions.intloguniformdistribution method)": [[16, "optuna.distributions.IntLogUniformDistribution.single"]], "step (optuna.distributions.intloguniformdistribution attribute)": [[16, "optuna.distributions.IntLogUniformDistribution.step"]], "to_external_repr() (optuna.distributions.intloguniformdistribution method)": [[16, "optuna.distributions.IntLogUniformDistribution.to_external_repr"]], "to_internal_repr() (optuna.distributions.intloguniformdistribution method)": [[16, "optuna.distributions.IntLogUniformDistribution.to_internal_repr"]], "intuniformdistribution (class in optuna.distributions)": [[17, "optuna.distributions.IntUniformDistribution"]], "high (optuna.distributions.intuniformdistribution attribute)": [[17, "optuna.distributions.IntUniformDistribution.high"]], "low (optuna.distributions.intuniformdistribution attribute)": [[17, "optuna.distributions.IntUniformDistribution.low"]], "single() (optuna.distributions.intuniformdistribution method)": [[17, "optuna.distributions.IntUniformDistribution.single"]], "step (optuna.distributions.intuniformdistribution attribute)": [[17, "optuna.distributions.IntUniformDistribution.step"]], "to_external_repr() (optuna.distributions.intuniformdistribution method)": [[17, "optuna.distributions.IntUniformDistribution.to_external_repr"]], "to_internal_repr() (optuna.distributions.intuniformdistribution method)": [[17, "optuna.distributions.IntUniformDistribution.to_internal_repr"]], "loguniformdistribution (class in optuna.distributions)": [[18, "optuna.distributions.LogUniformDistribution"]], "high (optuna.distributions.loguniformdistribution attribute)": [[18, "optuna.distributions.LogUniformDistribution.high"]], "low (optuna.distributions.loguniformdistribution attribute)": [[18, "optuna.distributions.LogUniformDistribution.low"]], "single() (optuna.distributions.loguniformdistribution method)": [[18, "optuna.distributions.LogUniformDistribution.single"]], "to_external_repr() (optuna.distributions.loguniformdistribution method)": [[18, "optuna.distributions.LogUniformDistribution.to_external_repr"]], "to_internal_repr() (optuna.distributions.loguniformdistribution method)": [[18, "optuna.distributions.LogUniformDistribution.to_internal_repr"]], "uniformdistribution (class in optuna.distributions)": [[19, "optuna.distributions.UniformDistribution"]], "high (optuna.distributions.uniformdistribution attribute)": [[19, "optuna.distributions.UniformDistribution.high"]], "low (optuna.distributions.uniformdistribution attribute)": [[19, "optuna.distributions.UniformDistribution.low"]], "single() (optuna.distributions.uniformdistribution method)": [[19, "optuna.distributions.UniformDistribution.single"]], "to_external_repr() (optuna.distributions.uniformdistribution method)": [[19, "optuna.distributions.UniformDistribution.to_external_repr"]], "to_internal_repr() (optuna.distributions.uniformdistribution method)": [[19, "optuna.distributions.UniformDistribution.to_internal_repr"]], "check_distribution_compatibility() (in module optuna.distributions)": [[20, "optuna.distributions.check_distribution_compatibility"]], "distribution_to_json() (in module optuna.distributions)": [[21, "optuna.distributions.distribution_to_json"]], "json_to_distribution() (in module optuna.distributions)": [[22, "optuna.distributions.json_to_distribution"]], "cliusageerror": [[23, "optuna.exceptions.CLIUsageError"]], "duplicatedstudyerror": [[24, "optuna.exceptions.DuplicatedStudyError"]], "optunaerror": [[25, "optuna.exceptions.OptunaError"]], "storageinternalerror": [[26, "optuna.exceptions.StorageInternalError"]], "get_all_study_summaries() (in module optuna)": [[28, "optuna.get_all_study_summaries"]], "fanovaimportanceevaluator (class in optuna.importance)": [[29, "optuna.importance.FanovaImportanceEvaluator"]], "evaluate() (optuna.importance.fanovaimportanceevaluator method)": [[29, "optuna.importance.FanovaImportanceEvaluator.evaluate"]], "meandecreaseimpurityimportanceevaluator (class in optuna.importance)": [[30, "optuna.importance.MeanDecreaseImpurityImportanceEvaluator"]], "evaluate() (optuna.importance.meandecreaseimpurityimportanceevaluator method)": [[30, "optuna.importance.MeanDecreaseImpurityImportanceEvaluator.evaluate"]], "get_param_importances() (in module optuna.importance)": [[31, "optuna.importance.get_param_importances"]], "allennlpexecutor (class in optuna.integration)": [[32, "optuna.integration.AllenNLPExecutor"]], "run() (optuna.integration.allennlpexecutor method)": [[32, "optuna.integration.AllenNLPExecutor.run"]], "allennlppruningcallback (class in optuna.integration)": [[33, "optuna.integration.AllenNLPPruningCallback"]], "on_epoch() (optuna.integration.allennlppruningcallback method)": [[33, "optuna.integration.AllenNLPPruningCallback.on_epoch"]], "register() (optuna.integration.allennlppruningcallback class method)": [[33, "optuna.integration.AllenNLPPruningCallback.register"]], "botorchsampler (class in optuna.integration)": [[34, "optuna.integration.BoTorchSampler"]], "after_trial() (optuna.integration.botorchsampler method)": [[34, "optuna.integration.BoTorchSampler.after_trial"]], "infer_relative_search_space() (optuna.integration.botorchsampler method)": [[34, "optuna.integration.BoTorchSampler.infer_relative_search_space"]], "reseed_rng() (optuna.integration.botorchsampler method)": [[34, "optuna.integration.BoTorchSampler.reseed_rng"]], "sample_independent() (optuna.integration.botorchsampler method)": [[34, "optuna.integration.BoTorchSampler.sample_independent"]], "sample_relative() (optuna.integration.botorchsampler method)": [[34, "optuna.integration.BoTorchSampler.sample_relative"]], "catboostpruningcallback (class in optuna.integration)": [[35, "optuna.integration.CatBoostPruningCallback"]], "after_iteration() (optuna.integration.catboostpruningcallback method)": [[35, "optuna.integration.CatBoostPruningCallback.after_iteration"]], "check_pruned() (optuna.integration.catboostpruningcallback method)": [[35, "optuna.integration.CatBoostPruningCallback.check_pruned"]], "catalystpruningcallback (class in optuna.integration)": [[36, "optuna.integration.CatalystPruningCallback"]], "chainermnstudy (class in optuna.integration)": [[37, "optuna.integration.ChainerMNStudy"]], "optimize() (optuna.integration.chainermnstudy method)": [[37, "optuna.integration.ChainerMNStudy.optimize"]], "chainerpruningextension (class in optuna.integration)": [[38, "optuna.integration.ChainerPruningExtension"]], "cmaessampler (class in optuna.integration)": [[39, "optuna.integration.CmaEsSampler"]], "after_trial() (optuna.integration.cmaessampler method)": [[39, "optuna.integration.CmaEsSampler.after_trial"]], "infer_relative_search_space() (optuna.integration.cmaessampler method)": [[39, "optuna.integration.CmaEsSampler.infer_relative_search_space"]], "reseed_rng() (optuna.integration.cmaessampler method)": [[39, "optuna.integration.CmaEsSampler.reseed_rng"]], "sample_independent() (optuna.integration.cmaessampler method)": [[39, "optuna.integration.CmaEsSampler.sample_independent"]], "sample_relative() (optuna.integration.cmaessampler method)": [[39, "optuna.integration.CmaEsSampler.sample_relative"]], "daskstorage (class in optuna.integration)": [[40, "optuna.integration.DaskStorage"]], "check_trial_is_updatable() (optuna.integration.daskstorage method)": [[40, "optuna.integration.DaskStorage.check_trial_is_updatable"]], "create_new_study() (optuna.integration.daskstorage method)": [[40, "optuna.integration.DaskStorage.create_new_study"]], "create_new_trial() (optuna.integration.daskstorage method)": [[40, "optuna.integration.DaskStorage.create_new_trial"]], "delete_study() (optuna.integration.daskstorage method)": [[40, "optuna.integration.DaskStorage.delete_study"]], "get_all_studies() (optuna.integration.daskstorage method)": [[40, "optuna.integration.DaskStorage.get_all_studies"]], "get_all_trials() (optuna.integration.daskstorage method)": [[40, "optuna.integration.DaskStorage.get_all_trials"]], "get_base_storage() (optuna.integration.daskstorage method)": [[40, "optuna.integration.DaskStorage.get_base_storage"]], "get_best_trial() (optuna.integration.daskstorage method)": [[40, "optuna.integration.DaskStorage.get_best_trial"]], "get_n_trials() (optuna.integration.daskstorage method)": [[40, "optuna.integration.DaskStorage.get_n_trials"]], "get_study_directions() (optuna.integration.daskstorage method)": [[40, "optuna.integration.DaskStorage.get_study_directions"]], "get_study_id_from_name() (optuna.integration.daskstorage method)": [[40, "optuna.integration.DaskStorage.get_study_id_from_name"]], "get_study_name_from_id() (optuna.integration.daskstorage method)": [[40, "optuna.integration.DaskStorage.get_study_name_from_id"]], "get_study_system_attrs() (optuna.integration.daskstorage method)": [[40, "optuna.integration.DaskStorage.get_study_system_attrs"]], "get_study_user_attrs() (optuna.integration.daskstorage method)": [[40, "optuna.integration.DaskStorage.get_study_user_attrs"]], "get_trial() (optuna.integration.daskstorage method)": [[40, "optuna.integration.DaskStorage.get_trial"]], "get_trial_id_from_study_id_trial_number() (optuna.integration.daskstorage method)": [[40, "optuna.integration.DaskStorage.get_trial_id_from_study_id_trial_number"]], "get_trial_number_from_id() (optuna.integration.daskstorage method)": [[40, "optuna.integration.DaskStorage.get_trial_number_from_id"]], "get_trial_param() (optuna.integration.daskstorage method)": [[40, "optuna.integration.DaskStorage.get_trial_param"]], "get_trial_params() (optuna.integration.daskstorage method)": [[40, "optuna.integration.DaskStorage.get_trial_params"]], "get_trial_system_attrs() (optuna.integration.daskstorage method)": [[40, "optuna.integration.DaskStorage.get_trial_system_attrs"]], "get_trial_user_attrs() (optuna.integration.daskstorage method)": [[40, "optuna.integration.DaskStorage.get_trial_user_attrs"]], "remove_session() (optuna.integration.daskstorage method)": [[40, "optuna.integration.DaskStorage.remove_session"]], "set_study_system_attr() (optuna.integration.daskstorage method)": [[40, "optuna.integration.DaskStorage.set_study_system_attr"]], "set_study_user_attr() (optuna.integration.daskstorage method)": [[40, "optuna.integration.DaskStorage.set_study_user_attr"]], "set_trial_intermediate_value() (optuna.integration.daskstorage method)": [[40, "optuna.integration.DaskStorage.set_trial_intermediate_value"]], "set_trial_param() (optuna.integration.daskstorage method)": [[40, "optuna.integration.DaskStorage.set_trial_param"]], "set_trial_state_values() (optuna.integration.daskstorage method)": [[40, "optuna.integration.DaskStorage.set_trial_state_values"]], "set_trial_system_attr() (optuna.integration.daskstorage method)": [[40, "optuna.integration.DaskStorage.set_trial_system_attr"]], "set_trial_user_attr() (optuna.integration.daskstorage method)": [[40, "optuna.integration.DaskStorage.set_trial_user_attr"]], "fastaipruningcallback (in module optuna.integration)": [[41, "optuna.integration.FastAIPruningCallback"]], "fastaiv1pruningcallback (class in optuna.integration)": [[42, "optuna.integration.FastAIV1PruningCallback"]], "fastaiv2pruningcallback (class in optuna.integration)": [[43, "optuna.integration.FastAIV2PruningCallback"]], "keraspruningcallback (class in optuna.integration)": [[44, "optuna.integration.KerasPruningCallback"]], "lightgbmpruningcallback (class in optuna.integration)": [[45, "optuna.integration.LightGBMPruningCallback"]], "mlflowcallback (class in optuna.integration)": [[46, "optuna.integration.MLflowCallback"]], "track_in_mlflow() (optuna.integration.mlflowcallback method)": [[46, "optuna.integration.MLflowCallback.track_in_mlflow"]], "mxnetpruningcallback (class in optuna.integration)": [[47, "optuna.integration.MXNetPruningCallback"]], "optunasearchcv (class in optuna.integration)": [[48, "optuna.integration.OptunaSearchCV"]], "best_estimator_ (optuna.integration.optunasearchcv attribute)": [[48, "optuna.integration.OptunaSearchCV.best_estimator_"]], "best_index_ (optuna.integration.optunasearchcv property)": [[48, "optuna.integration.OptunaSearchCV.best_index_"]], "best_params_ (optuna.integration.optunasearchcv property)": [[48, "optuna.integration.OptunaSearchCV.best_params_"]], "best_score_ (optuna.integration.optunasearchcv property)": [[48, "optuna.integration.OptunaSearchCV.best_score_"]], "best_trial_ (optuna.integration.optunasearchcv property)": [[48, "optuna.integration.OptunaSearchCV.best_trial_"]], "classes_ (optuna.integration.optunasearchcv property)": [[48, "optuna.integration.OptunaSearchCV.classes_"]], "decision_function (optuna.integration.optunasearchcv property)": [[48, "optuna.integration.OptunaSearchCV.decision_function"]], "fit() (optuna.integration.optunasearchcv method)": [[48, "optuna.integration.OptunaSearchCV.fit"]], "get_params() (optuna.integration.optunasearchcv method)": [[48, "optuna.integration.OptunaSearchCV.get_params"]], "inverse_transform (optuna.integration.optunasearchcv property)": [[48, "optuna.integration.OptunaSearchCV.inverse_transform"]], "n_splits_ (optuna.integration.optunasearchcv attribute)": [[48, "optuna.integration.OptunaSearchCV.n_splits_"]], "n_trials_ (optuna.integration.optunasearchcv property)": [[48, "optuna.integration.OptunaSearchCV.n_trials_"]], "predict (optuna.integration.optunasearchcv property)": [[48, "optuna.integration.OptunaSearchCV.predict"]], "predict_log_proba (optuna.integration.optunasearchcv property)": [[48, "optuna.integration.OptunaSearchCV.predict_log_proba"]], "predict_proba (optuna.integration.optunasearchcv property)": [[48, "optuna.integration.OptunaSearchCV.predict_proba"]], "refit_time_ (optuna.integration.optunasearchcv attribute)": [[48, "optuna.integration.OptunaSearchCV.refit_time_"]], "sample_indices_ (optuna.integration.optunasearchcv attribute)": [[48, "optuna.integration.OptunaSearchCV.sample_indices_"]], "score() (optuna.integration.optunasearchcv method)": [[48, "optuna.integration.OptunaSearchCV.score"]], "score_samples (optuna.integration.optunasearchcv property)": [[48, "optuna.integration.OptunaSearchCV.score_samples"]], "scorer_ (optuna.integration.optunasearchcv attribute)": [[48, "optuna.integration.OptunaSearchCV.scorer_"]], "set_params() (optuna.integration.optunasearchcv method)": [[48, "optuna.integration.OptunaSearchCV.set_params"]], "set_user_attr (optuna.integration.optunasearchcv property)": [[48, "optuna.integration.OptunaSearchCV.set_user_attr"]], "study_ (optuna.integration.optunasearchcv attribute)": [[48, "optuna.integration.OptunaSearchCV.study_"]], "transform (optuna.integration.optunasearchcv property)": [[48, "optuna.integration.OptunaSearchCV.transform"]], "trials_ (optuna.integration.optunasearchcv property)": [[48, "optuna.integration.OptunaSearchCV.trials_"]], "trials_dataframe (optuna.integration.optunasearchcv property)": [[48, "optuna.integration.OptunaSearchCV.trials_dataframe"]], "user_attrs_ (optuna.integration.optunasearchcv property)": [[48, "optuna.integration.OptunaSearchCV.user_attrs_"]], "pycmasampler (class in optuna.integration)": [[49, "optuna.integration.PyCmaSampler"]], "after_trial() (optuna.integration.pycmasampler method)": [[49, "optuna.integration.PyCmaSampler.after_trial"]], "infer_relative_search_space() (optuna.integration.pycmasampler method)": [[49, "optuna.integration.PyCmaSampler.infer_relative_search_space"]], "reseed_rng() (optuna.integration.pycmasampler method)": [[49, "optuna.integration.PyCmaSampler.reseed_rng"]], "sample_independent() (optuna.integration.pycmasampler method)": [[49, "optuna.integration.PyCmaSampler.sample_independent"]], "sample_relative() (optuna.integration.pycmasampler method)": [[49, "optuna.integration.PyCmaSampler.sample_relative"]], "pytorchignitepruninghandler (class in optuna.integration)": [[50, "optuna.integration.PyTorchIgnitePruningHandler"]], "pytorchlightningpruningcallback (class in optuna.integration)": [[51, "optuna.integration.PyTorchLightningPruningCallback"]], "shapleyimportanceevaluator (class in optuna.integration)": [[52, "optuna.integration.ShapleyImportanceEvaluator"]], "evaluate() (optuna.integration.shapleyimportanceevaluator method)": [[52, "optuna.integration.ShapleyImportanceEvaluator.evaluate"]], "skoptsampler (class in optuna.integration)": [[53, "optuna.integration.SkoptSampler"]], "after_trial() (optuna.integration.skoptsampler method)": [[53, "optuna.integration.SkoptSampler.after_trial"]], "infer_relative_search_space() (optuna.integration.skoptsampler method)": [[53, "optuna.integration.SkoptSampler.infer_relative_search_space"]], "reseed_rng() (optuna.integration.skoptsampler method)": [[53, "optuna.integration.SkoptSampler.reseed_rng"]], "sample_independent() (optuna.integration.skoptsampler method)": [[53, "optuna.integration.SkoptSampler.sample_independent"]], "sample_relative() (optuna.integration.skoptsampler method)": [[53, "optuna.integration.SkoptSampler.sample_relative"]], "skorchpruningcallback (class in optuna.integration)": [[54, "optuna.integration.SkorchPruningCallback"]], "tfkeraspruningcallback (class in optuna.integration)": [[55, "optuna.integration.TFKerasPruningCallback"]], "tensorboardcallback (class in optuna.integration)": [[56, "optuna.integration.TensorBoardCallback"]], "tensorflowpruninghook (class in optuna.integration)": [[57, "optuna.integration.TensorFlowPruningHook"]], "torchdistributedtrial (class in optuna.integration)": [[58, "optuna.integration.TorchDistributedTrial"]], "set_system_attr() (optuna.integration.torchdistributedtrial method)": [[58, "optuna.integration.TorchDistributedTrial.set_system_attr"]], "suggest_discrete_uniform() (optuna.integration.torchdistributedtrial method)": [[58, "optuna.integration.TorchDistributedTrial.suggest_discrete_uniform"]], "suggest_loguniform() (optuna.integration.torchdistributedtrial method)": [[58, "optuna.integration.TorchDistributedTrial.suggest_loguniform"]], "suggest_uniform() (optuna.integration.torchdistributedtrial method)": [[58, "optuna.integration.TorchDistributedTrial.suggest_uniform"]], "system_attrs (optuna.integration.torchdistributedtrial property)": [[58, "optuna.integration.TorchDistributedTrial.system_attrs"]], "weightsandbiasescallback (class in optuna.integration)": [[59, "optuna.integration.WeightsAndBiasesCallback"]], "track_in_wandb() (optuna.integration.weightsandbiasescallback method)": [[59, "optuna.integration.WeightsAndBiasesCallback.track_in_wandb"]], "xgboostpruningcallback (class in optuna.integration)": [[60, "optuna.integration.XGBoostPruningCallback"]], "dump_best_config() (in module optuna.integration.allennlp)": [[61, "optuna.integration.allennlp.dump_best_config"]], "qehvi_candidates_func() (in module optuna.integration.botorch)": [[62, "optuna.integration.botorch.qehvi_candidates_func"]], "qei_candidates_func() (in module optuna.integration.botorch)": [[63, "optuna.integration.botorch.qei_candidates_func"]], "qnehvi_candidates_func() (in module optuna.integration.botorch)": [[64, "optuna.integration.botorch.qnehvi_candidates_func"]], "qparego_candidates_func() (in module optuna.integration.botorch)": [[65, "optuna.integration.botorch.qparego_candidates_func"]], "lightgbmtuner (class in optuna.integration.lightgbm)": [[66, "optuna.integration.lightgbm.LightGBMTuner"]], "best_params (optuna.integration.lightgbm.lightgbmtuner property)": [[66, "optuna.integration.lightgbm.LightGBMTuner.best_params"]], "best_score (optuna.integration.lightgbm.lightgbmtuner property)": [[66, "optuna.integration.lightgbm.LightGBMTuner.best_score"]], "get_best_booster() (optuna.integration.lightgbm.lightgbmtuner method)": [[66, "optuna.integration.lightgbm.LightGBMTuner.get_best_booster"]], "run() (optuna.integration.lightgbm.lightgbmtuner method)": [[66, "optuna.integration.lightgbm.LightGBMTuner.run"]], "sample_train_set() (optuna.integration.lightgbm.lightgbmtuner method)": [[66, "optuna.integration.lightgbm.LightGBMTuner.sample_train_set"]], "lightgbmtunercv (class in optuna.integration.lightgbm)": [[67, "optuna.integration.lightgbm.LightGBMTunerCV"]], "best_params (optuna.integration.lightgbm.lightgbmtunercv property)": [[67, "optuna.integration.lightgbm.LightGBMTunerCV.best_params"]], "best_score (optuna.integration.lightgbm.lightgbmtunercv property)": [[67, "optuna.integration.lightgbm.LightGBMTunerCV.best_score"]], "get_best_booster() (optuna.integration.lightgbm.lightgbmtunercv method)": [[67, "optuna.integration.lightgbm.LightGBMTunerCV.get_best_booster"]], "run() (optuna.integration.lightgbm.lightgbmtunercv method)": [[67, "optuna.integration.lightgbm.LightGBMTunerCV.run"]], "sample_train_set() (optuna.integration.lightgbm.lightgbmtunercv method)": [[67, "optuna.integration.lightgbm.LightGBMTunerCV.sample_train_set"]], "train() (in module optuna.integration.lightgbm)": [[68, "optuna.integration.lightgbm.train"]], "load_study() (in module optuna)": [[69, "optuna.load_study"]], "disable_default_handler() (in module optuna.logging)": [[70, "optuna.logging.disable_default_handler"]], "disable_propagation() (in module optuna.logging)": [[71, "optuna.logging.disable_propagation"]], "enable_default_handler() (in module optuna.logging)": [[72, "optuna.logging.enable_default_handler"]], "enable_propagation() (in module optuna.logging)": [[73, "optuna.logging.enable_propagation"]], "get_verbosity() (in module optuna.logging)": [[74, "optuna.logging.get_verbosity"]], "set_verbosity() (in module optuna.logging)": [[75, "optuna.logging.set_verbosity"]], "basepruner (class in optuna.pruners)": [[76, "optuna.pruners.BasePruner"]], "prune() (optuna.pruners.basepruner method)": [[76, "optuna.pruners.BasePruner.prune"]], "hyperbandpruner (class in optuna.pruners)": [[77, "optuna.pruners.HyperbandPruner"]], "prune() (optuna.pruners.hyperbandpruner method)": [[77, "optuna.pruners.HyperbandPruner.prune"]], "medianpruner (class in optuna.pruners)": [[78, "optuna.pruners.MedianPruner"]], "prune() (optuna.pruners.medianpruner method)": [[78, "optuna.pruners.MedianPruner.prune"]], "noppruner (class in optuna.pruners)": [[79, "optuna.pruners.NopPruner"]], "prune() (optuna.pruners.noppruner method)": [[79, "optuna.pruners.NopPruner.prune"]], "patientpruner (class in optuna.pruners)": [[80, "optuna.pruners.PatientPruner"]], "prune() (optuna.pruners.patientpruner method)": [[80, "optuna.pruners.PatientPruner.prune"]], "percentilepruner (class in optuna.pruners)": [[81, "optuna.pruners.PercentilePruner"]], "prune() (optuna.pruners.percentilepruner method)": [[81, "optuna.pruners.PercentilePruner.prune"]], "successivehalvingpruner (class in optuna.pruners)": [[82, "optuna.pruners.SuccessiveHalvingPruner"]], "prune() (optuna.pruners.successivehalvingpruner method)": [[82, "optuna.pruners.SuccessiveHalvingPruner.prune"]], "thresholdpruner (class in optuna.pruners)": [[83, "optuna.pruners.ThresholdPruner"]], "prune() (optuna.pruners.thresholdpruner method)": [[83, "optuna.pruners.ThresholdPruner.prune"]], "journalfileopenlock (class in optuna.storages)": [[84, "optuna.storages.JournalFileOpenLock"]], "acquire() (optuna.storages.journalfileopenlock method)": [[84, "optuna.storages.JournalFileOpenLock.acquire"]], "release() (optuna.storages.journalfileopenlock method)": [[84, "optuna.storages.JournalFileOpenLock.release"]], "journalfilestorage (class in optuna.storages)": [[85, "optuna.storages.JournalFileStorage"]], "append_logs() (optuna.storages.journalfilestorage method)": [[85, "optuna.storages.JournalFileStorage.append_logs"]], "read_logs() (optuna.storages.journalfilestorage method)": [[85, "optuna.storages.JournalFileStorage.read_logs"]], "journalfilesymlinklock (class in optuna.storages)": [[86, "optuna.storages.JournalFileSymlinkLock"]], "acquire() (optuna.storages.journalfilesymlinklock method)": [[86, "optuna.storages.JournalFileSymlinkLock.acquire"]], "release() (optuna.storages.journalfilesymlinklock method)": [[86, "optuna.storages.JournalFileSymlinkLock.release"]], "journalredisstorage (class in optuna.storages)": [[87, "optuna.storages.JournalRedisStorage"]], "append_logs() (optuna.storages.journalredisstorage method)": [[87, "optuna.storages.JournalRedisStorage.append_logs"]], "load_snapshot() (optuna.storages.journalredisstorage method)": [[87, "optuna.storages.JournalRedisStorage.load_snapshot"]], "read_logs() (optuna.storages.journalredisstorage method)": [[87, "optuna.storages.JournalRedisStorage.read_logs"]], "save_snapshot() (optuna.storages.journalredisstorage method)": [[87, "optuna.storages.JournalRedisStorage.save_snapshot"]], "journalstorage (class in optuna.storages)": [[88, "optuna.storages.JournalStorage"]], "check_trial_is_updatable() (optuna.storages.journalstorage method)": [[88, "optuna.storages.JournalStorage.check_trial_is_updatable"]], "create_new_study() (optuna.storages.journalstorage method)": [[88, "optuna.storages.JournalStorage.create_new_study"]], "create_new_trial() (optuna.storages.journalstorage method)": [[88, "optuna.storages.JournalStorage.create_new_trial"]], "delete_study() (optuna.storages.journalstorage method)": [[88, "optuna.storages.JournalStorage.delete_study"]], "get_all_studies() (optuna.storages.journalstorage method)": [[88, "optuna.storages.JournalStorage.get_all_studies"]], "get_all_trials() (optuna.storages.journalstorage method)": [[88, "optuna.storages.JournalStorage.get_all_trials"]], "get_best_trial() (optuna.storages.journalstorage method)": [[88, "optuna.storages.JournalStorage.get_best_trial"]], "get_n_trials() (optuna.storages.journalstorage method)": [[88, "optuna.storages.JournalStorage.get_n_trials"]], "get_study_directions() (optuna.storages.journalstorage method)": [[88, "optuna.storages.JournalStorage.get_study_directions"]], "get_study_id_from_name() (optuna.storages.journalstorage method)": [[88, "optuna.storages.JournalStorage.get_study_id_from_name"]], "get_study_name_from_id() (optuna.storages.journalstorage method)": [[88, "optuna.storages.JournalStorage.get_study_name_from_id"]], "get_study_system_attrs() (optuna.storages.journalstorage method)": [[88, "optuna.storages.JournalStorage.get_study_system_attrs"]], "get_study_user_attrs() (optuna.storages.journalstorage method)": [[88, "optuna.storages.JournalStorage.get_study_user_attrs"]], "get_trial() (optuna.storages.journalstorage method)": [[88, "optuna.storages.JournalStorage.get_trial"]], "get_trial_id_from_study_id_trial_number() (optuna.storages.journalstorage method)": [[88, "optuna.storages.JournalStorage.get_trial_id_from_study_id_trial_number"]], "get_trial_number_from_id() (optuna.storages.journalstorage method)": [[88, "optuna.storages.JournalStorage.get_trial_number_from_id"]], "get_trial_param() (optuna.storages.journalstorage method)": [[88, "optuna.storages.JournalStorage.get_trial_param"]], "get_trial_params() (optuna.storages.journalstorage method)": [[88, "optuna.storages.JournalStorage.get_trial_params"]], "get_trial_system_attrs() (optuna.storages.journalstorage method)": [[88, "optuna.storages.JournalStorage.get_trial_system_attrs"]], "get_trial_user_attrs() (optuna.storages.journalstorage method)": [[88, "optuna.storages.JournalStorage.get_trial_user_attrs"]], "remove_session() (optuna.storages.journalstorage method)": [[88, "optuna.storages.JournalStorage.remove_session"]], "set_study_system_attr() (optuna.storages.journalstorage method)": [[88, "optuna.storages.JournalStorage.set_study_system_attr"]], "set_study_user_attr() (optuna.storages.journalstorage method)": [[88, "optuna.storages.JournalStorage.set_study_user_attr"]], "set_trial_intermediate_value() (optuna.storages.journalstorage method)": [[88, "optuna.storages.JournalStorage.set_trial_intermediate_value"]], "set_trial_param() (optuna.storages.journalstorage method)": [[88, "optuna.storages.JournalStorage.set_trial_param"]], "set_trial_state_values() (optuna.storages.journalstorage method)": [[88, "optuna.storages.JournalStorage.set_trial_state_values"]], "set_trial_system_attr() (optuna.storages.journalstorage method)": [[88, "optuna.storages.JournalStorage.set_trial_system_attr"]], "set_trial_user_attr() (optuna.storages.journalstorage method)": [[88, "optuna.storages.JournalStorage.set_trial_user_attr"]], "rdbstorage (class in optuna.storages)": [[89, "optuna.storages.RDBStorage"]], "check_trial_is_updatable() (optuna.storages.rdbstorage method)": [[89, "optuna.storages.RDBStorage.check_trial_is_updatable"]], "create_new_study() (optuna.storages.rdbstorage method)": [[89, "optuna.storages.RDBStorage.create_new_study"]], "create_new_trial() (optuna.storages.rdbstorage method)": [[89, "optuna.storages.RDBStorage.create_new_trial"]], "delete_study() (optuna.storages.rdbstorage method)": [[89, "optuna.storages.RDBStorage.delete_study"]], "get_all_studies() (optuna.storages.rdbstorage method)": [[89, "optuna.storages.RDBStorage.get_all_studies"]], "get_all_trials() (optuna.storages.rdbstorage method)": [[89, "optuna.storages.RDBStorage.get_all_trials"]], "get_all_versions() (optuna.storages.rdbstorage method)": [[89, "optuna.storages.RDBStorage.get_all_versions"]], "get_best_trial() (optuna.storages.rdbstorage method)": [[89, "optuna.storages.RDBStorage.get_best_trial"]], "get_current_version() (optuna.storages.rdbstorage method)": [[89, "optuna.storages.RDBStorage.get_current_version"]], "get_failed_trial_callback() (optuna.storages.rdbstorage method)": [[89, "optuna.storages.RDBStorage.get_failed_trial_callback"]], "get_head_version() (optuna.storages.rdbstorage method)": [[89, "optuna.storages.RDBStorage.get_head_version"]], "get_heartbeat_interval() (optuna.storages.rdbstorage method)": [[89, "optuna.storages.RDBStorage.get_heartbeat_interval"]], "get_n_trials() (optuna.storages.rdbstorage method)": [[89, "optuna.storages.RDBStorage.get_n_trials"]], "get_study_directions() (optuna.storages.rdbstorage method)": [[89, "optuna.storages.RDBStorage.get_study_directions"]], "get_study_id_from_name() (optuna.storages.rdbstorage method)": [[89, "optuna.storages.RDBStorage.get_study_id_from_name"]], "get_study_name_from_id() (optuna.storages.rdbstorage method)": [[89, "optuna.storages.RDBStorage.get_study_name_from_id"]], "get_study_system_attrs() (optuna.storages.rdbstorage method)": [[89, "optuna.storages.RDBStorage.get_study_system_attrs"]], "get_study_user_attrs() (optuna.storages.rdbstorage method)": [[89, "optuna.storages.RDBStorage.get_study_user_attrs"]], "get_trial() (optuna.storages.rdbstorage method)": [[89, "optuna.storages.RDBStorage.get_trial"]], "get_trial_id_from_study_id_trial_number() (optuna.storages.rdbstorage method)": [[89, "optuna.storages.RDBStorage.get_trial_id_from_study_id_trial_number"]], "get_trial_number_from_id() (optuna.storages.rdbstorage method)": [[89, "optuna.storages.RDBStorage.get_trial_number_from_id"]], "get_trial_param() (optuna.storages.rdbstorage method)": [[89, "optuna.storages.RDBStorage.get_trial_param"]], "get_trial_params() (optuna.storages.rdbstorage method)": [[89, "optuna.storages.RDBStorage.get_trial_params"]], "get_trial_system_attrs() (optuna.storages.rdbstorage method)": [[89, "optuna.storages.RDBStorage.get_trial_system_attrs"]], "get_trial_user_attrs() (optuna.storages.rdbstorage method)": [[89, "optuna.storages.RDBStorage.get_trial_user_attrs"]], "record_heartbeat() (optuna.storages.rdbstorage method)": [[89, "optuna.storages.RDBStorage.record_heartbeat"]], "remove_session() (optuna.storages.rdbstorage method)": [[89, "optuna.storages.RDBStorage.remove_session"]], "set_study_system_attr() (optuna.storages.rdbstorage method)": [[89, "optuna.storages.RDBStorage.set_study_system_attr"]], "set_study_user_attr() (optuna.storages.rdbstorage method)": [[89, "optuna.storages.RDBStorage.set_study_user_attr"]], "set_trial_intermediate_value() (optuna.storages.rdbstorage method)": [[89, "optuna.storages.RDBStorage.set_trial_intermediate_value"]], "set_trial_param() (optuna.storages.rdbstorage method)": [[89, "optuna.storages.RDBStorage.set_trial_param"]], "set_trial_state_values() (optuna.storages.rdbstorage method)": [[89, "optuna.storages.RDBStorage.set_trial_state_values"]], "set_trial_system_attr() (optuna.storages.rdbstorage method)": [[89, "optuna.storages.RDBStorage.set_trial_system_attr"]], "set_trial_user_attr() (optuna.storages.rdbstorage method)": [[89, "optuna.storages.RDBStorage.set_trial_user_attr"]], "upgrade() (optuna.storages.rdbstorage method)": [[89, "optuna.storages.RDBStorage.upgrade"]], "retryfailedtrialcallback (class in optuna.storages)": [[90, "optuna.storages.RetryFailedTrialCallback"]], "retried_trial_number() (optuna.storages.retryfailedtrialcallback static method)": [[90, "optuna.storages.RetryFailedTrialCallback.retried_trial_number"]], "retry_history() (optuna.storages.retryfailedtrialcallback static method)": [[90, "optuna.storages.RetryFailedTrialCallback.retry_history"]], "fail_stale_trials() (in module optuna.storages)": [[91, "optuna.storages.fail_stale_trials"]], "maxtrialscallback (class in optuna.study)": [[92, "optuna.study.MaxTrialsCallback"]], "study (class in optuna.study)": [[93, "optuna.study.Study"]], "add_trial() (optuna.study.study method)": [[93, "optuna.study.Study.add_trial"]], "add_trials() (optuna.study.study method)": [[93, "optuna.study.Study.add_trials"]], "ask() (optuna.study.study method)": [[93, "optuna.study.Study.ask"]], "best_params (optuna.study.study property)": [[93, "optuna.study.Study.best_params"]], "best_trial (optuna.study.study property)": [[93, "optuna.study.Study.best_trial"]], "best_trials (optuna.study.study property)": [[93, "optuna.study.Study.best_trials"]], "best_value (optuna.study.study property)": [[93, "optuna.study.Study.best_value"]], "direction (optuna.study.study property)": [[93, "optuna.study.Study.direction"]], "directions (optuna.study.study property)": [[93, "optuna.study.Study.directions"]], "enqueue_trial() (optuna.study.study method)": [[93, "optuna.study.Study.enqueue_trial"]], "get_trials() (optuna.study.study method)": [[93, "optuna.study.Study.get_trials"]], "optimize() (optuna.study.study method)": [[93, "optuna.study.Study.optimize"]], "set_system_attr() (optuna.study.study method)": [[93, "optuna.study.Study.set_system_attr"]], "set_user_attr() (optuna.study.study method)": [[93, "optuna.study.Study.set_user_attr"]], "stop() (optuna.study.study method)": [[93, "optuna.study.Study.stop"]], "system_attrs (optuna.study.study property)": [[93, "optuna.study.Study.system_attrs"]], "tell() (optuna.study.study method)": [[93, "optuna.study.Study.tell"]], "trials (optuna.study.study property)": [[93, "optuna.study.Study.trials"]], "trials_dataframe() (optuna.study.study method)": [[93, "optuna.study.Study.trials_dataframe"]], "user_attrs (optuna.study.study property)": [[93, "optuna.study.Study.user_attrs"]], "maximize (optuna.study.studydirection attribute)": [[94, "optuna.study.StudyDirection.MAXIMIZE"]], "minimize (optuna.study.studydirection attribute)": [[94, "optuna.study.StudyDirection.MINIMIZE"]], "not_set (optuna.study.studydirection attribute)": [[94, "optuna.study.StudyDirection.NOT_SET"]], "studydirection (class in optuna.study)": [[94, "optuna.study.StudyDirection"]], "studysummary (class in optuna.study)": [[95, "optuna.study.StudySummary"]], "best_trial (optuna.study.studysummary attribute)": [[95, "optuna.study.StudySummary.best_trial"]], "datetime_start (optuna.study.studysummary attribute)": [[95, "optuna.study.StudySummary.datetime_start"]], "direction (optuna.study.studysummary attribute)": [[95, "optuna.study.StudySummary.direction"]], "directions (optuna.study.studysummary attribute)": [[95, "optuna.study.StudySummary.directions"]], "n_trials (optuna.study.studysummary attribute)": [[95, "optuna.study.StudySummary.n_trials"]], "study_name (optuna.study.studysummary attribute)": [[95, "optuna.study.StudySummary.study_name"]], "system_attrs (optuna.study.studysummary attribute)": [[95, "optuna.study.StudySummary.system_attrs"]], "user_attrs (optuna.study.studysummary attribute)": [[95, "optuna.study.StudySummary.user_attrs"]], "copy_study() (in module optuna.study)": [[96, "optuna.study.copy_study"]], "create_study() (in module optuna.study)": [[97, "optuna.study.create_study"]], "delete_study() (in module optuna.study)": [[98, "optuna.study.delete_study"]], "get_all_study_summaries() (in module optuna.study)": [[99, "optuna.study.get_all_study_summaries"]], "load_study() (in module optuna.study)": [[100, "optuna.study.load_study"]], "fixedtrial (class in optuna.trial)": [[101, "optuna.trial.FixedTrial"]], "set_system_attr() (optuna.trial.fixedtrial method)": [[101, "optuna.trial.FixedTrial.set_system_attr"]], "suggest_discrete_uniform() (optuna.trial.fixedtrial method)": [[101, "optuna.trial.FixedTrial.suggest_discrete_uniform"]], "suggest_loguniform() (optuna.trial.fixedtrial method)": [[101, "optuna.trial.FixedTrial.suggest_loguniform"]], "suggest_uniform() (optuna.trial.fixedtrial method)": [[101, "optuna.trial.FixedTrial.suggest_uniform"]], "frozentrial (class in optuna.trial)": [[102, "optuna.trial.FrozenTrial"]], "datetime_complete (optuna.trial.frozentrial attribute)": [[102, "optuna.trial.FrozenTrial.datetime_complete"]], "datetime_start (optuna.trial.frozentrial attribute)": [[102, "optuna.trial.FrozenTrial.datetime_start"]], "distributions (optuna.trial.frozentrial attribute)": [[102, "optuna.trial.FrozenTrial.distributions"]], "duration (optuna.trial.frozentrial property)": [[102, "optuna.trial.FrozenTrial.duration"]], "intermediate_values (optuna.trial.frozentrial attribute)": [[102, "optuna.trial.FrozenTrial.intermediate_values"]], "last_step (optuna.trial.frozentrial property)": [[102, "optuna.trial.FrozenTrial.last_step"]], "number (optuna.trial.frozentrial attribute)": [[102, "optuna.trial.FrozenTrial.number"]], "params (optuna.trial.frozentrial attribute)": [[102, "optuna.trial.FrozenTrial.params"]], "report() (optuna.trial.frozentrial method)": [[102, "optuna.trial.FrozenTrial.report"]], "set_system_attr() (optuna.trial.frozentrial method)": [[102, "optuna.trial.FrozenTrial.set_system_attr"]], "should_prune() (optuna.trial.frozentrial method)": [[102, "optuna.trial.FrozenTrial.should_prune"]], "state (optuna.trial.frozentrial attribute)": [[102, "optuna.trial.FrozenTrial.state"]], "suggest_discrete_uniform() (optuna.trial.frozentrial method)": [[102, "optuna.trial.FrozenTrial.suggest_discrete_uniform"]], "suggest_loguniform() (optuna.trial.frozentrial method)": [[102, "optuna.trial.FrozenTrial.suggest_loguniform"]], "suggest_uniform() (optuna.trial.frozentrial method)": [[102, "optuna.trial.FrozenTrial.suggest_uniform"]], "system_attrs (optuna.trial.frozentrial attribute)": [[102, "optuna.trial.FrozenTrial.system_attrs"]], "user_attrs (optuna.trial.frozentrial attribute)": [[102, "optuna.trial.FrozenTrial.user_attrs"]], "value (optuna.trial.frozentrial attribute)": [[102, "optuna.trial.FrozenTrial.value"]], "values (optuna.trial.frozentrial attribute)": [[102, "optuna.trial.FrozenTrial.values"]], "trial (class in optuna.trial)": [[103, "optuna.trial.Trial"]], "datetime_start (optuna.trial.trial property)": [[103, "optuna.trial.Trial.datetime_start"]], "distributions (optuna.trial.trial property)": [[103, "optuna.trial.Trial.distributions"]], "number (optuna.trial.trial property)": [[103, "optuna.trial.Trial.number"]], "params (optuna.trial.trial property)": [[103, "optuna.trial.Trial.params"]], "report() (optuna.trial.trial method)": [[103, "optuna.trial.Trial.report"]], "set_system_attr() (optuna.trial.trial method)": [[103, "optuna.trial.Trial.set_system_attr"]], "set_user_attr() (optuna.trial.trial method)": [[103, "optuna.trial.Trial.set_user_attr"]], "should_prune() (optuna.trial.trial method)": [[103, "optuna.trial.Trial.should_prune"]], "suggest_categorical() (optuna.trial.trial method)": [[103, "optuna.trial.Trial.suggest_categorical"]], "suggest_discrete_uniform() (optuna.trial.trial method)": [[103, "optuna.trial.Trial.suggest_discrete_uniform"]], "suggest_float() (optuna.trial.trial method)": [[103, "optuna.trial.Trial.suggest_float"]], "suggest_int() (optuna.trial.trial method)": [[103, "optuna.trial.Trial.suggest_int"]], "suggest_loguniform() (optuna.trial.trial method)": [[103, "optuna.trial.Trial.suggest_loguniform"]], "suggest_uniform() (optuna.trial.trial method)": [[103, "optuna.trial.Trial.suggest_uniform"]], "system_attrs (optuna.trial.trial property)": [[103, "optuna.trial.Trial.system_attrs"]], "user_attrs (optuna.trial.trial property)": [[103, "optuna.trial.Trial.user_attrs"]], "complete (optuna.trial.trialstate attribute)": [[104, "optuna.trial.TrialState.COMPLETE"]], "fail (optuna.trial.trialstate attribute)": [[104, "optuna.trial.TrialState.FAIL"]], "pruned (optuna.trial.trialstate attribute)": [[104, "optuna.trial.TrialState.PRUNED"]], "running (optuna.trial.trialstate attribute)": [[104, "optuna.trial.TrialState.RUNNING"]], "trialstate (class in optuna.trial)": [[104, "optuna.trial.TrialState"]], "waiting (optuna.trial.trialstate attribute)": [[104, "optuna.trial.TrialState.WAITING"]], "is_finished() (optuna.trial.trialstate method)": [[104, "optuna.trial.TrialState.is_finished"]], "create_trial() (in module optuna.trial)": [[105, "optuna.trial.create_trial"]], "optuna.importance": [[106, "module-optuna.importance"]], "optuna.integration": [[108, "module-optuna.integration"]], "optuna.logging": [[109, "module-optuna.logging"]], "optuna": [[110, "module-optuna"]], "optuna.pruners": [[111, "module-optuna.pruners"]], "basesampler (class in optuna.samplers)": [[112, "optuna.samplers.BaseSampler"]], "after_trial() (optuna.samplers.basesampler method)": [[112, "optuna.samplers.BaseSampler.after_trial"]], "infer_relative_search_space() (optuna.samplers.basesampler method)": [[112, "optuna.samplers.BaseSampler.infer_relative_search_space"]], "reseed_rng() (optuna.samplers.basesampler method)": [[112, "optuna.samplers.BaseSampler.reseed_rng"]], "sample_independent() (optuna.samplers.basesampler method)": [[112, "optuna.samplers.BaseSampler.sample_independent"]], "sample_relative() (optuna.samplers.basesampler method)": [[112, "optuna.samplers.BaseSampler.sample_relative"]], "bruteforcesampler (class in optuna.samplers)": [[113, "optuna.samplers.BruteForceSampler"]], "after_trial() (optuna.samplers.bruteforcesampler method)": [[113, "optuna.samplers.BruteForceSampler.after_trial"]], "infer_relative_search_space() (optuna.samplers.bruteforcesampler method)": [[113, "optuna.samplers.BruteForceSampler.infer_relative_search_space"]], "reseed_rng() (optuna.samplers.bruteforcesampler method)": [[113, "optuna.samplers.BruteForceSampler.reseed_rng"]], "sample_independent() (optuna.samplers.bruteforcesampler method)": [[113, "optuna.samplers.BruteForceSampler.sample_independent"]], "sample_relative() (optuna.samplers.bruteforcesampler method)": [[113, "optuna.samplers.BruteForceSampler.sample_relative"]], "cmaessampler (class in optuna.samplers)": [[114, "optuna.samplers.CmaEsSampler"]], "after_trial() (optuna.samplers.cmaessampler method)": [[114, "optuna.samplers.CmaEsSampler.after_trial"]], "infer_relative_search_space() (optuna.samplers.cmaessampler method)": [[114, "optuna.samplers.CmaEsSampler.infer_relative_search_space"]], "reseed_rng() (optuna.samplers.cmaessampler method)": [[114, "optuna.samplers.CmaEsSampler.reseed_rng"]], "sample_independent() (optuna.samplers.cmaessampler method)": [[114, "optuna.samplers.CmaEsSampler.sample_independent"]], "sample_relative() (optuna.samplers.cmaessampler method)": [[114, "optuna.samplers.CmaEsSampler.sample_relative"]], "gridsampler (class in optuna.samplers)": [[115, "optuna.samplers.GridSampler"]], "after_trial() (optuna.samplers.gridsampler method)": [[115, "optuna.samplers.GridSampler.after_trial"]], "infer_relative_search_space() (optuna.samplers.gridsampler method)": [[115, "optuna.samplers.GridSampler.infer_relative_search_space"]], "reseed_rng() (optuna.samplers.gridsampler method)": [[115, "optuna.samplers.GridSampler.reseed_rng"]], "sample_independent() (optuna.samplers.gridsampler method)": [[115, "optuna.samplers.GridSampler.sample_independent"]], "sample_relative() (optuna.samplers.gridsampler method)": [[115, "optuna.samplers.GridSampler.sample_relative"]], "intersectionsearchspace (class in optuna.samplers)": [[116, "optuna.samplers.IntersectionSearchSpace"]], "calculate() (optuna.samplers.intersectionsearchspace method)": [[116, "optuna.samplers.IntersectionSearchSpace.calculate"]], "motpesampler (class in optuna.samplers)": [[117, "optuna.samplers.MOTPESampler"]], "after_trial() (optuna.samplers.motpesampler method)": [[117, "optuna.samplers.MOTPESampler.after_trial"]], "hyperopt_parameters() (optuna.samplers.motpesampler static method)": [[117, "optuna.samplers.MOTPESampler.hyperopt_parameters"]], "infer_relative_search_space() (optuna.samplers.motpesampler method)": [[117, "optuna.samplers.MOTPESampler.infer_relative_search_space"]], "reseed_rng() (optuna.samplers.motpesampler method)": [[117, "optuna.samplers.MOTPESampler.reseed_rng"]], "sample_independent() (optuna.samplers.motpesampler method)": [[117, "optuna.samplers.MOTPESampler.sample_independent"]], "sample_relative() (optuna.samplers.motpesampler method)": [[117, "optuna.samplers.MOTPESampler.sample_relative"]], "nsgaiisampler (class in optuna.samplers)": [[118, "optuna.samplers.NSGAIISampler"]], "after_trial() (optuna.samplers.nsgaiisampler method)": [[118, "optuna.samplers.NSGAIISampler.after_trial"]], "infer_relative_search_space() (optuna.samplers.nsgaiisampler method)": [[118, "optuna.samplers.NSGAIISampler.infer_relative_search_space"]], "reseed_rng() (optuna.samplers.nsgaiisampler method)": [[118, "optuna.samplers.NSGAIISampler.reseed_rng"]], "sample_independent() (optuna.samplers.nsgaiisampler method)": [[118, "optuna.samplers.NSGAIISampler.sample_independent"]], "sample_relative() (optuna.samplers.nsgaiisampler method)": [[118, "optuna.samplers.NSGAIISampler.sample_relative"]], "partialfixedsampler (class in optuna.samplers)": [[119, "optuna.samplers.PartialFixedSampler"]], "after_trial() (optuna.samplers.partialfixedsampler method)": [[119, "optuna.samplers.PartialFixedSampler.after_trial"]], "infer_relative_search_space() (optuna.samplers.partialfixedsampler method)": [[119, "optuna.samplers.PartialFixedSampler.infer_relative_search_space"]], "reseed_rng() (optuna.samplers.partialfixedsampler method)": [[119, "optuna.samplers.PartialFixedSampler.reseed_rng"]], "sample_independent() (optuna.samplers.partialfixedsampler method)": [[119, "optuna.samplers.PartialFixedSampler.sample_independent"]], "sample_relative() (optuna.samplers.partialfixedsampler method)": [[119, "optuna.samplers.PartialFixedSampler.sample_relative"]], "qmcsampler (class in optuna.samplers)": [[120, "optuna.samplers.QMCSampler"]], "after_trial() (optuna.samplers.qmcsampler method)": [[120, "optuna.samplers.QMCSampler.after_trial"]], "infer_relative_search_space() (optuna.samplers.qmcsampler method)": [[120, "optuna.samplers.QMCSampler.infer_relative_search_space"]], "reseed_rng() (optuna.samplers.qmcsampler method)": [[120, "optuna.samplers.QMCSampler.reseed_rng"]], "sample_independent() (optuna.samplers.qmcsampler method)": [[120, "optuna.samplers.QMCSampler.sample_independent"]], "sample_relative() (optuna.samplers.qmcsampler method)": [[120, "optuna.samplers.QMCSampler.sample_relative"]], "randomsampler (class in optuna.samplers)": [[121, "optuna.samplers.RandomSampler"]], "after_trial() (optuna.samplers.randomsampler method)": [[121, "optuna.samplers.RandomSampler.after_trial"]], "infer_relative_search_space() (optuna.samplers.randomsampler method)": [[121, "optuna.samplers.RandomSampler.infer_relative_search_space"]], "reseed_rng() (optuna.samplers.randomsampler method)": [[121, "optuna.samplers.RandomSampler.reseed_rng"]], "sample_independent() (optuna.samplers.randomsampler method)": [[121, "optuna.samplers.RandomSampler.sample_independent"]], "sample_relative() (optuna.samplers.randomsampler method)": [[121, "optuna.samplers.RandomSampler.sample_relative"]], "tpesampler (class in optuna.samplers)": [[122, "optuna.samplers.TPESampler"]], "after_trial() (optuna.samplers.tpesampler method)": [[122, "optuna.samplers.TPESampler.after_trial"]], "hyperopt_parameters() (optuna.samplers.tpesampler static method)": [[122, "optuna.samplers.TPESampler.hyperopt_parameters"]], "infer_relative_search_space() (optuna.samplers.tpesampler method)": [[122, "optuna.samplers.TPESampler.infer_relative_search_space"]], "reseed_rng() (optuna.samplers.tpesampler method)": [[122, "optuna.samplers.TPESampler.reseed_rng"]], "sample_independent() (optuna.samplers.tpesampler method)": [[122, "optuna.samplers.TPESampler.sample_independent"]], "sample_relative() (optuna.samplers.tpesampler method)": [[122, "optuna.samplers.TPESampler.sample_relative"]], "intersection_search_space() (in module optuna.samplers)": [[123, "optuna.samplers.intersection_search_space"]], "blxalphacrossover (class in optuna.samplers.nsgaii)": [[124, "optuna.samplers.nsgaii.BLXAlphaCrossover"]], "crossover() (optuna.samplers.nsgaii.blxalphacrossover method)": [[124, "optuna.samplers.nsgaii.BLXAlphaCrossover.crossover"]], "basecrossover (class in optuna.samplers.nsgaii)": [[125, "optuna.samplers.nsgaii.BaseCrossover"]], "crossover() (optuna.samplers.nsgaii.basecrossover method)": [[125, "optuna.samplers.nsgaii.BaseCrossover.crossover"]], "n_parents (optuna.samplers.nsgaii.basecrossover property)": [[125, "optuna.samplers.nsgaii.BaseCrossover.n_parents"]], "sbxcrossover (class in optuna.samplers.nsgaii)": [[126, "optuna.samplers.nsgaii.SBXCrossover"]], "crossover() (optuna.samplers.nsgaii.sbxcrossover method)": [[126, "optuna.samplers.nsgaii.SBXCrossover.crossover"]], "spxcrossover (class in optuna.samplers.nsgaii)": [[127, "optuna.samplers.nsgaii.SPXCrossover"]], "crossover() (optuna.samplers.nsgaii.spxcrossover method)": [[127, "optuna.samplers.nsgaii.SPXCrossover.crossover"]], "undxcrossover (class in optuna.samplers.nsgaii)": [[128, "optuna.samplers.nsgaii.UNDXCrossover"]], "crossover() (optuna.samplers.nsgaii.undxcrossover method)": [[128, "optuna.samplers.nsgaii.UNDXCrossover.crossover"]], "uniformcrossover (class in optuna.samplers.nsgaii)": [[129, "optuna.samplers.nsgaii.UniformCrossover"]], "crossover() (optuna.samplers.nsgaii.uniformcrossover method)": [[129, "optuna.samplers.nsgaii.UniformCrossover.crossover"]], "vsbxcrossover (class in optuna.samplers.nsgaii)": [[130, "optuna.samplers.nsgaii.VSBXCrossover"]], "crossover() (optuna.samplers.nsgaii.vsbxcrossover method)": [[130, "optuna.samplers.nsgaii.VSBXCrossover.crossover"]], "optuna.samplers": [[131, "module-optuna.samplers"]], "optuna.samplers.nsgaii": [[132, "module-optuna.samplers.nsgaii"]], "optuna.storages": [[133, "module-optuna.storages"]], "optuna.study": [[134, "module-optuna.study"]], "optuna.trial": [[135, "module-optuna.trial"]], "is_available() (in module optuna.visualization)": [[136, "optuna.visualization.is_available"]], "is_available() (in module optuna.visualization.matplotlib)": [[137, "optuna.visualization.matplotlib.is_available"]], "plot_contour() (in module optuna.visualization.matplotlib)": [[138, "optuna.visualization.matplotlib.plot_contour"]], "plot_edf() (in module optuna.visualization.matplotlib)": [[139, "optuna.visualization.matplotlib.plot_edf"]], "plot_intermediate_values() (in module optuna.visualization.matplotlib)": [[140, "optuna.visualization.matplotlib.plot_intermediate_values"]], "plot_optimization_history() (in module optuna.visualization.matplotlib)": [[141, "optuna.visualization.matplotlib.plot_optimization_history"]], "plot_parallel_coordinate() (in module optuna.visualization.matplotlib)": [[142, "optuna.visualization.matplotlib.plot_parallel_coordinate"]], "plot_param_importances() (in module optuna.visualization.matplotlib)": [[143, "optuna.visualization.matplotlib.plot_param_importances"]], "plot_pareto_front() (in module optuna.visualization.matplotlib)": [[144, "optuna.visualization.matplotlib.plot_pareto_front"]], "plot_slice() (in module optuna.visualization.matplotlib)": [[145, "optuna.visualization.matplotlib.plot_slice"]], "plot_contour() (in module optuna.visualization)": [[146, "optuna.visualization.plot_contour"]], "plot_edf() (in module optuna.visualization)": [[147, "optuna.visualization.plot_edf"]], "plot_intermediate_values() (in module optuna.visualization)": [[148, "optuna.visualization.plot_intermediate_values"]], "plot_optimization_history() (in module optuna.visualization)": [[149, "optuna.visualization.plot_optimization_history"]], "plot_parallel_coordinate() (in module optuna.visualization)": [[150, "optuna.visualization.plot_parallel_coordinate"]], "plot_param_importances() (in module optuna.visualization)": [[151, "optuna.visualization.plot_param_importances"]], "plot_pareto_front() (in module optuna.visualization)": [[152, "optuna.visualization.plot_pareto_front"]], "plot_slice() (in module optuna.visualization)": [[153, "optuna.visualization.plot_slice"]], "optuna.visualization": [[154, "module-optuna.visualization"]], "optuna.visualization.matplotlib": [[155, "module-optuna.visualization.matplotlib"]]}})